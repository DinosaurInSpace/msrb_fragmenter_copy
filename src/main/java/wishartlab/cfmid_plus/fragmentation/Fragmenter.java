/**
 * 
 */
package wishartlab.cfmid_plus.fragmentation;

/**
 * @author Yannick Djoumbou Feunang
 *
 */

import wishartlab.cfmid_plus.molecules.StructureExplorer;
import wishartlab.cfmid_plus.molecules.StructuralClass;
import wishartlab.cfmid_plus.molecules.StructuralClass.ClassName;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import org.openscience.cdk.AtomContainer;
import org.openscience.cdk.AtomContainerSet;
import org.openscience.cdk.CDKConstants;
import org.openscience.cdk.DefaultChemObjectBuilder;
import org.openscience.cdk.exception.CDKException;
import org.openscience.cdk.interfaces.IAtomContainer;
import org.openscience.cdk.interfaces.IAtomContainerSet;
import org.openscience.cdk.interfaces.IChemObjectBuilder;
import org.openscience.cdk.io.iterator.IteratingSDFReader;
import org.openscience.cdk.silent.SilentChemObjectBuilder;
import org.openscience.cdk.smiles.SmilesGenerator;
import org.openscience.cdk.smiles.SmilesParser;
import org.openscience.cdk.smiles.smarts.SmartsPattern;
import org.openscience.cdk.tools.manipulator.AtomContainerManipulator;

import ambit2.smarts.SMIRKSManager;
import ambit2.smarts.SMIRKSReaction;
import ambit2.smarts.query.SMARTSException;



//import org.rosuda.REngine.*;
//import org.rosuda.REngine.Rserve.*;

import org.rosuda.REngine.REXP;
import org.rosuda.REngine.REXPMismatchException;
import org.rosuda.REngine.REngineException;
import org.rosuda.REngine.RList;
import org.rosuda.REngine.Rserve.RConnection;
import org.rosuda.REngine.Rserve.RserveException;


import org.rosuda.REngine.Rserve.*;
//import RserveEngine;

import org.math.R.Rsession;

/**
 * This class describes the Fragmenter, which takes a molecule and returns the possible fragments according
 * to more elaborate fragmentation patterns
 * 
 * References:
 * R1: Murphy RC et al (2001) Chem. Rev. 2001, 101, 479âˆ’526
 * 
 * 
 * @author yandj
 *
 */

/**
 */


public class Fragmenter {

	public static LinkedHashMap<ClassName, String[][]> fragmentationPatterns;
	IChemObjectBuilder bldr = SilentChemObjectBuilder.getInstance();
	private SMIRKSManager smrkMan = new SMIRKSManager(bldr);
	private AtomContainerManipulator acm = new AtomContainerManipulator();
	private String host;
	private int port;
	StructureExplorer sExplorer = new StructureExplorer();
		
//	static {
//		fragmentationPatterns = new LinkedHashMap<ClassName, String[]>();
//
//		fragmentationPatterns.put(ClassName.PHOSPHATIDYLCHOLINES, new String[]{
//				
//				"[#6;A;H3X4]!@-[N+](!@-[#6;A;H3X4])(!@-[#6;A;H3X4])!@-[#6;A;H2X4]!@-[#6;A;H2X4]!@-[#8;X2]!@-P(!@-[#8;A;X2H1,X1-])(!@=[O;X1])!@-[#8;X2]!@-[#6;A;H2X4]!@-[#6](!@-[#6;A;H2X4]!@-[#8;X2]!@-[#6:1]([#6,#1;A:2])!@=[O;X1:3])!@-[#8;X2]!@-[#6:4]([#6,#1;A:5])!@=[O;X1:6]>>[#6,#1;A:2][#6:1]!@=[O;X1:3].[#6,#1;A:5][#6:4]!@=[O;X1:6]"
//		});
//		
//
//		fragmentationPatterns.put(ClassName._1_LYSOPHOSPHATIDYLCHOLINES, new String[]{
//				// sn-1
//			"[#6;A;H3X4][N;X4+]([#6;A;H3X4])([#6;A;H3X4])!@-[#6;A;H2X4]!@-[#6;A;H2X4]!@-[#8;X2][P;X4]([#8;A;X2H1,X1-])(=[O;X1])[#8;X2]!@-[#6;A;H2X4]!@-[#6;A;H1X4]([#8;A;H1X2])!@-[#6;A;H2X4]!@-[#8]!@-[#6:1]([#6,#1;A:2])!@=[O;X1:3]>>[#6,#1;A:2][#6:1]!@=[O;X1:3]"	
//		});
//
//
//		fragmentationPatterns.put(ClassName._2_LYSOPHOSPHATIDYLCHOLINES, new String[]{
//				// sn-2
//				"[#6;A;H3X4][N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H2X4][#6;A;H2X4][#8;X2]P([#8;X2H1,X1-])(=[O;X1])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#8;X2]-[#6:1]([#6,#1;A:2])=[O;X1:3]>>[#6,#1;A:2][#6:1]=[O;X1:3]"
//		});
//		
//		
//		fragmentationPatterns.put(ClassName.PLASMENYLPHOSPHATIDYLCHOLINES, new String[]{
//				// 
//				"[#6;H3X4][N+]([#6;H3X4])([#6;H3X4])[#6;H2X4]-[#6;H2X4]-[#8;X2]P([#8;A;X2H1,X1-])(=[O;X1])[#8;X2]-[#6;H2X4]-[#6;H1X4](-[#6;H2X4]-[#8]-[#6;H1X3:1]=[#6;X3:2])-[#8;X2]-[#6:3]([#6,#1;A:4])=[O;X1:5]>>[H][#6;X3:1](-[#8])=[#6;X3:2].[#6:3]([#6,#1;A:4])=[O;X1:5]"
//				
//		});
//		
//		fragmentationPatterns.put(ClassName.PHOSPHATIDYLETHANOLAMINES, new String[]{
//				"[#7;A;H2X3][#6;A;H2X4][#6;A;H2X4][#8;X2R0]P([#8;A;X2H1,X1-])(=[O;X1])[#8;X2R0][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2R0]-[#6;R0:1]([#6,#1;A:2])=[O;X1R0:3])[#8;X2R0]-[#6;R0:4]([#6,#1;A:5])=[O;R0:6]>>[#6,#1;A:2][#6;R0:1]=[O;X1R0:3].[#6,#1;A:5][#6;R0:4]=[O;R0:6]"		
//		});
//		
//				
//		fragmentationPatterns.put(ClassName._1_LYSOPHOSPHATIDYLETHANOLAMINES, new String[]{
//			"[#7;A;H2X3][#6;A;H2X4][#6;A;H2X4][#8;X2R0]P([#8;A;X2H1,X1-])(=[O;X1])[#8;X2R0][#6;A;H2X4][#6;A;H1X4]([#8;H1X2R0])[#6;A;H2X4][#8;X2R0]-[#6;R0:1]([#6,#1;A:2])=[O;X1R0:3]>>[#6,#1;A:2][#6;R0:1]=[O;X1R0:3]"	
//		});
//		
//		
//		fragmentationPatterns.put(ClassName._2_LYSOPHOSPHATIDYLETHANOLAMINES, new String[]{
//			"[#7;A;H2X3][#6;A;H2X4][#6;A;H2X4][#8;X2R0]P([#8;A;X2H1,X1-])(=[O;X1])[#8;X2R0][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;H1X2R0])[#8;X2R0]-[#6;R0:1]([#6,#1;A:2])=[O;X1R0:3]>>[#6,#1;A:2][#6;R0:1]=[O;X1R0:3]"	
//		});
//		
//		
//		fragmentationPatterns.put(ClassName.PLASMENYLPHOSPHATIDYLETHANOLAMINES, new String[]{
//			"[#7;A;H2X3][#6;H2X4]-[#6;H2X4]-[#8;X2]P([#8;A;X2H1,X1-])(=[O;X1])[#8;X2]-[#6;H2X4]-[#6;H1X4](-[#6;H2X4]-[#8:1]-[#6;H1X3:2]=[#6;X3:3])-[#8;X2]-[#6:4]([#6,#1;A:5])=[O;X1:6]>>[#6,#1;A:5][#6:4]=[O;X1:6].[H][#6;X3:2](-[#8:1])=[#6;X3:3]"	
//		});
//		
//		fragmentationPatterns.put(ClassName.PHOSPHATIDYLSERINES, new String[]{
//				"[#7;A;H2X3][#6;H1X4]([#6;A;H2X4][#8]P([#8;A;X2H1,X1-])(=O)[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2R0]-[#6;R0:1]([#6,#1;A:2])=[O;R0:3])[#8;R0]-[#6;R0:4]([#6,#1;A:5])=[O;R0:6])-[#6]([#8;A;X2H1,X1-])=O>>[#6,#1;A:2][#6;R0:1]=[O;R0:3].[#6,#1;A:5][#6;R0:4]=[O;R0:6]"
//		});
//		
//		
//		//SPHINGOMYELINS NO NEED TO FRAGMENT
//		
//		
//		fragmentationPatterns.put(ClassName.PHOSPHATIDIC_ACIDS, new String[]{
//				"[#8;A;X2H1,X1-][P;X4]([#8;A;X2H1,X1-])(=[O;X1])[#8;X2][#6;A;H2X4][#6;H1X4R0]([#6;A;H2X4][#8;A;X2:4][#6;R0:2]([#6,#1;A:1])=[O;X1:3])[#8;A;X2:5][#6;R0:6]([#6,#1;A:7])=[O;X1:8]>>[#8;A;X2:4][#6;R0:2]([#6,#1;A:1])=[O;X1:3].[#8;A;X2:5][#6;R0:6]([#6,#1;A:7])=[O;X1:8]"
//		});
//		
//		fragmentationPatterns.put(ClassName._1_LYSOPHOSPHATIDIC_ACIDS, new String[]{
//				"[#8;A;H1X2:1][#6;H1X4R0:2]([#6;A;H2X4:3][#8;A;X2:4][#6;R0:5]([#6,#1;A:6])=[O;X1:7])[#6;A;H2X4:8][#8;X2:9][P;X4:10]([#8;A;X2H1,X1-:11])([#8;A;X2H1,X1-:12])=[O;X1:13]>>[H][#8;A;X1:4][H].[H][#6;R0:5]([#6,#1;A:6])=[O;X1:7].[#6;A;H3X4:3][#6;H1X4R0:2]([#8;A;H1X2:1])[#6;A;H2X4:8][#8;X2:9][P;X4:10]([#8;A;v1X1-:11])([#8;A;v1X1-:12])=[O;X1:13]"
//		});
//		
//		fragmentationPatterns.put(ClassName._2_LYSOPHOSPHATIDIC_ACIDS, new String[]{
//				"[#8;A;H1X2:9][#6;A;H2X4:8][#6;H1X4R0:7]([#6;A;H2X4:6][#8;X2:5][P;X4:2]([#8;A;X2H1,X1-:3])([#8;A;X2H1,X1-:1])=[O;X1:4])[#8;A;X2:10][#6;R0:11]([#6,#1;A:12])=[O;X1:13]>>[H][#8;A;X1:10][H].[H][#6;R0:11]([#6,#1;A:12])=[O;X1:13].[#8;A;H1X2:9][#6;A;H2X4:8][#6;H1X4R0:7][#6;A;H2X4:6][#8;X2:5][P;X4:2]([#8;X1-:3])([#8;X1-:1])=[O;X1:4]"
//		});
//		
//		fragmentationPatterns.put(ClassName.PHOSPHATIDYLINOSITOLS, new String[]{
//				"[#8;A;H1X2][#6;A;H1X4]1[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;X2][P;X4]([#8;A;X2H1,X1-])(=[O;X1])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2]-[#6:4]([#6,#1;A:5])=[O;X1:6])[#8;X2]-[#6:1]([#6,#1;A:2])=[O;X1:3])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]>>[#6:4]([#6,#1;A:5])=[O;X1:6].[#6:1]([#6,#1;A:2])=[O;X1:3]"
//		});
//		
//		
//		fragmentationPatterns.put(ClassName.PHOSPHATIDYLGLYCEROLS, new String[]{
//				"[#8;A;H1X2][#6;A;H2X4][#6;A;H1X4]([#8;A;H1X2])[#6;A;H2X4][#8;X2][P;X4]([#8;A;X2H1,X1-])(=[O;X1])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2]-[#6:1]([#6,#1;A:2])=[O;X1:3])[#8;X2]-[#6:4]([#6,#1;A:5])=[O;X1:6]>>[#6,#1;A:2][#6:1]=[O;X1:3].[#6,#1;A:5][#6:4]=[O;X1:6]"
//		});
//		
//		fragmentationPatterns.put(ClassName.CARDIOLIPINS, new String[]{
//				"[#8;A;H1X2][#6;A;H1X4]([#6;A;H2X4][#8]P([#8;X2H1,X1-])(=O)[#8][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8:1]-[#6:2]([#6,#1;A:3])=[O:4])[#8:5]-[#6:6]([#6,#1;A:7])=[O:8])[#6;A;H2X4][#8]P([#8;X2H1,X1-])(=O)[#8][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8:9]-[#6:10]([#6,#1;A:11])=[O:12])[#8:13]-[#6:14]([#6,#1;A:15])=[O:16]>>[#8:1]-[#6:2]([#6,#1;A:3])=[O:4].[#8:5]-[#6:6]([#6,#1;A:7])=[O:8].[#8:9]-[#6:10]([#6,#1;A:11])=[O:12].[#8:13]-[#6:14]([#6,#1;A:15])=[O:16]"
////				"[#8;A;H1X2][#6;A;H2X4][#6;A;H1X4]([#8;A;H1X2])[#6;A;H2X4][#8;X2][P;X4]([#8;A;X2H1,X1-])(=[O;X1])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2]-[#6:1]([#6,#1;A:2])=[O;X1:3])[#8;X2]-[#6:4]([#6,#1;A:5])=[O;X1:6]>>[#6,#1;A:2][#6:1]=[O;X1:3].[#6,#1;A:5][#6:4]=[O;X1:6]"
//
//		});
//		
//		fragmentationPatterns.put(ClassName.CERAMIDE_1_PHOSPHATES, new String[]{
////			"[#6;A;X4;H2,H3][#6;H2X4]-[#6;H2X4]-[#6;H2X4]-[#6;H2X4]-[#6;H2X4]-[#6;H2X4]-[#6;H2X4]-[#6;H2X4]-[#6;A;H1X3]=[#6;A;H1X3]-[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#6;H2X4]-[#8;X2][P;X4]([#8;A;X2H1,X1-])([#8;A;X2H1,X1-])=[O;X1])[#7;A;H1X3:1][#6;X3:2]([#6,#1;A:3])=[O;X1:4]>>[#7;A;H2X3:1][#6;X3:2]([#6,#1;A:3])=[O;X1:4]"
//				"[#6;A;X4;H2,H3:1][#6;H2X4:2]-[#6;H2X4:3]-[#6;H2X4:4]-[#6;H2X4:5]-[#6;H2X4:6]-[#6;H2X4:7]-[#6;H2X4:8]-[#6;H2X4:9][#6;A;H1X3:10]=[#6;A;H1X3:11][#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:14]([#6;H2X4]-[#8;X2][P;X4]([#8;A;X2H1,X1-])([#8;A;X2H1,X1-])=[O;X1])[#7;A;H1X3:15][#6;X3]([#6,#1;A])=[O;X1]>>[#6;A;X4;H2,H3:1][#6;H2X4:2]-[#6;H2X4:3]-[#6;H2X4:4]-[#6;H2X4:5]-[#6;H2X4:6]-[#6;H2X4:7]-[#6;H2X4:8]-[#6;H2X4:9][#6;A;H1X3:10]=[#6;A;H1X3:11][#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H2X4:14][#7;A;H1X3:15]"
//				});
//				
////		fragmentationPatterns.put(ClassName.N_ACYL_SPHINGOSINES, new String[]{
////				
////		});
//		
//		fragmentationPatterns.put(ClassName.SULFATIDES, new String[]{
////				"[#6;A;X4;H2,H3:1][#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H2X4:4][#6;A;H2X4:5][#6;A;H2X4:6][#6;A;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H1X3:10]=[#6;A;H1X3:11][#6;A;H1X4;@@:12]([#8;A;H1X2:13])[#6;A;H1X4;@:14]([#6;A;H2X4:15][#8:16][#6;A;H1X4;@@]1[#8][#6;A;H1X4;@]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4;@]([#8;A;H1X2])[#6;A;H1X4;@]([#8]S([#8;A;X2H1,X1-])(=O)=O)[#6;A;H1X4;@]1[#8;A;H1X2])[#7;A;H1X3:17][#6:18]([#6,#1;A:19])=[O;X1:20]>>[#6;A;X4;H2,H3:1][#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H2X4:4][#6;A;H2X4:5][#6;A;H2X4:6][#6;A;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H1X3:10]=[#6;A;H1X3:11][#6;A;H1X4;@@:12]([#8;A;H1X2:13])[#6;A;H1X4;@:14]([#6;A;H2X4:15][#8:16])[#7;A;H1X3:17][#6:18]([#6,#1;A:19])=[O;X1:20]"
//
//				"[#6;A;X4;H2,H3][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H1X3]=[#6;A;H1X3][#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#6;A;H2X4][#8][#6;A;H1X4]1[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;X2][S;X4]([#8;A;X2H1,X1-])(=[O;X1])=[O;X1])[#6;A;H1X4]1[#8;A;H1X2])[#7;A;H1X3][#6:3]([#6,#1;A:2])=[O;X1:1]>>[#6:3]([#6,#1;A:2])=[O;X1:1]"
//		
//		});
//		
//		fragmentationPatterns.put(ClassName.GANGLIOSIDES, new String[]{
//				"[#6;A;X4:1][#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H2X4:4][#6;A;H2X4:5][#6;A;H2X4:6][#6;A;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H2X4:10][#6;A;H2X4:11][#6;A;H2X4:12][#6;A;H2X4:13][#6;A;H1X3:14]=[#6;A;H1X3:15][#6;A;H1X4:16]([#8;A;H1X2:17])[#6;A;H1X4:18]([#6;A;H2X4:19][#8:20][#6;A;H1X4]1[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8][#6;A;H1X4]2[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8]C3([#6;A;H2X4][#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#7;A;H1X3][#6](-[#6])=[O;X1])[#6;A;H1X4]([#8]3)[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H2X4][#8;A;H1X2])[#6]([#8;A;X2H1,X1-])=[O;X1])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#7;A;H1X3:21][#6:22]([#6,#1;A:23])=[O;X1:24]>>[#6;A;X4:1][#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H2X4:4][#6;A;H2X4:5][#6;A;H2X4:6][#6;A;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H2X4:10][#6;A;H2X4:11][#6;A;H2X4:12][#6;A;H2X4:13][#6;A;H1X3:14]=[#6;A;H1X3:15][#6;A;H1X4:16]([#8;A;H1X2:17])[#6;A;H1X4:18]([#6;A;H2X4:19][#8:20])[#7;A;H1X3:21][#6:22]([#6,#1;A:23])=[O;X1:24]",
//				"[#6;A;X4:22][#6;H2X4:21]-[#6;H2X4:20]-[#6;H2X4:19]-[#6;H2X4:18]-[#6;H2X4:17]-[#6;H2X4:16]-[#6;H2X4:15]-[#6;H2X4:14]-[#6;H2X4:13]-[#6;H2X4:12]-[#6;H2X4:11]-[#6;H2X4:10]\\[#6;A;H1X3:9]=[#6;A;H1X3:8]\\[#6;A;H1X4:7]([#8;A;H1X2:23])[#6;A;H1X4:4]([#6:5]-[#8:6][#6;A;H1X4]1[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8][#6;A;H1X4]2[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8][#6;A;H1X4]3[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]3[#7;A;H1X3][#6]([#6;A;H3X4])=O)[#6;A;H1X4]([#8]C3([#6;A;H2X4][#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#7;A;H1X3][#6](-[#6])=O)[#6;A;H1X4]([#8]3)[#6]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H2X4][#8;A;H1X2])[#6]([#8;A;X2H1,X1-])=O)[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#7;A;H1X3:3][#6:1]([#6,#1;A:24])=[O:2]>>[#6;A;X4:22][#6;H2X4:21]-[#6;H2X4:20]-[#6;H2X4:19]-[#6;H2X4:18]-[#6;H2X4:17]-[#6;H2X4:16]-[#6;H2X4:15]-[#6;H2X4:14]-[#6;H2X4:13]-[#6;H2X4:12]-[#6;H2X4:11]-[#6;H2X4:10]\\[#6;A;H1X3:9]=[#6;A;H1X3:8]\\[#6;A;H1X4:7]([#8;A;H1X2:23])[#6;A;H1X4:4]([#6:5]-[#8:6])[#7;A;H1X3:3][#6:1]([#6,#1;A:24])=[O:2]",
//				"[#6;A;X4:22][#6;H2X4:21]-[#6;H2X4:20]-[#6;H2X4:19]-[#6;H2X4:18]-[#6;H2X4:17]-[#6;H2X4:16]-[#6;H2X4:15]-[#6;H2X4:14]-[#6;H2X4:13]-[#6;H2X4:12]-[#6;H2X4:11]-[#6;H2X4:10]\\[#6;A;H1X3:9]=[#6;A;H1X3:8]\\[#6;A;H1X4:7]([#8;A;H1X2:23])[#6;A;H1X4:4]([#6;A;H2X4:5][#8:6][#6;A;H1X4]1[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8]C2([#6;A;H2X4][#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#7;A;H1X3][#6]([#6;A;H3X4])=O)[#6;A;H1X4]([#8]2)[#6]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H2X4][#8;A;H1X2])[#6]([#8;A;X2H1,X1-])=O)[#6;A;H1X4]1[#8;A;H1X2])[#7;A;H1X3:3][#6:1]([#6,#1;A:24])=[O:2]>>[#6;A;X4:22][#6;H2X4:21]-[#6;H2X4:20]-[#6;H2X4:19]-[#6;H2X4:18]-[#6;H2X4:17]-[#6;H2X4:16]-[#6;H2X4:15]-[#6;H2X4:14]-[#6;H2X4:13]-[#6;H2X4:12]-[#6;H2X4:11]-[#6;H2X4:10]\\[#6;A;H1X3:9]=[#6;A;H1X3:8]\\[#6;A;H1X4:7]([#8;A;H1X2:23])[#6;A;H1X4:4]([#6;A;H2X4:5][#8:6])[#7;A;H1X3:3][#6:1]([#6,#1;A:24])=[O:2]"
//		});
//		
//		
//		fragmentationPatterns.put(ClassName.CHOLESTERYL_ESTERS, new String[]{
//				"[#6;A;H3X4:30][#6;A;H1X4:29]([#6;A;H3X4:31])[#6;A;H2X4:28][#6;A;H2X4:27][#6;A;H2X4:26][#6;A;H1X4:24]([#6;A;H3X4:25])[#6;A;H1X4:1]1[#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H1X4:4]2[#6;A;H1X4:5]3[#6;A;H2X4:6][#6;A;H1X3:7]=[#6:8]4[#6;A;H2X4:9][#6:10]([#6;A;H2X4:11][#6;A;H2X4:12][C:13]4([#6;A;H3X4:14])[#6;A;H1X4:15]3[#6;A;H2X4:16][#6;A;H2X4:17][C:18]12[#6;A;H3X4:19])-[#8;X2:20]-[#6;X3:21](-[#6:23])=[O;X1:22]>>[#6;A;H3X4:30][#6;A;H1X4:29]([#6;A;H3X4:31])[#6;A;H2X4:28][#6;A;H2X4:27][#6;A;H2X4:26][#6;A;H1X4:24]([#6;A;H3X4:25])[#6;A;H1X4:1]1[#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H1X4:4]2[#6;A;H1X4:5]3[#6;A;H2X4:6][#6;A;H1X3:7]=[#6:8]4[#6;A;H2X4:9][#6:10]([#6;A;H2X4:11][#6;A;H2X4:12][C:13]4([#6;A;H3X4:14])[#6;A;H1X4:15]3[#6;A;H2X4:16][#6;A;H2X4:17][C:18]12[#6;A;H3X4:19])-[#8;X2:20]-[#6;X3:21](-[#6:23])=[O;X1:22]"
//		});
//		
//		fragmentationPatterns.put(ClassName.CHOLESTERYL_ESTERS_LANOSTERYL_OR_ZYMOSTERYL, new String[]{
//			"[#6;A;H3X4:1][#6;A;H1X4:2]([#6;A;H2X4:3][#6;A;H2X4:4][#6;A;H1X3:5]=[#6;A;X3:6]([#6;A;H3X4:7])[#6;A;H3X4:8])[#6;A;H1X4:9]1[#6;A;H2X4:10][#6;A;H2X4:11][#6;A;X4:12]2([*,#1;#1,CX4H3:34])[#6;A;X3:13]3=[#6;A;X3:14]([#6;A;H2X4:15][#6;A;H2X4:16][C:17]12[#6;A;H3X4:18])[C:19]1([#6;A;H3X4:20])[#6;A;H2X4:21][#6;A;H2X4:22][#6;H1X4:23](-[#8;X2:24]-[#6;X3:25](-[#6:26])=[O;X1:27])[#6;A;X4:28]([*,#1;#1,CX4H3:29])([*,#1;#1,CX4H3:30])[#6;A;H1X4:31]1[#6;A;H2X4:32][#6;A;H2X4:33]3>>[#6;A;H3X4:1][#6;A;H1X4:2]([#6;A;H2X4:3][#6;A;H2X4:4]-[#6;A;H1X3:5]=[#6;A;X3:6](-[#6;A;H3X4:7])[#6;A;H3X4:8])[#6;A;H1X4:9]1[#6;A;H2X4:10][#6;A;H2X4:11][#6;A;X4:12]2([*,#1;#1,CX4H3:34])[#6;A;X3:13]3=[#6;A;X3:14]([#6;A;H2X4:15][#6;A;H2X4:16][C:17]12[#6;A;H3X4:18])[C:19]1([#6;A;H3X4:20])[#6;A;H2X4:21][#6;A;H2X4:22][#6;H1X4:23](-[#8;X2:24]-[#6;X3:25](-[#6:26])=[O;X1:27])[#6;A;X4:28]([*,#1;#1,CX4H3:29])([*,#1;#1,CX4H3:30])[#6;A;H1X4:31]1[#6;A;H2X4:32][#6;A;H2X4:33]3"	
//		});
//		
//		
//		// No need to fragment
////		fragmentationPatterns.put(ClassName._1_MONOACYLGLYCEROLS, new String[]{
////		// sn-1
////		
////		});
////		
////		fragmentationPatterns.put(ClassName._2_MONOACYLGLYCEROLS, new String[]{
////		// sn-2
////		"[#8;A;H1X2][#6;A;H2X4][#6;H1X4R0]([#6;A;H2X4][#8;A;H1X2])-[#8;X2]-[#6;R0:1]([#6,#1;A:2])=[O;X1:3]>>[#8-]-[#6;R0:1]([#6,#1;A:2])=[O;X1:3]"
////		});
//		
//		
//		fragmentationPatterns.put(ClassName.DIACYLGLYCEROLS, new String[]{
//				"[#8;A;H1X2][#6;A;H2X4][#6;H1X4R0]([#6;A;H2X4][#8;X2]-[#6;R0:1]([#6,#1;A:2])=[O;X1:3])[#8;A;X2][#6;R0:4]([#6,#1;A:5])=[O;X1:6]>>[#8;X2]-[#6;R0:1]([#6,#1;A:2])=[O;X1:3].[#8;A;X2][#6;R0:4]([#6,#1;A:5])=[O;X1:6]"
//		});
//
//		
//		
//		fragmentationPatterns.put(ClassName.TRIACYLGLYCEROLS, new String[]{
//				"[#6,#1;A:1][#6;R0:2](=[O;X1:3])-[#8;X2:4][#6;A;H2X4][#6;H1X4R0]([#6;A;H2X4][#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12])[#8;A;X2:5][#6;R0:6]([#6,#1;A:7])=[O;X1:8]>>[#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3].[#8;A;X2:5][#6;R0:6]([#6,#1;A:7])=[O;X1:8].[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12]"
//		});
//		
//		fragmentationPatterns.put(ClassName.MONOGALACTOSYLDIACYLGLYCEROLS, new String[]{
//				"[#8;A;H1X2][#6;A;H2X4][#6;A@H;H1X4]1[#8;X2][#6;A@@H;H1X4]([#8;X2][#6;A;H2X4][#6;A@@H;H1X4]([#6;A;H2X4][#8;X2:3]-[#6:1]([#6,#1;A:8])=[O;X1:2])[#8;X2:4]-[#6:5]([#6,#1;A:7])=[O;X1:6])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A@H;H1X4]1[#8;A;H1X2]>>[#8;X2:3]-[#6:1]([#6,#1;A:8])=[O;X1:2].[#8;X2:4]-[#6:5]([#6,#1;A:7])=[O;X1:6]"
//		});
//		
//		
//		fragmentationPatterns.put(ClassName.DIGALACTOSYLDIACYLGLYCEROLS, new String[]{
//			//"[#8;A;H1X2][#6][#6;A@H;H1X4]1[#8][#6;A@H;H1X4]([#8;X2][#6;A;H2X4][#6;A@H;H1X4]2[#8][#6;A@@H;H1X4]([#8][#6;A;H2X4][#6;A@@H;H1X4]([#6;A;H2X4][#8;X2:4]-[#6:5]([#6,#1;A:7])=[O;X1:6])[#8;X2:3]-[#6:1]([#6,#1;A:8])=[O;X1:2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A@H;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A@H;H1X4]1[#8;A;H1X2]>>[#6,#1;A:7][#6:5]=[O;X1:6].[#8;X2:3]-[#6:1]([#6,#1;A:8])=[O;X1:2]"	
//			"[#8;A;H1X2][#6;A;H2X4][#6;A@H;H1X4]1[#8][#6;A@H;H1X4]([#8;X2][#6;A;H2X4][#6;A@H;H1X4]2[#8][#6;A@@H;H1X4]([#8;X2][#6;A;H2X4][#6;A@@H;H1X4]([#6;A;H2X4][#8;X2:2]-[#6:4]([#6,#1;A:8])=[O;X1:7])[#8;X2:1]-[#6:3]([#6,#1;A:6])=[O;X1:5])[#6;A@H;H1X4]([#8;A;H1X2])[#6;A@@H;H1X4]([#8;A;H1X2])[#6;A@H;H1X4]2[#8;A;H1X2])[#6;A@H;H1X4]([#8;A;H1X2])[#6;A@@H;H1X4]([#8;A;H1X2])[#6;A@H;H1X4]1[#8;A;H1X2]>>[#8;X2:1]-[#6:3]([#6,#1;A:6])=[O;X1:5].[#8;X2:2]-[#6:4]([#6,#1;A:8])=[O;X1:7]"
//		});
//		
//		
//		fragmentationPatterns.put(ClassName.SULFOQUINOVOSYLDIACYLGLYCEROLS, new String[]{
//				"[#8;A;H1X2][#6;A;H1X4]1[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#6;A;H2X4][S;X4]([#8;A;X2H1,X1-])(=[O;X1])=[O;X1])[#8][#6;A;H1X4]([#8;X2][#6;A;H2X4][#6]([#6;A;H2X4][#8;X2:3]-[#6:1]([#6,#1;A:8])=[O;X1:2])-[#8;X2:4]-[#6:5]([#6,#1;A:7])=[O;X1:6])[#6;A;H1X4]1[#8;A;H1X2]>>[#8;X2:3]-[#6:1]([#6,#1;A:8])=[O;X1:2].[#8;X2:4]-[#6:5]([#6,#1;A:7])=[O;X1:6]"
//		});
//		
//
//		fragmentationPatterns.put(ClassName.DIACYLATED_PHOSPHATIDYLINOSITOL_MONOMANNOSIDES, new String[]{
//			"[#8;A;H1X2][#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;H1X4]([#8;X2][#6;A;H1X4]2[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]2[#8;X2][P;X4]([#8;A;X2H1,X1-])(=[O;X1])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2:3]-[#6:1]([#6,#1;A:8])=[O;X1:2])[#8;X2:4]-[#6:5]([#6,#1;A:7])=[O;X1:6])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]>>[#8;X2:3]-[#6:1]([#6,#1;A:8])=[O;X1:2].[#8;X2:4]-[#6:5]([#6,#1;A:7])=[O;X1:6]"	
//		});
//		
//		
//		fragmentationPatterns.put(ClassName.DIACYLATED_PHOSPHATIDYLINOSITOL_DIMANNOSIDES, new String[]{
//				"[#8;A;H1X2][#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;H1X4]([#8;X2][#6;A;H1X4]2[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;X2][#6;A;H1X4]3[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]3[#8;A;H1X2])[#6;A;X4]2[#8;X2][P;X4]([#8;A;X2H1,X1-])(=[O;X1])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2:1]-[#6:2]([#6,#1;A:3])=[O;X1:4])[#8;X2:5]-[#6:6]([#6,#1;A:7])=[O;X1:8])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]>>[#8;X2:1]-[#6:2]([#6,#1;A:3])=[O;X1:4].[#8;X2:5]-[#6:6]([#6,#1;A:7])=[O;X1:8]"
//		});
//		
//		fragmentationPatterns.put(ClassName.TRIACYLATED_PHOSPHATIDYLINOSITOL_DIMANNOSIDES, new String[]{
//				"[#8;A;H1X2][#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;H1X4]([#8;X2][#6;A;H1X4]2[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;X2][#6;A;H1X4]3[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;X2:1][#6:10]([#6,#1;A:12])=[O;X1:11])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]3[#8;A;H1X2])[#6;A;X4]2[#8;X2][P;X4]([#8;A;X2H1,X1-])(=[O;X1])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2:2]-[#6:3]([#6,#1;A:4])=[O;X1:5])[#8;X2:6]-[#6:7]([#6,#1;A:8])=[O;X1:9])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]>>[#8;A;X2:1][#6:10]([#6,#1;A:12])=[O;X1:11].[#8;X2:2]-[#6:3]([#6,#1;A:4])=[O;X1:5].[#8;X2:6]-[#6:7]([#6,#1;A:8])=[O;X1:9]"
//		});
//		
//		
////		fragmentationPatterns.put(ClassName.TETRACYLATED_PHOSPHATIDYLINOSITOL_DIMANNOSIDES, new String[]{
////				""
////		});
//		
////		fragmentationPatterns.put(ClassName.DIPHOSPHORYLATED_HEXAACYL_LIPID_A, new String[]{
////				
////		});
//		
//
//		
////		// R1 (Chem. Rev. 2001, 101, 479âˆ’526)
////		fragmentationPatterns.put(ClassName._1_LYSOPHOSPHATIDYLCHOLINES, new String[]{
////				"[#6;A;H3X4:3][N;X4+:4]([#6;A;H3X4:2])([#6;A;H3X4:1])!@-[#6;A;H2X4:5]!@-[#6;A;H2X4:6]!@-[#8;X2:7][P;X4:10]([#8;A;X2H1,X1-:9])(=[O;X1:8])[#8;X2:11]!@-[#6;A;H2X4:12]!@-[#6;A;H1X4:19]([#8;A;h1X2:18])!@-[#6;A;H2X4:17]!@-[#8:16]!@-[#6:15]([#6,#1;A:14])!@=[O;X1:13]>>[#6;A;H3X4:3][N;X4+:4]([#6;A;H3X4:2])([#6;A;H3X4:1])!@-[#6;A;H2X4:5]!@-[#6;A;H2X4:6]!@-[#8;XH12:7].[#8;A;X2H1,X1-:9][P;X4:10]1(=[O;X1:8])[#8;X2:11]!@-[#6;A;H2X4:12]!@-[#6;A;H1X4:19](!@-[#6;A;H2X4:17]!@-[#8:16]!@-[#6:15]([#6,#1;A:14])!@=[O;X1:13])[#8;h0v2X2:18]1"		
////		});
////		
////		// R1 (Chem. Rev. 2001, 101, 479âˆ’526)
////		fragmentationPatterns.put(ClassName._2_LYSOPHOSPHATIDYLCHOLINES, new String[]{
////				// with the NC3H9 at m/z 59
////				// "[H:1][C:2](!@-[#6;A;H2X4:3]!@-[#8;A;H1X2:4])(!@-[#6;A;H2X4:5]!@-[#8;X2:6][P;X4:7]([#8;A;X2H1,X1-:8])(=[O;X1:9])[#8;X2:10]!@-[#6;A;H2X4:11]!@-[#6;A;H2X4:12]!@-[N+:13]([#6;A;H3X4:16])([#6;A;H3X4:15])[#6;A;H3X4:14])[#8:17]-[#6:18]([#6,#1;A:19])!@=[O;X1:20]>>[#6;A;H3X4:14][#7:13]([#6;A;H3X4:15])[#6;A;H3X4:16].[H:1][C:2](!@-[#6;A;H2X4:3]!@-[#8;A;X2:4])(!@-[#6;A;H2X4:5]!@-[#8;X2:6][P;X4:7]1(=[O;X1:9])[#8;X2:10]!@-[#6;A;H2X4:11]!@-[#6;A;H2X4:12][#8;A;X2H1,X1-:8]1)[#8:17]-[#6:18]([#6,#1;A:19])!@=[O;X1:20]",
////
////				// without that moiety because it is neutral
////				"[#6;A;H3X4][N+]([#6;A;H3X4])([#6;A;H3X4])!@-[#6;A;H2X4:5]!@-[#6;A;H2X4:6]!@-[#8;X2:7][P;X4:10]([#8;A;X2H1,X1-:9])(=[O;X1:8])[#8;X2:11]!@-[#6;A;H2X4:12]!@-[#6;X4H1:15](!@-[#6;A;H2X4:14]!@-[#8;A;H1X2:13])-[#8:4]-[#6:3]([#6,#1;A:2])!@=[O;X1:1]>>[#8;A;H1X2:13]!@-[#6;A;H2X4:14]!@-[#6;X4H1:15](!@-[#6;A;H2X4:12]!@-[#8;X2:11][P;X4:10]1(=[O;X1:8])[#8;A;X2+0:9][#6;A;H2X4:5]!@-[#6;A;H2X4:6]!@-[#8;X2:7]1)-[#8:4]-[#6:3]([#6,#1;A:2])!@=[O;X1:1]",
////				"[H]C(!@-[#6;A;H2X4]!@-[#8;A;H1X2])(!@-[#6;A;H2X4]!@-[#8;X2:7][P;X4:6]([#8;A;X2H1,X1-:5])(=[O;X1:4])[#8;X2:3]!@-[#6;A;H2X4:2]!@-[#6;A;H2X4:1]!@-[N+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#8]-[#6]([#6,#1;A])!@=[O;X1]>>[#8;X2:7][P;X4:6]1(=[O;X1:4])[#8;A;X2:5][#6;A;H2X4:1]!@-[#6;A;H2X4:2]!@-[#8;X2:3]1"
////		});
////
////		fragmentationPatterns.put(ClassName._1_LYSOPHOSPHATIDYLETHANOLAMINES, new String[]{">>",">>"});
////		fragmentationPatterns.put(ClassName._2_LYSOPHOSPHATIDYLETHANOLAMINES, new String[]{">>",">>"});
////		
////		// R1 (Chem. Rev. 2001, 101, 479âˆ’526)
////		fragmentationPatterns.put(ClassName.SPHINGOMYELINS, new String[]{
////				// [Cer+H]+
////				"[#6;A;H2X4:17][#6;A;H2X4:16][#6;R0:15](=[O:14])[#7;A;H1X3:13][#6;A;H1X4:12]([#6;A;H2X4:11][#8;R0]P([#8;X2H1,X1-])(=O)[#8][#6;A;H2X4][#6;A;H2X4][N+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#6;R0:10]([#8;A;X2H1,X1-:9])-[#6;H1X3R0:8]=[#6;H1X3R0:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;H2X4:1][#6;H2X4:24][#6;A;H2X4:18][#6;A;H2X4:19][#6;A;H2X4:20][#6;A;H2X4:21][#6;A;H2X4:22][#6;A;H3X4:23]>>[#6;A;H2X4:17][#6;A;H2X4:16][#6;R0:15](=[O:14])[#7;A;H1X3:13][#6;A;H1X4:12]([#6;A;H2X4+:11])[#6;R0:10]([#8;A;X2H1,X1-:9])-[#6;H1X3R0:8]=[#6;H1X3R0:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;H2X4:1][#6;H2X4:24][#6;A;H2X4:18][#6;A;H2X4:19][#6;A;H2X4:20][#6;A;H2X4:21][#6;A;H2X4:22][#6;A;H3X4:23]",
////				
////				// m/z 264. The second SMIRKS returns 2 fragments, one of which is charged. Because of the varying length of the 
////				//	of the fatty acyl moiety, I could not remove it from the right side.	
////				"[#6;A;H2X4:23][#6;A;H2X4:22][#6;R0:21](=[O:20])[#7;A;H1X3:19][#6;A;H1X4:18]([#6;A;H2X4:17][#8;R0]P([#8;X2H1,X1-])(=O)[#8][#6;A;H2X4][#6;A;H2X4][N+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#6;R0:16]([#8;A;X2H1,X1-])\\[#6;H1X3R0:15]=[#6;H1X3R0:14]\\[#6;A;H2X4:13][#6;A;H2X4:12][#6;A;H2X4:11][#6;A;H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;H3X4:1]>>[#6;A;H2X4:23][#6;A;H2X4:22][#6;R0:21]=[O:20].[#6;A;H3X4:1][#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H2X4:4][#6;A;H2X4:5][#6;A;H2X4:6][#6;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H2X4:10][#6;A;H2X4:11][#6;A;H2X4:12][#6;A;H2X4:13]\\[#6;H1X3R0:14]=[#6;H1X3R0:15]\\[#6;R0:16]=[#6;A;X3:18]1/[#6;A;H2X4:17][#7;A;H2X3+:19]1",
////		
////				// m/z 280		
////				"[#6;A;H2X4:7][#6;A;H2X4:6][#6;R0:5](=[O:4])[#7;A;H1X3:3][#6;A;H1X4:2]([#6;A;H2X4:1][#8;R0]P([#8;X2H1,X1-])(=O)[#8][#6;A;H2X4][#6;A;H2X4][N+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#6;R0]([#8;A;X2H1,X1-])-[#6;H1X3R0]=[#6;H1X3R0][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H3X4]>>[#6;A;H2X4:7][#6;A;H2X4:6][#6;R0:5](=[O:4])[#7;A;X3+:3]1=[#6;AH1:2][#6;A;H2X4:1]1"
////				});
////		
////		// R1 (Chem. Rev. 2001, 101, 479âˆ’526) m/z 99
////		fragmentationPatterns.put(ClassName.ACYL_CARNITINES, new String[]{
////				"[#6;A;H3X4][N;X4+:1]([#6;A;H3X4:2])([#6;A;H3X4:3])[#6;A;H2X4:4][#6;A;H1X4:5]([#6;A;H2X4:6][#6:7]([#8;A;X1-,X2H1:8])=[O;X1:9])[#8;X2:10]-[#6:11]([#6,#1;A:12])=[O;X1:13]>>[#8;A;X1-,X2H1:8][#6:7]=[O;X1:9].[#8;X2:10]-[#6:11]([#6,#1;A:12])=[O;X1:13].[#6;A;H3X4:2][#7;X4+:1]([#6;A;H3X4:3])\\[#6;A;H1X3:4]=[#6;A;H1X3:5]\\[#6;A;H2X4+:6]"
//////				,">>"
////				});
//	}
	
	
	static {
		fragmentationPatterns = new LinkedHashMap<ClassName, String[][]>();

//		 GPCho(2:0/2:0)
//		 M+H - H20; [M+H]-sn2; [M+H]-sn1; [M+H]-C3H9N; [M+H]-sn2 -H20; [M+H]-sn1 -H20 [M+H]-C5H14NO4P (-183)
//		 doi:10.1016/S1044-0305(03)00068-0; J Am Soc Mass Spectrom 2003, 14, 373â€“382
		fragmentationPatterns.put(ClassName.PHOSPHATIDYLCHOLINES, new String[][]{
			// [M+H]-H2O (-18)
			new String[]{
					"[H][#6;A;X4]1([#6;A;H2X4][#8;X2][P;X4]1(=[O;X1])[#8][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8]-[#6;X3]([#6;A;X4])=[O;X1])[#8;X2]-[#6;X3]([#6;A;X4])=[O;X1])[N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4]",
					"[H][#8;A:5][P;X4:4](=[O;X1:6])([#8:7][#6;A;H2X4:8][#6;A;H1X4:9]([#6;A;H2X4:10][#8:11]-[#6;X3:12]([#6;A;X4:13])=[O;X1:14])[#8;X2:15]-[#6;X3:16]([#6;A;X4:17])=[O;X1:18])[#8;X2:3][#6;A;H2X4:2][#6;A;X4:1]([H:99])([H])[N;X4+:19]([#6;A;H3X4:22])([#6;A;H3X4:21])[#6;A;H3X4:20]>>[H][#8;A:5][H].[H:99][#6;A;X4:1]1([#6;A;H2X4:2][#8;X2:3][P;X4:4]1(=[O;X1:6])[#8:7][#6;A;H2X4:8][#6;A;H1X4:9]([#6;A;H2X4:10][#8:11]-[#6;X3:12]([#6;A;X4:13])=[O;X1:14])[#8;X2:15]-[#6;X3:16]([#6;A;X4:17])=[O;X1:18])[N;X4+:19]([#6;A;H3X4:20])([#6;A;H3X4:21])[#6;A;H3X4:22]"
			},
			
				// [M+H]-sn2
				new String[]{
						"[H][#8;X2][#6;A;H1X4]([#6;A;H2X4][#8]-[#6;X3]([#6;A;X4])=[O;X1])[#6;A;H2X4][#8][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;H2X4][#6;A;X4]([H])([H])[N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4]",
						"[H][#8;A:5][P;X4:4](=[O;X1:6])([#8:7][#6;A;H2X4:8][#6;A;H1X4:9]([#6;A;H2X4:10][#8:11]-[#6;X3:12]([#6;A;X4:13])=[O;X1:14])[#8;X2:15]-[#6;X3:16]([#6;A;X4:17])=[O;X1:18])[#8;X2:3][#6;A;H2X4:2][#6;A;X4:1]([H:99])([H])[N;X4+:19]([#6;A;H3X4:22])([#6;A;H3X4:21])[#6;A;H3X4:20]>>[H][#6;X3:16]([#6;A;X4:17])=[O;X1:18].[H][#8;X2:15][#6;A;H1X4:9]([#6;A;H2X4:10][#8:11]-[#6;X3:12]([#6;A;X4:13])=[O;X1:14])[#6;A;H2X4:8][#8:7][P;X4:4](=[O;X1:6])([#8;A:5][H])[#8;X2:3][#6;A;H2X4:2][#6;A;X4:1]([H:99])([H])[N;X4+:19]([#6;A;H3X4:22])([#6;A;H3X4:21])[#6;A;H3X4:20]"
				},
				// [M+H]-sn1
				new String[]{
						"[H][#8][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;H2X4][#6;A;X4]([H])([H])[N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#8;X2]-[#6;X3]([#6;A;X4])=[O;X1]",
						"[H][#8;A:5][P;X4:4](=[O;X1:6])([#8:7][#6;A;H2X4:8][#6;A;H1X4:9]([#6;A;H2X4:10][#8:11]-[#6;X3:12]([#6;A;X4:13])=[O;X1:14])[#8;X2:15]-[#6;X3:16]([#6;A;X4:17])=[O;X1:18])[#8;X2:3][#6;A;H2X4:2][#6;A;X4:1]([H:99])([H])[N;X4+:19]([#6;A;H3X4:22])([#6;A;H3X4:21])[#6;A;H3X4:20]>>[H][#6;X3:12]([#6;A;X4:13])=[O;X1:14].[H][#8:11][#6;A;H2X4:10][#6;A;H1X4:9]([#6;A;H2X4:8][#8:7][P;X4:4](=[O;X1:6])([#8;A:5][H])[#8;X2:3][#6;A;H2X4:2][#6;A;X4:1]([H:99])([H])[N;X4+:19]([#6;A;H3X4:22])([#6;A;H3X4:21])[#6;A;H3X4:20])[#8;X2:15]-[#6;X3:16]([#6;A;X4:17])=[O;X1:18]"
				},
				// [M+H]-C3H9N (-59)
				new String[]{
						"[H][#6;A;X4]1([H])[#6;A;H2X4][#8;X2][P;X4](=[O;X1])([#8][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8]-[#6;X3]([#6;A;X4])=[O;X1])[#8;X2]-[#6;X3]([#6;A;X4])=[O;X1])[#8;A]1",
						"[H][#8;A:5][P;X4:4](=[O;X1:6])([#8:7][#6;A;H2X4:8][#6;A;H1X4:9]([#6;A;H2X4:10][#8:11]-[#6;X3:12]([#6;A;X4:13])=[O;X1:14])[#8;X2:15]-[#6;X3:16]([#6;A;X4:17])=[O;X1:18])[#8;X2:3][#6;A;H2X4:2][#6;A;X4:1]([H:99])([H])[N;X4+:19]([#6;A;H3X4:22])([#6;A;H3X4:21])[#6;A;H3X4:20]>>[H][N;X4+:19]([#6;A;H3X4:22])([#6;A;H3X4:21])[#6;A;H3X4:20].[H:99][#6;A;X4:1]1([H])[#6;A;H2X4:2][#8;X2:3][P;X4:4](=[O;X1:6])([#8:7][#6;A;H2X4:8][#6;A;H1X4:9]([#6;A;H2X4:10][#8:11]-[#6;X3:12]([#6;A;X4:13])=[O;X1:14])[#8;X2:15]-[#6;X3:16]([#6;A;X4:17])=[O;X1:18])[#8;A:5]1"
//						"[H][#8:5]!@-[P:4](!@=[O;X1:6])(!@-[#8;X2:7]!@-[#6;A;H2X4:8]!@-[#6:9](!@-[#6;A;H2X4:10]!@-[#8;X2:11]!@-[#6:12]([#6,#1;A:13])!@=[O;X1:14])!@-[#8;X2:15]!@-[#6:16]([#6,#1;A:17])!@=[O;X1:18])!@-[#8;X2:3]!@-[#6;A;H2X4:2]!@-[#6;A;X4:1]([H])([H:99])!@-[N+:19](!@-[#6;A;H3X4:20])(!@-[#6;A;H3X4:21])!@-[#6;A;H3X4:22]>>[#6;A;H3X4:22]!@-[#7:19](!@-[#6;A;H3X4:21])!@-[#6;A;H3X4:20].[H][#6;A;X4:1]1([H:99])[#6;A;H2X4:2][#8;X2:3][P:4](!@=[O;X1:6])(!@-[#8;X2:7]!@-[#6;A;H2X4:8]!@-[#6:9](!@-[#6;A;H2X4:10]!@-[#8;X2:11]!@-[#6:12]([#6,#1;A:13])!@=[O;X1:14])!@-[#8;X2:15]!@-[#6:16]([#6,#1;A:17])!@=[O;X1:18])[#8:5]1"
				},
////				"[H:99][#6;A;X4:1]([H])(!@-[#6;A;H2X4:2]!@-[#8;X2:3]!@-[P:4](!@-[#8;X1-:5])(!@=[O;X1:6])!@-[#8;X2:7]!@-[#6;A;H2X4:8]!@-[#6:9](!@-[#6;A;H2X4:10]!@-[#8;X2:11]!@-[#6:12]([#6,#1;A:13])!@=[O;X1:14])!@-[#8;X2:15]!@-[#6:16]([#6,#1;A:17])!@=[O;X1:18])!@-[N+:19](!@-[#6;A;H3X4:22])(!@-[#6;A;H3X4:21])!@-[#6;A;H3X4:20]>>[#6;A;H3X4:22]!@-[#7:19](!@-[#6;A;H3X4:21])!@-[#6;A;H3X4:20].[H][#6;A;X4:1]1([H:99])[#6;A;H2X4:2][#8;X2:3][P:4](!@=[O;X1:6])(!@-[#8;X2:7]!@-[#6;A;H2X4:8]!@-[#6:9](!@-[#6;A;H2X4:10]!@-[#8;X2:11]!@-[#6:12]([#6,#1;A:13])!@=[O;X1:14])!@-[#8;X2:15]!@-[#6:16]([#6,#1;A:17])!@=[O;X1:18])[#8:5]1",
				// [M+H]-sn2-H2O
				new String[]{
						"[H][#6;A;X4]([H])([#8]-[#6;X3]([#6;A;X4])=[O;X1])[#6;A;X4]1([H])[#6;A;H2X4][#8][P;X4](=[O;X1])([#8;X2][#6;A;H2X4][#6;A;H2X4][N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#8;X2]1",
						"[H][#8:13][P;X4:12](=[O;X1:14])([#8;X2:15][#6;A;H2X4:16][#6;A;H2X4:17][N;X4+:18]([#6;A;H3X4:21])([#6;A;H3X4:20])[#6;A;H3X4:19])[#8:11][#6;A;X4:10]([H])([H])[#6;A;X4:8]([H:9])([#8;X2:22]-[#6;X3:23]([#6;A;X4:24])=[O;X1:25])[#6;A;X4:2]([H:3])([H:1])[#8:4]-[#6;X3:5]([#6;A;X4:6])=[O;X1:7]>>[H][#8;X2:22]-[#6;X3:23]([#6;A;X4:24])=[O;X1:25].[H:3][#6;A;X4:2]([H:1])([#8:4]-[#6;X3:5]([#6;A;X4:6])=[O;X1:7])[#6;A;X4:8]1([H:9])[#8:13][P;X4:12](=[O;X1:14])([#8;X2:15][#6;A;H2X4:16][#6;A;H2X4:17][N;X4+:18]([#6;A;H3X4:21])([#6;A;H3X4:20])[#6;A;H3X4:19])[#8:11][#6;A;X4:10]1([H])[H]"
				},
////				"[H][#8;X2:10][P;X4:9](=[O;X1:11])([#8;X2:12][#6;A;H2X4:13][#6;A;H2X4:14][N;X4+:15]([#6;A;H3X4:16])([#6;A;H3X4:17])[#6;A;H3X4:18])[#8:8][#6;A;H2X4:7][#6;A;X4:6]([H])([#8;X2:19]-[#6;X3:20]([#6;A;X4:21])=[O;X1:22])[#6;A;X4:1]([H:99])([H])[#8:2]-[#6;X3:3]([#6;A;X4:4])=[O;X1:5]>>[H][#8;X2:19]-[#6;X3:20]([#6;A;X4:21])=[O;X1:22].[H:99][#6;A;X4:1]([H])([#8:2]-[#6;X3:3]([#6;A;X4:4])=[O;X1:5])[#6;A;X4:6]1([H])[#6;A;H2X4:7][#8:8][P;X4:9](=[O;X1:11])([#8;X2:12][#6;A;H2X4:13][#6;A;H2X4:14][N;X4+:15]([#6;A;H3X4:16])([#6;A;H3X4:17])[#6;A;H3X4:18])[#8;X2:10]1",
//				
//				// [M+H]-sn1-H2O
				new String[]{
						"[H][#6;A;X4]1([H])[#8;X2][P;X4](=[O;X1])([#8;X2][#6;A;H2X4][#6;A;H2X4][N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#8][#6;A;H2X4][#6;A;X4]1([H])[#8;X2]-[#6;X3]([#6;A;X4])=[O;X1]",
						"[H][#8;X2:10][P;X4:9](=[O;X1:11])([#8;X2:12][#6;A;H2X4:13][#6;A;H2X4:14][N;X4+:15]([#6;A;H3X4:18])([#6;A;H3X4:17])[#6;A;H3X4:16])[#8:8][#6;A;H2X4:7][#6;A;X4:6]([H])([#8;X2:19]-[#6;X3:20]([#6;A;X4:21])=[O;X1:22])[#6;A;X4:1]([H])([H:99])[#8:2]-[#6;X3:3]([#6;A;X4:4])=[O;X1:5]>>[H][#8:2]-[#6;X3:3]([#6;A;X4:4])=[O;X1:5].[H:99][#6;A;X4:1]1([H])[#8;X2:10][P;X4:9](=[O;X1:11])([#8;X2:12][#6;A;H2X4:13][#6;A;H2X4:14][N;X4+:15]([#6;A;H3X4:16])([#6;A;H3X4:17])[#6;A;H3X4:18])[#8:8][#6;A;H2X4:7][#6;A;X4:6]1([H])[#8;X2:19]-[#6;X3:20]([#6;A;X4:21])=[O;X1:22]"
				},
				
				// [M+H]-C5H14NO4P (-183)
				new String[]{
						"[#6;A;X4][#6;X3](=[O;X1])-[#8][#6;A;H2X4][#6;A;X3](=[#6;A;H2X3])[#8;X2]-[#6;X3]([#6;A;X4])=[O;X1]",
						"[H][#6;A;X4:6]([#6;A;H2X4:1][#8:2]-[#6;X3:3]([#6;A;X4:4])=[O;X1:5])([#6;A;H2X4:7][#8:8][P;X4:9]([#8;A;X2H1,X1-:10])(=[O;X1:11])[#8;X2:12][#6;A;H2X4:13][#6;A;H2X4:14][N;X4+:15]([#6;A;H3X4:16])([#6;A;H3X4:17])[#6;A;H3X4:18])[#8;X2:19]-[#6;X3:20]([#6;A;X4:21])=[O;X1:22]>>[#6;A;X4:4][#6;X3:3](=[O;X1:5])-[#8:2][#6;A;H2X4:1][#6;A;X3:6](=[#6;A;H2X3:7])[#8;X2:19]-[#6;X3:20]([#6;A;X4:21])=[O;X1:22].[H][#8:8][P;X4:9]([#8;A;X2H1,X1-:10])(=[O;X1:11])[#8;X2:12][#6;A;H2X4:13][#6;A;H2X4:14][N;X4+:15]([#6;A;H3X4:16])([#6;A;H3X4:17])[#6;A;H3X4:18]"
				}
		});
		
		fragmentationPatterns.put(ClassName._1_LYSOPHOSPHATIDYLCHOLINES, new String[][]{
			// [M+H]-H2O (-18) [M+H]-sn1 [M+H]-sn1-H2O C5H15NO4P m/z=184
			// [M+H]-H2O (-18)
				
			new String [] {
					"[H][#6;A;X4]1(!@-[#6;A;H2X4]!@-[#8]!@-[#6]([#6,#1;A])!@=[O;X1])[#6;A;H2X4][#8;X2][P;X4](=[O;X1])([#8;X2]!@-[#6;A;H2X4]!@-[#6;A;H2X4]!@-[N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#8;A;X2]1",
					"[H][#8;A;X2:14][#6;A;X4:13]([H])(!@-[#6;A;H2X4:15]!@-[#8:16]!@-[#6:17]([#6,#1;A:18])!@=[O;X1:19])!@-[#6;A;H2X4:12]!@-[#8;X2:11][P;X4:8](=[O;X1:10])([#8;A;X2:9][H])[#8;X2:7]!@-[#6;A;H2X4:6]!@-[#6;A;H2X4:5]!@-[N;X4+:2]([#6;A;H3X4:1])([#6;A;H3X4:3])[#6;A;H3X4:4]>>[H][#8;A;X2:9][H].[H][#6;A;X4:13]1(!@-[#6;A;H2X4:15]!@-[#8:16]!@-[#6:17]([#6,#1;A:18])!@=[O;X1:19])[#6;A;H2X4:12][#8;X2:11][P;X4:8](=[O;X1:10])([#8;X2:7]!@-[#6;A;H2X4:6]!@-[#6;A;H2X4:5]!@-[N;X4+:2]([#6;A;H3X4:1])([#6;A;H3X4:3])[#6;A;H3X4:4])[#8;A;X2:14]1"
			},
			//			"[H][#8;A;X2:14][#6;A;X4:13]([H])(!@-[#6;A;H2X4:15]!@-[#8:16]!@-[#6:17]([#6,#1;A:18])!@=[O;X1:19])!@-[#6;A;H2X4:12]!@-[#8;X2:11][P;X4:8]([#8;A;X1-:9])(=[O;X1:10])[#8;X2:7]!@-[#6;A;H2X4:6]!@-[#6;A;H2X4:5]!@-[N;X4+:2]([#6;A;H3X4:1])([#6;A;H3X4:3])[#6;A;H3X4:4]>>[#8;A;X2:9][H].[H][#6;A;X4:13]1(!@-[#6;A;H2X4:15]!@-[#8:16]!@-[#6:17]([#6,#1;A:18])!@=[O;X1:19])[#6;A;H2X4:12][#8;X2:11][P;X4:8](=[O;X1:10])([#8;X2:7]!@-[#6;A;H2X4:6]!@-[#6;A;H2X4:5]!@-[N;X4+:2]([#6;A;H3X4:1])([#6;A;H3X4:3])[#6;A;H3X4:4])[#8;A;X2:14]1",
			// [M+H]-sn1
			
			new String [] {
					"[H][#8]!@-[#6;A;H2X4]!@-[#6;A;H1X4]([#8;A;H1X2])!@-[#6;A;H2X4]!@-[#8;X2][P;X4]([#8;A;X2H1,X1-])(=[O;X1])[#8;X2]!@-[#6;A;H2X4]!@-[#6;A;H2X4]!@-[N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4]",
					"[H][#8;A:9][P;X4:8](=[O;X1:10])([#8;X2:7]!@-[#6;A;H2X4:6]!@-[#6;A;H2X4:5]!@-[N;X4+:2]([#6;A;H3X4:1])([#6;A;H3X4:3])[#6;A;H3X4:4])[#8;X2:11]!@-[#6;A;H2X4:12]!@-[#6;A;H1X4:13]([#8;A;H1X2:14])!@-[#6;A;H2X4:15]!@-[#8:16]!@-[#6:17]([#6,#1;A:18])!@=[O;X1:19]>>[H][#6:17]([#6,#1;A:18])!@=[O;X1:19].[H][#8:16]!@-[#6;A;H2X4:15]!@-[#6;A;H1X4:13]([#8;A;H1X2:14])!@-[#6;A;H2X4:12]!@-[#8;X2:11][P;X4:8]([#8;A-:9])(=[O;X1:10])[#8;X2:7]!@-[#6;A;H2X4:6]!@-[#6;A;H2X4:5]!@-[N;X4+:2]([#6;A;H3X4:4])([#6;A;H3X4:3])[#6;A;H3X4:1]"
			},
			
			new String[]{
					"[H][#8;A;X2][#6;A;X3](!@=[#6;A;H2X3])!@-[#6;A;H2X4]!@-[#8;X2][P;X4]([#8;A;X2H1,X1-])(=[O;X1])[#8;X2]!@-[#6;A;H2X4]!@-[#6;A;H2X4]!@-[N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4]",
					"[H][#8;A;X2:14][#6;A;X4:13]([H])(!@-[#6;A;H2X4:15]!@-[#8:16]!@-[#6:17]([#6,#1;A:18])!@=[O;X1:19])!@-[#6;A;H2X4:12]!@-[#8;X2:11][P;X4:8](=[O;X1:10])([#8;A;X2:9][H])[#8;X2:7]!@-[#6;A;H2X4:6]!@-[#6;A;H2X4:5]!@-[N;X4+:2]([#6;A;H3X4:4])([#6;A;H3X4:3])[#6;A;H3X4:1]>>[H][#8:16]!@-[#6:17]([#6,#1;A:18])!@=[O;X1:19].[H][#8;A;X2:14][#6;A;X3:13](!@=[#6;A;H2X3:15])!@-[#6;A;H2X4:12]!@-[#8;X2:11][P;X4:8](=[O;X1:10])([#8;A;X2:9][H])[#8;X2:7]!@-[#6;A;H2X4:6]!@-[#6;A;H2X4:5]!@-[N;X4+:2]([#6;A;H3X4:4])([#6;A;H3X4:3])[#6;A;H3X4:1]"
			},
			
			new String[]{
					"[#6;A;H3X4][N;X4+]([#6;A;H3X4])([#6;A;H3X4])!@-[#6;A;H2X4]!@-[#6;A;H2X4]!@-[#8;X2][P;X4]([#8;A;X2H1,X1-])([#8;A;X2H1,X1-])=[O;X1]",
					"[H][#6;A;X4:18][#6:17](!@=[O;X1:19])!@-[#8:16]!@-[#6;A;H2X4:15]!@-[#6;A;X4:13]([H])([#8;A;H1X2:14])!@-[#6;A;H2X4:12]!@-[#8;X2:11][P;X4:8](=[O;X1:10])([#8;A:9][H])[#8;X2:7]!@-[#6;A;H2X4:6]!@-[#6;A;H2X4:5]!@-[N;X4+:2]([#6;A;H3X4:1])([#6;A;H3X4:3])[#6;A;H3X4:4]>>[H][#6;A;X4:18][#6:17](!@=[O;X1:19])!@-[#8:16]!@-[#6;A;H2X4:15]!@-[#6;A;H0X3:13]([#8;A;H1X2:14])!@=[#6;A;H2X3:12].[H][#8;A:9][P;X4:8](=[O;X1:10])([#8;X2:11][H])[#8;X2:7]!@-[#6;A;H2X4:6]!@-[#6;A;H2X4:5]!@-[N;X4+:2]([#6;A;H3X4:4])([#6;A;H3X4:3])[#6;A;H3X4:1]"
			}
						
			});
//
//		fragmentationPatterns.put(ClassName._2_LYSOPHOSPHATIDYLCHOLINES, new String[]{
//				// sn-2
//				"[#6;A;H3X4][N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H2X4][#6;A;H2X4][#8;X2]P([#8;X2H1,X1-])(=[O;X1])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#8;X2]-[#6:1]([#6,#1;A:2])=[O;X1:3]>>[#6,#1;A:2][#6:1]=[O;X1:3]"
//		});
//		
//		
		fragmentationPatterns.put(ClassName.PLASMENYLPHOSPHATIDYLCHOLINES, new String[][]{
			// [M+H]-C5H14NO4P (-183)	
			new String[]{
					"[H]-[#6;X3]=[#6;X3](/[H])-[#8]-[#6;H2X4][C;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6+]([H])[H]",
					"[H][#8;A:9][P:8](=[O;X1:10])([#8;X2:7][C;X4:6]([H])([H])[C;X4:5]([H])([H])[N+:2]([#6;H3X4:1])([#6;H3X4:3])[#6;H3X4:4])[#8;X2:11][C;X4:12]([H])([H])[C;X4:13]([H:22])([#6;H2X4:14]-[#8:15]-[#6;X3:16]([H])=[#6;X3:17]/[H])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]>>[H]-[#6;X3:17]=[#6;X3:16](-[H])-[#8:15]-[#6;H2X4:14][C;X4:13]([H:22])([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;X4+:12]([H])[H].[H][#8;A:9][P:8](=[O;X1:10])([#8;X2:11][H])[#8;X2:7][C;X4:6]([H])([H])[C;X4:5]([H])([H])[N+:2]([#6;H3X4:1])([#6;H3X4:3])[#6;H3X4:4]"
			},
			//[M+H]-sn2
			new String[]{
					"[H][#8;X2][C;X4]([H])([#6;H2X4]-[#8]-[#6;X3]([H])=[#6;X3]-[H])[C;X4]([H])([H])[#8;X2]P(=[O;X1])([#8;A][H])[#8;X2][C;X4]([H])([H])[C;X4]([H])([H])[N+]([#6;H3X4])([#6;H3X4])[#6;H3X4]",
					"[H][#8;A:9][P:8](=[O;X1:10])([#8;X2:7][C;X4:6]([H])([H])[C;X4:5]([H])([H])[N+:2]([#6;H3X4:1])([#6;H3X4:3])[#6;H3X4:4])[#8;X2:11][C;X4:12]([H])([H])[C;X4:13]([H:22])([#6;H2X4:14]-[#8:15]-[#6;X3:16]([H])=[#6;X3:17]/[H])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]>>[H][#6:19]([#6,#1;A:20])=[O;X1:21].[H][#8;X2:18][C;X4:13]([H:22])([#6;H2X4:14]-[#8:15]-[#6;X3:16]([H])=[#6;X3:17]-[H])[C;X4:12]([H])([H])[#8;X2:11][P:8](=[O;X1:10])([#8;A:9][H])[#8;X2:7][C;X4:6]([H])([H])[C;X4:5]([H])([H])[N+:2]([#6;H3X4:1])([#6;H3X4:3])[#6;H3X4:4]"
			},
			//[M+H]-sn1 (alkenyl ether loss)
			new String[]{
					"[H][#8;A]P(=[O;X1])([#8;X2][C;X4]([H])([H])[#6;X3](-[#8;X2]-[#6]([#6,#1;A])=[O;X1])=[#6;X3](/[H])[H])[#8;X2][C;X4]([H])([H])[C;X4]([H])([H])[N+]([#6;H3X4])([#6;H3X4])[#6;H3X4]",
					"[H][#8;A:1][P:2](=[O;X1:3])([#8;X2:4][C;X4:5]([H:6])([H:7])[C;X4:8]([H:9])([H:10])[N+:11]([#6;H3X4:12])([#6;H3X4:13])[#6;H3X4:14])[#8;X2:15][C;X4:16]([H])([H])[C;X4:17]([H])([#8;X2:22]-[#6:23]([#6,#1;A:24])=[O;X1:25])[C;X4:18]([H])([H])[#8:19]-[#6;X3:20]([H])=[#6;X3:21]-[H]>>[H][#8:19]-[#6;X3:20]([H])=[#6;X3:21]-[H].[H][#8;A:1][P:2](=[O;X1:3])([#8;X2:15][C;X4:16]([H])([H])[#6;X3:17](-[#8;X2:22]-[#6:23]([#6,#1;A:24])=[O;X1:25])=[#6;X3:18]([H])[H])[#8;X2:4][C;X4:5]([H:6])([H:7])[C;X4:8]([H:9])([H:10])[N+:11]([#6;H3X4:12])([#6;H3X4:13])[#6;H3X4:14]"
			},
			// [M+H]-sn2-H2O
			new String[]{
					"[H][#8;A]P(=[O;X1])([#8;X2]-[#6;X3]([H])=[#6;X3](/[H])[C;X4]([H])([H])[#8]-[#6;X3]([H])=[#6;X3]-[H])[#8;X2][C;X4]([H])([H])[C;X4]([H])([H])[N+]([#6;H3X4])([#6;H3X4])[#6;H3X4]",
					"[H][#8;A:1][P:2](=[O;X1:3])([#8;X2:4][C;X4:5]([H:6])([H:7])[C;X4:8]([H:9])([H:10])[N+:11]([#6;H3X4:12])([#6;H3X4:13])[#6;H3X4:14])[#8;X2:15][C;X4:16]([H])([H])[C;X4:17]([H])([#8;X2:22]-[#6:23]([#6,#1;A:24])=[O;X1:25])[C;X4:18]([H])([H])[#8:19]-[#6;X3:20]([H])=[#6;X3:21]-[H]>>[H][#8;X2:22]-[#6:23]([#6,#1;A:24])=[O;X1:25].[H][#8;A:1][P:2](=[O;X1:3])([#8;X2:15]-[#6;X3:16]([H])=[#6;X3:17](/[H])[C;X4:18]([H])([H])[#8:19]-[#6;X3:20]([H])=[#6;X3:21]-[H])[#8;X2:4][C;X4:5]([H:6])([H:7])[C;X4:8]([H:9])([H:10])[N+:11]([#6;H3X4:12])([#6;H3X4:13])[#6;H3X4:14]"
			},
			// [M+H]-sn1-C3H9N (-59)
			new String[]{
					"[H][#8;A]P(=[O;X1])([#8;X2][C;X4]([H])([H])[#6;X3+]([H])[H])[#8;X2][C;X4]([H])([H])[#6;X3](-[#8;X2]-[#6]([#6,#1;A])=[O;X1])=[#6;X3]([H])[H]",
					"[H][#8;A:1][P:2](=[O;X1:3])([#8;X2:4][C;X4:5]([H:6])([H:7])[C;X4:8]([H:9])([H:10])[N+:11]([#6;H3X4:12])([#6;H3X4:13])[#6;H3X4:14])[#8;X2:15][C;X4:16]([H])([H])[C;X4:17]([H])([#8;X2:22]-[#6:23]([#6,#1;A:24])=[O;X1:25])[C;X4:18]([H])([H])[#8:19]-[#6;X3:20]([H])=[#6;X3:21]-[H]>>[H][N+:11]([#6;H3X4:12])([#6;H3X4:13])[#6;H3X4:14].[H][#8:19]-[#6;X3:20]([H])=[#6;X3:21]-[H].[H][#8;A:1][P:2](=[O;X1:3])([#8;X2:4][C;X4:5]([H:6])([H:7])[#6;X3+:8]([H:9])[H:10])[#8;X2:15][C;X4:16]([H])([H])[#6;X3:17](-[#8;X2:22]-[#6:23]([#6,#1;A:24])=[O;X1:25])=[#6;X3:18]([H])[H]"
			}
				// 
//				"[#6;H3X4][N+]([#6;H3X4])([#6;H3X4])[#6;H2X4]-[#6;H2X4]-[#8;X2]P([#8;A;X2H1,X1-])(=[O;X1])[#8;X2]-[#6;H2X4]-[#6;H1X4](-[#6;H2X4]-[#8]-[#6;H1X3:1]=[#6;X3:2])-[#8;X2]-[#6:3]([#6,#1;A:4])=[O;X1:5]>>[H][#6;X3:1](-[#8])=[#6;X3:2].[#6:3]([#6,#1;A:4])=[O;X1:5]"
				
		});
//		
////		// [M+Na]+ incomplete
////		fragmentationPatterns.put(ClassName.PHOSPHATIDYLETHANOLAMINES, new String[]{
////				"[#7;A;H2X3:1][#6;A;H2X4:2][#6;A;H2X4:3][#8;X2R0:4][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;X1R0:15])[#8;X2R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19]>>[#8;A;X2H1,X1-:6][P:5]([#8;X1R0-:4])(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;X1R0:15])[#8;X2R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19].[H][#6;A;X4:3][#6;A;H2X4:2][#7;A;H2X3:1]",
////				"[#7;A;H2X3:1][#6;A;H2X4:2][#6;A;H2X4:3][#8;X2R0:4][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;X1R0:15])[#8;X2R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19]>>[H][#8;X2R0:8][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:4][#6;A;H2X4:3][#6;A;H2X4:2][#7;A;H2X3:1].[#6;A;H2X4+:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;X1R0:15])[#8;X2R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19]",
////				"[#7;A;H2X3:1][#6;A;H2X4:2][#6;A;H2X4:3][#8;X2R0:4][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;X1R0:15])[#8;X2R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19]>>[H][#6;A;X3:3][#6;A;H2X3:2][#7;A;H2X2:1].[H][#6;R0:13]([#6,#1;A:14])=[O;X1R0:15].[H][#8;X2R0:12][#6;A;H2X4:11][#6;A;H1X4:10]([#6;A;H2X4:9][#8;X2R0:8][P:5]([#8;A;X2H1,X1-:6])([#8;X1R0-:4])=[O;X1:7])[#8;X2R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19]",
////		});
//		
//		// e.g.: GPEtn(2:0/2:0)
//		// [M+H]+:  [M+H]-C2H8NO4P (-141); [M+H]-sn1; [M+H]-sn2; [M+H]-sn1-H2O; [M+H]-sn2-H2O; sn2-O; sn1-O
//		fragmentationPatterns.put(ClassName.PHOSPHATIDYLETHANOLAMINES, new String[]{
//				"[H][#6;A;X4:2]([H])([#7;A;H2X3:1])[#6;A;H2X4:3][#8;X2R0:4][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6;A;X4:14])=[O;X1R0:15])[#8;X2R0:16]-[#6;R0:17]([#6;A;X4:18])=[O;R0:19]>>[H][#8;A:6][H].[H][#6;A;X4:2]1([#7;A;H2X3:1])[#6;A;H2X4:3][#8;X2R0:4][P:5]1(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6;A;X4:14])=[O;X1R0:15])[#8;X2R0:16]-[#6;R0:17]([#6;A;X4:18])=[O;R0:19]",
//				"[#7;A;H2X3:1][#6;A;H2X4:2][#6;A;H2X4:3][#8;X2R0:4][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6;X4;A:14])=[O;X1R0:15])[#8;X2R0:16]-[#6;R0:17]([#6;X4;A:18])=[O;R0:19]>>[H][#8;X2R0:8][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:4][#6;A;H2X4:3][#6;A;H2X4:2][#7;A;H2X3:1].[#6;X4;A:14][#6;R0:13](=[O;X1R0:15])-[#8;X2R0:12][#6;A;H2X4:11][#6;A;H0X3:10](=[#6;A;H2X3:9])[#8;X2R0:16]-[#6;R0:17]([#6;X4;A:18])=[O;R0:19]",
//				"[#7;A;H2X3:1][#6;A;H2X4:2][#6;A;H2X4:3][#8;X2R0:4][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6;X4;A:14])=[O;X1R0:15])[#8;X2R0:16]-[#6;R0:17]([#6;X4;A:18])=[O;R0:19]>>[#6;A;X4:14][#6;R0+:13]=[O;X1R0:15].[H][#8;X2R0:12][#6;A;H2X4:11][#6;A;H1X4:10]([#6;A;H2X4:9][#8;X2R0:8][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:4][#6;A;H2X4:3][#6;A;H2X4:2][#7;A;H2X3:1])[#8;X2R0:16]-[#6;R0:17]([#6;X4;A:18])=[O;R0:19]",
//				"[#7;A;H2X3:1][#6;A;H2X4:2][#6;A;H2X4:3][#8;X2R0:4][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6;X4;A:14])=[O;X1R0:15])[#8;X2R0:16]-[#6;R0:17]([#6;X4;A:18])=[O;R0:19]>>[#6;A;X4:18][#6;R0+:17]=[O;R0:19].[#7;A;H2X3:1][#6;A;H2X4:2][#6;A;H2X4:3][#8;X2R0:4][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H1X4:10]([#8;X1R0-:16])[#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6;X4;A:14])=[O;X1R0:15]",
//				"[#7;A;H2X3:1][#6;A;H2X4:2][#6;A;H2X4:3][#8;X2R0:4][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6;X4;A:14])=[O;X1R0:15])[#8;X2R0:16]-[#6;R0:17]([#6;X4;A:18])=[O;R0:19]>>[H][#8;X2R0:12]-[#6;R0:13]([#6;X4;A:14])=[O;X1R0:15].[#7;A;H2X3:1][#6;A;H2X4:2][#6;A;H2X4:3][#8;X2R0:4][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H0X3:10](=[#6;A;H2X3:11])[#8;X2R0:16]-[#6;R0:17]([#6;X4;A:18])=[O;R0:19]",
//				"[#7;A;H2X3:1][#6;A;H2X4:2][#6;A;H2X4:3][#8;X2R0:4][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6;X4;A:14])=[O;X1R0:15])[#8;X2R0:16]-[#6;R0:17]([#6;X4;A:18])=[O;R0:19]>>[H][#8;X2R0:16]-[#6;R0:17]([#6;X4;A:18])=[O;R0:19].[#7;A;H2X3:1][#6;A;H2X4:2][#6;A;H2X4:3][#8;X2R0:4][P:5]([#8;A;X2H1,X1-:6])(=[O;X1:7])[#8;X2R0:8][#6;A;H2X4:9][#6;A;H1X3+:10][#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6;X4;A:14])=[O;X1R0:15]"
//
//		});
//		
//		// DOI: 10.1007/s11745-997-0013-4;
//		// [M+H]+: [M+H]-H2O (-18) ; [M+H]-(C2NH5+H20) (-61); [M+H]-C3H8NO6P (-141); [M+H]-sn1; [M+H]-sn1-H2O.
//		fragmentationPatterns.put(ClassName._1_LYSOPHOSPHATIDYLETHANOLAMINES, new String[]{
//			
//				"[H][#8;X2R0:6][#6;A;H1X4:7]([#6;A;H2X4:5][#8;X2R0:4]-[#6;R0:3]([#6;A;X4:2])=[O;X1R0:1])[#6;A;H2X4:8][#8;X2R0:9][P:12](=[O;X1:10])([#8;A:11][H])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16]>>[H][#8;A:11][H].[#6;A;X4:2][#6;R0:3](=[O;X1R0:1])-[#8;X2R0:4][#6;A;H2X4:5][#6;A;H1X4:7]1[#6;A;H2X4:8][#8;X2R0:9][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3:16])[#8;H0v2X2R1;+0:6]1",
//	
//				"[H][#8;X2R0:6][#6;A;H1X4:7]([#6;A;H2X4:5][#8;X2R0:4]-[#6;R0:3]([#6;A;X4:2])=[O;X1R0:1])[#6;A;H2X4:8][#8;X2R0:9][P:12]([#8;A;X2H1,X1-:11])(=[O;X1:10])[#8;X2R0:13][#6;A;X4:14]([H])([H])[#6;A;H2X4:15][#7;A;H2X3,H3X4+:16]>>[H][#8;A:11][H].[H][#6;A;X3:15]([#7;A;H2X3:16])=[#6;A;H2X3:14].[H][#8;X2R0:13][P:12]1(=[O;X1:10])[#8;X2R0:9][#6;A;H2X4:8][#6;A;H1X4:7]([#6;A;H2X4:5][#8;X2R0:4]-[#6;R0:3]([#6;A;X4:2])=[O;X1R0:1])[#8;X2R1:6]1",
//				
//				"[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;X4:7]([H])([#8;H1X2R0:6])[#6;A;H2X4:5][#8;X2R0:4]-[#6;R0:3]([#6;A;X4:2])=[O;X1R0:1]>>[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:9][H])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16].[H]-[#6;A;X3:8]([H])=[#6;A;X3:7](-[#8;H1X2R0:6])[#6;A;H2X4:5][#8;X2R0:4]-[#6;R0:3]([#6;A;X4:2])=[O;X1R0:1]",
//				
//				"[H:1][#8;A:2][P:3](=[O;X1:4])([#8;X2R0:5][#6;A;H2X4:6][#6;A;H2X4:7][#7;A;H2X3,H3X4+:8])[#8;X2R0:9][#6;A;H2X4:10][#6;A;H1X4:11]([#8;H1X2R0:12])[#6;A;H2X4:13][#8;X2R0:14]-[#6;R0:15]([#6;A:17])=[O;X1:16]>>[H][#8;X2R0:14][#6;A;H2X4:13][#6;A;H1X4:11]([#8;H1X2R0:12])[#6;A;H2X4:10][#8;X2R0:9][P:3](=[O;X1:4])([#8;A:2][H:1])[#8;X2R0:5][#6;A;H2X4:6][#6;A;H2X4:7][#7;A;H2X3,H3X4+:8].[H][#6;R0:15]([#6;A:17])=[O;X1:16]",			
//				
//				"[H][#8;A:11][P:10](=[O;X1:12])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;H2X4:8][#6;A;X4:1]([H])([#8;H1X2R0:2])[#6;A;X4:3]([H])([H])[#8;X2R0:4]-[#6;R0:5]([#6;A;X4:6])=[O;X1R0:7]>>[H][#8;X2R0:4]-[#6;R0:5]([#6;A;X4:6])=[O;X1R0:7].[H][#8;A:11][P:10](=[O;X1:12])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;H2X4:8]-[#6;A;X3:1]([#8;H1X2R0:2])=[#6;A;X3:3](/[H])[H]",
//		});
//		
//
//		fragmentationPatterns.put(ClassName._1_LYSOPLASMENYL_ETHANOLAMINES, new String[]{
//				"[H][#8;X2R0:11][#6;A;X4:10]([H])([#6;A;H2X4:12][#8;X2R0:13]-[#6;R0:14]([H:16])=[#6;A;X3:15]([H:17])[#6;A:18])[#6;A;H2X4:9][#8;X2R0:8][P:5](=[O;X1:7])([#8;A:6][H])[#8;X2R0:4][#6;A;H2X4:3][#6;A;H2X4:2][#7;A;H2X3,H3X4+:1]>>[H][#8;A:6][H].[H:17][#6;A;X3:15]([#6;A:18])=[#6;R0:14]([H:16])-[#8;X2R0:13][#6;A;H2X4:12][#6;A;X4:10]1([H])[#6;A;H2X4:9][#8;X2R0:8][P:5](=[O;X1:7])([#8;X2R0:4][#6;A;H2X4:3][#6;A;H2X4:2][#7;A;H2X3,H3X4+:1])[#8;X2R0:11]1",
//				"[H][#8;X2R0:6][#6;A;H1X4:7]([#6;A;H2X4:5][#8;X2R0:4]-[#6;X3R0:3]([H:1])=[#6;A;X3:2]/[H])[#6;A;H2X4:8][#8;X2R0:9][P:12](=[O;X1:10])([#8;A:11][H])[#8;X2R0:13][#6;A;H2X4:14][#6;A;X4:15]([H])([H])[#7;A;H2X3,H3X4+:16]>>[H][#8;A:11][H].[H][#6;A;X3:15]([#7;A;H2X3:16])=[#6;A;H2X3:14].[H][#8;X2R0:13][P:12]1(=[O;X1:10])[#8;X2R0:9][#6;A;H2X4:8][#6;A;H1X4:7]([#6;A;H2X4:5][#8;X2R0:4]-[#6;R0:3]([H:1])=[#6;A;X3:2]-[H])[#8;X2R1:6]1",
//				"[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;X4:7]([H])([#8;H1X2R0:6])[#6;A;H2X4:5][#8;X2R0:4]-[#6;R0:3]([H:1])=[#6;A;X3:2]-[H]>>[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:9][H])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16].[H]-[#6;A;X3:2]=[#6;R0:3](/[H:1])-[#8;X2R0:4][#6;A;H2X4:5]-[#6;A;X3:7]([#8;H1X2R0:6])=[#6;A;X3:8](/[H])[H]",
//				
//				"[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;X4:7]([H])([#8;H1X2R0:6])[#6;A;X4:5]([H])([H])[#8;X2R0:4]-[#6;R0:3]([H:1])=[#6;A;X3:2]-[H]>>[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;X4:7]([H])([#8;H1X2R0:6])[#6;A;X4:5]([H])([H])[H].[H][#8;X2R0:4]-[#6;R0:3]([H:1])=[#6;A;X3:2]-[H]",
////				"[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;H1X4:7]([#8;H1X2R0:6])[#6;A;H2X4:5][#8;X2R0:4]-[#6;R0:3]([H:1])=[#6;A;X3:2]-[H]>>[H]-[#6;A;X3:2]=[#6;R0:3](/[H:1])[H].[H][#8;X2R0:4][#6;A;H2X4:5][#6;A;H1X4:7]([#8;H1X2R0:6])[#6;A;X4:8]([H])([H])[#8;X2R0:9][P:12](=[O;X1:10])([#8;A:11][H])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16]",			
//
//				"[H][#8;X2R0:6][#6;A;X4:7]([H])([#6;A;X4:5]([H])([H])[#8;X2R0:4]-[#6;R0:3]([H:1])=[#6;A;X3:2]-[H])[#6;A;X4:8]([H])([H])[#8;X2R0:9][P:12](=[O;X1:10])([#8;A:11][H])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16]>>[H][#8;X2R0:6][H].[H][#8;X2R0:4]-[#6;R0:3]([H:1])=[#6;A;X3:2]-[H].[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;X3:7](-[H])=[#6;A;X3:5](-[H])[H]",
////				"[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;X4:7]([H])([#8;H1X2R0:6])[#6;A;X4:5]([H])([H])[#8;X2R0:4]-[#6;R0:3]([H:1])=[#6;A;X3:2]-[H]>>[H][#8;X2R0:4]-[#6;R0:3]([H:1])=[#6;A;X3:2]/[H].[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;X3:7](-[#8;H1X2R0:6])=[#6;A;X3:5](-[H])[H]"
//		});
//
//
//		fragmentationPatterns.put(ClassName._1_LYSOPLASMANYL_ETHANOLAMINES, new String[]{
//				"[H][#8;X2R0:11][#6;A;X4:10]([H])([#6;A;H2X4:12][#8;X2R0:13][C;R0:14]([H:16])([H])[#6;A;X4:15]([H:17])([H])[#6;A:18])[#6;A;H2X4:9][#8;X2R0:8][P:5](=[O;X1:7])([#8;A:6][H])[#8;X2R0:4][#6;A;H2X4:3][#6;A;H2X4:2][#7;A;H2X3,H3X4+:1]>>[H][#8;A:6][H].[H:17][#6;A;X4:15]([H])([#6;A:18])[C;R0:14]([H:16])([H])[#8;X2R0:13][#6;A;H2X4:12][#6;A;X4:10]1([H])[#6;A;H2X4:9][#8;X2R0:8][P:5](=[O;X1:7])([#8;X2R0:4][#6;A;H2X4:3][#6;A;H2X4:2][#7;A;H2X3,H3X4+:1])[#8;X2R0:11]1",
//				
//				"[H][#8;X2R0:6][#6;A;H1X4:7]([#6;A;H2X4:5][#8;X2R0:4][C;X4R0:3]([H:1])([H])[#6;A;X4:2]([H])[H])[#6;A;H2X4:8][#8;X2R0:9][P:12](=[O;X1:10])([#8;A:11][H])[#8;X2R0:13][#6;A;H2X4:14][#6;A;X4:15]([H])([H])[#7;A;H2X3,H3X4+:16]>>[H][#8;A:11][H].[H][#6;A;X3:15]([#7;A;H2X3:16])=[#6;A;H2X3:14].[H][#8;X2R0:13][P:12]1(=[O;X1:10])[#8;X2R0:9][#6;A;H2X4:8][#6;A;H1X4:7]([#6;A;H2X4:5][#8;X2R0:4][C;R0:3]([H:1])([H])[#6;A;X4:2]([H])[H])[#8;X2R1:6]1",
//				
//				"[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;X4:7]([H])([#8;H1X2R0:6])[#6;A;H2X4:5][#8;X2R0:4][C;R0:3]([H:1])([H])[#6;A;X4:2]([H])[H]>>[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:9][H])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16].[H][#6;A;X3:2]([H])[C;R0:3]([H:1])([H])[#8;X2R0:4][#6;A;H2X4:5]-[#6;A;X3:7]([#8;H1X2R0:6])=[#6;A;X3:8](-[H])[H]",
//				
//				"[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;X4:7]([H])([#8;H1X2R0:6])[#6;A;X4:5]([H])([H])[#8;X2R0:4][C;R0:3]([H])([H:1])[#6;A;X4:2]([H])[H]>>[H][#8;X2R0:4][C;R0:3]([H])([H:1])[#6;A;X4:2]([H])[H].[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;X4:7]([H])([#8;H1X2R0:6])[#6;A;X4:5]([H])([H])[H]",
////				"[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;H1X4:7]([#8;H1X2R0:6])[#6;A;H2X4:5][#8;X2R0:4]-[#6;R0:3]([H:1])=[#6;A;X3:2]-[H]>>[H]-[#6;A;X3:2]=[#6;R0:3](/[H:1])[H].[H][#8;X2R0:4][#6;A;H2X4:5][#6;A;H1X4:7]([#8;H1X2R0:6])[#6;A;X4:8]([H])([H])[#8;X2R0:9][P:12](=[O;X1:10])([#8;A:11][H])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16]",			
//				
//				"[H][#8;X2R0:6][#6;A;X4:7]([H])([#6;A;X4:5]([H])([H])[#8;X2R0:4][C;R0:3]([H:1])([H])[#6;A;X4:2]([H])[H])[#6;A;X4:8]([H])([H])[#8;X2R0:9][P:12](=[O;X1:10])([#8;A:11][H])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16]>>[H][#8;A:11][H].[H][#8;X2R0:4][C;R0:3]([H])([H:1])[#6;A;X4:2]([H])[H].[H][#6;A;X4:5]([H])([H])[#6;A;X4:7]1([H])[#8;X2R1:6][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]1([H])[H]",
////				"[H][#8;X2R0:6][#6;A;X4:7]([H])([#6;A;X4:5]([H])([H])[#8;X2R0:4][C;R0:3]([H:1])([H])[#6;A;X4:2]([H])[H])[#6;A;X4:8]([H])([H])[#8;X2R0:9][P:12](=[O;X1:10])([#8;A:11][H])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16]>>[H][#8;X2R0:6][H].[H][#8;X2R0:4][C;R0:3]([H:1])([H])[#6;A;X4:2]([H])[H].[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;X3:7](-[H])=[#6;A;X3:5](/[H])[H]",
////				"[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;X4:7]([H])([#8;H1X2R0:6])[#6;A;X4:5]([H])([H])[#8;X2R0:4]-[#6;R0:3]([H:1])=[#6;A;X3:2]-[H]>>[H][#8;X2R0:4]-[#6;R0:3]([H:1])=[#6;A;X3:2]/[H].[H][#8;A:11][P:12](=[O;X1:10])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;H2X3,H3X4+:16])[#8;X2R0:9][#6;A;X4:8]([H])([H])[#6;A;X3:7](-[#8;H1X2R0:6])=[#6;A;X3:5](-[H])[H]"
//		});
//		
//		
//		
//		
//		// [M+H]+: [M+H]-H2O (-18) ; [M+H]-(C2NH5+H20) (-61); [M+H]-C3H8NO6P (-141); [M+H]-sn1; [M+H]-sn1-H2O. inferred from 1-LYSOPHOSPHATIDYLETHANOLAMINES, because I did not find examples of 2-LYSOPHOSPHATIDYLETHANOLAMINES
//		// in the LipidBlast set of examples.
//		fragmentationPatterns.put(ClassName._2_LYSOPHOSPHATIDYLETHANOLAMINES, new String[]{
////			"[#6;X4:1]-[#6;R0:2](=[O;X1R0:3])-[#8;X2R0:4][#6;A;H1X4:5]([#6;A;H2X4:6][#8;H1X2R0:7])[#6;A;H2X4:8][#8;X2R0:9][P:10]([#8;A;X2H1,X1-:11])(=[O;X1:12])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;X3H2,X4H3+:16]>>[H][#8;A:11][H].[#6;X4:1]-[#6;R0:2](=[O;X1R0:3])-[#8;X2R0:4][#6;A;H1X4:5]1[#6;A;H2X4:6][#8;H0v2X2R1:7][P:10](=[O;X1:12])([#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;X3H2,X4H3+:16])[#8;X2R1:9][#6;A;H2X4:8]1",	
////			"[#6;X4:1]-[#6;R0:2](=[O;X1R0:3])-[#8;X2R0:4][#6;A;H1X4:5]([#6;A;H2X4:6][#8;H1X2R0:7])[#6;A;H2X4:8][#8;X2R0:9][P:10]([#8;A;X2H1,X1-:11])(=[O;X1:12])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;X3H2,X4H3+:16]>>[H][#8;A:11][H].[#7;A;X3H2,X4H3+:16][#6;A;H1X3:15]=[#6;A;H2X3:14].[H][#8;X2R0:13][P:10]1(=[O;X1:12])[#8;H0v2X2R1:7][#6;A;H2X4:6][#6;A;H1X4:5]([#6;A;H2X4:8][#8;X2R1:9]1)[#8;X2R0:4]-[#6;R0:2](-[#6;X4:1])=[O;X1R0:3]",
////			"[#6;X4:1]-[#6;R0:2](=[O;X1R0:3])-[#8;X2R0:4][#6;A;H1X4:5]([#6;A;H2X4:6][#8;H1X2R0:7])[#6;A;H2X4:8][#8;X2R0:9][P:10]([#8;A;X2H1,X1-:11])(=[O;X1:12])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;X3H2,X4H3+:16]>>[#6;X4:1]-[#6;R0:2](=[O;X1R0:3])-[#8;X2R0:4][#6;A;H1X4:5](=[#6;A;H2X3:8])[#6;A;H2X4:6][#8;H1X2R0:7].[H][#8;X2R0:9][P:10]([#8;A;X2H1,X1-:11])(=[O;X1:12])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;X3H2,X4H3+:16]",	
////			"[#6;X4:1]-[#6;R0:2](=[O;X1R0:3])-[#8;X2R0:4][#6;A;H1X4:5]([#6;A;H2X4:6][#8;H1X2R0:7])[#6;A;H2X4:8][#8;X2R0:9][P:10]([#8;A;X2H1,X1-:11])(=[O;X1:12])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;X3H2,X4H3+:16]>>[H][#6;R0:2](-[#6;X4:1])=[O;X1R0:3].[H][#8;X2R0:4][#6;A;H1X4:5]([#6;A;H2X4:6][#8;H1X2R0:7])[#6;A;H2X4:8][#8;X2R0:9][P:10]([#8;A;X2H1,X1-:11])(=[O;X1:12])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;X3H2,X4H3+:16]",	
////			"[#6;X4:1]-[#6;R0:2](=[O;X1R0:3])-[#8;X2R0:4][#6;A;H1X4:5]([#6;A;H2X4:6][#8;H1X2R0:7])[#6;A;H2X4:8][#8;X2R0:9][P:10]([#8;A;X2H1,X1-:11])(=[O;X1:12])[#8;X2R0:13][#6;A;H2X4:14][#6;A;H2X4:15][#7;A;X3H2,X4H3+:16]>>[#6;X3:1]-[#6;X4R0:2](-[#8;R0-:4])=[O;R0:3].[#7;A;X3H2,X4H3+:16][#6;A;H2X4:15][#6;A;H2X4:14][#8;X2R0:13][P:10]([#8;A;X2H1,X1-:11])(=[O;X1:12])[#8;X2R0:9][#6;A;H2X4:8]-[#6;A;H1X3:5]=[#6;A;H1X3:6]/[#8;H1X2R0:7]"	
//		
//		});
//			
//		
		// fix it. 4th peak is not right!! email sent to UC Davis
		fragmentationPatterns.put(ClassName.PLASMENYLPHOSPHATIDYLETHANOLAMINES, new String[][]{
			// "[M+H]-H2O (-18)"			
			new String[]{
				"[H][#6;X3]([#6,#1;A])=[#6;H1X3]-[#8]-[#6;H2X4]-[#6;H1X4](-[#6;H2X4]-[#8;X2]P1(=[O;X1])[#8;X2]-[#6;H2X4][C;X4]1([H])[#7;A;H2X3])-[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
				"[H][#8;A:6][P:5](=[O;X1:7])([#8;X2:8]-[#6;H2X4:9]-[#6;H1X4:10](-[#6;H2X4:11]-[#8:12]-[#6;H1X3:13]=[#6;X3:14]([H])[#6,#1;A:19])-[#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18])[#8;X2:4]-[#6;H2X4:3][C;X4:2]([H])([H])[#7;A;H2X3:1]>>[H][#8;A:6][H].[H][#6;X3:14]([#6,#1;A:19])=[#6;H1X3:13]-[#8:12]-[#6;H2X4:11]-[#6;H1X4:10](-[#6;H2X4:9]-[#8;X2:8][P:5]1(=[O;X1:7])[#8;X2:4]-[#6;H2X4:3][C;X4:2]1([H])[#7;A;H2X3:1])-[#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18]"
			},
//			"[H][#8;A:6][P:5](=[O;X1:7])([#8;X2:8]-[#6;H2X4:9]-[#6;H1X4:10](-[#6;H2X4:11]-[#8:12]-[#6;H1X3:13]=[#6;X3:14]-[#6,#1;A:19])-[#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18])[#8;X2:4]-[#6;H2X4:3][C;X4:2]([H])([H])[#7;A;H2X3:1]>>[H][#8;A:6][H].[H][C;X4:2]1([#7;A;H2X3:1])[#6;H2X4:3]-[#8;X2:4][P:5]1(=[O;X1:7])[#8;X2:8]-[#6;H2X4:9]-[#6;H1X4:10](-[#6;H2X4:11]-[#8:12]-[#6;H1X3:13]=[#6;X3:14]-[#6,#1;A:19])-[#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18]"
//			// "sn1 ether + C2H8NO3P (+124)"			
			new String[]{
					"[H][#8;A]P(=[O;X1])([#8;X2]-[#6;H2X4][C;X4]([H])([H])[#7;A;X4+]([H])([H])[H])[#8]-[#6;X3]([H])=[#6;X3][#6,#1;A]",
					"[H][#8;A:6][P:5](=[O;X1:7])([#8;X2:4]-[#6;H2X4:3][C;X4:2]([H])([H])[#7;A;X3:1]([H])[H])[#8;X2:8][C;X4:9]([H])([H])[C;X4:10]([H])([#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18])[C;X4:11]([H])([H])[#8:12]-[#6;H1X3:13]=[#6;X3:14][#6,#1;A:19]>>[H][#8;X2:8][C;X4:9]([H])([H])[C;X4:10]([H])([#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18])[#6;X4+:11]([H])[H].[H][#8;A:6][P:5](=[O;X1:7])([#8;X2:4]-[#6;H2X4:3][C;X4:2]([H])([H])[#7;A;X4+:1]([H])([H])[H])[#8:12]-[#6;H1X3:13]=[#6;X3:14][#6,#1;A:19]"
			},
			
			//			// "[M+H]-C2H8NO4P (-141)"
			new String[]{
					"[H][#6;X3+]([H])[C;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[C;X4]([H])([H])[#8]-[#6;X3]([H])=[#6;X3][#6,#1;A]",
					"[H][#8;A:6][P:5](=[O;X1:7])([#8;X2:4]-[#6;H2X4:3][C;X4:2]([H])([H])[#7;A;H2X3:1])[#8;X2:8][C;X4:9]([H])([H])[C;X4:10]([H])([#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18])[C;X4:11]([H])([H])[#8:12]-[#6;X3:13]([H])=[#6;X3:14][#6,#1;A:19]>>[H][#8;A:6][P:5](=[O;X1:7])([#8;X2:8][H])[#8;X2:4]-[#6;H2X4:3][C;X4:2]([H])([H])[#7;A;H2X3:1].[H][#6;X3+:9]([H])[C;X4:10]([H])([#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18])[C;X4:11]([H])([H])[#8:12]-[#6;X3:13]([H])=[#6;X3:14][#6,#1;A:19]"
			},
			
			
			//			// "sn1 ether +C2H8NO3P-H3PO4"
			new String[]{
					"[H]-[#6;X3]([H])=[#6;X3](/[H])[#7;A;X4+]([H])([H])[#6;X3]([#6;A])=[#6;X3]([H])[H]",
					"[H][#8;A:6][P:5](=[O;X1:7])([#8;X2:4][C;X4:3]([H])([H])[C;X4:2]([H])([H])[#7;A;X3:1]([H])[H])[#8;X2:8][C;X4:9]([H])([H])[C;X4:10]([H])([#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18])[C;X4:11]([H])([H])[#8:12]-[#6;X3:13]([H])=[#6;X3:14]([H])[#6;A:19]>>[H]-[#6;X3:3]([H])=[#6;X3:2](/[H])[#7;A;X4+:1]([H])([H])[#6;X3:14]([#6;A:19])=[#6;X3:13]([H])[H].[H][#8;A:6][P:5]([#8;X2:4])(=[O;X1:7])[#8;X2:8][C;X4:9]([H])([H])[C;X4:10]([H])([#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18])[C;X4:11]([H])([H])[#8:12]"
			},
			//			// "[M+H]-C2H8NO4P-sn2"
			new String[]{
					"[H][#8][C;X4]([H])([H])[C;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;X3+]([H])[H]",
					"[H][#8;A:6][P:5](=[O;X1:7])([#8;X2:4]-[#6;H2X4:3][C;X4:2]([H])([H])[#7;A;X3:1]([H])[H])[#8;X2:8][C;X4:9]([H])([H])[C;X4:10]([H])([#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18])[C;X4:11]([H])([H])[#8:12]-[#6;X3:13]([H])=[#6;X3:14][#6,#1;A:19]>>[H]-[#6;X3:13]([H])=[#6;X3:14]-[#6,#1;A:19].[H][#8:12][C;X4:11]([H])([H])[C;X4:10]([H])([#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18])[#6;X3+:9]([H])[H].[H][#8;A:6][P:5](=[O;X1:7])([#8;X2:8][H])[#8;X2:4]-[#6;H2X4:3][C;X4:2]([H])([H])[#7;A;X3:1]([H])[H]"
			},
						
//			"[#7;A;H2X3][#6;H2X4]-[#6;H2X4]-[#8;X2]P([#8;A;X2H1,X1-])(=[O;X1])[#8;X2]-[#6;H2X4]-[#6;H1X4](-[#6;H2X4]-[#8:1]-[#6;H1X3:2]=[#6;X3:3])-[#8;X2]-[#6:4]([#6,#1;A:5])=[O;X1:6]>>[#6,#1;A:5][#6:4]=[O;X1:6].[H][#6;X3:2](-[#8:1])=[#6;X3:3]"	
		});
//		
//		fragmentationPatterns.put(ClassName.PHOSPHATIDYLSERINES, new String[]{
//				"[#7;A;H2X3:1][#6;H1X4:2]([#6;A;H2X4:3][#8:4][P:5]([#8;A;X2H1,X1-:6])(=[O:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;R0:15])[#8;R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19])-[#6:20]([#8;A;X2H1,X1-:21])=[O:22]>>[H][#6;R0:13]([#6,#1;A:14])=[O;R0:15].[#8;R0-:12][#6;A;H2X4:11][#6;A;H1X4:10]([#6;A;H2X4:9][#8;X2:8][P:5]([#8;A;X2H1,X1-:6])(=[O:7])[#8:4][#6;A;H2X4:3][#6;H1X4:2]([#7;A;H2X3:1])-[#6:20]([#8;A;X2H1,X1-:21])=[O:22])[#8;R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19]",
//				"[#7;A;H2X3:1][#6;H1X4:2]([#6;A;H2X4:3][#8:4][P:5]([#8;A;X2H1,X1-:6])(=[O:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;R0:15])[#8;R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19])-[#6:20]([#8;A;X2H1,X1-:21])=[O:22]>>[#8;R0-:12]-[#6;R0:13]([#6,#1;A:14])=[O;R0:15].[#6;A+:11][#6;A;H1X4:10]([#6;A;H2X4:9][#8;X2:8][P:5]([#8;A;X2H1,X1-:6])(=[O:7])[#8:4][#6;A;H2X4:3][#6;H1X4:2]([#7;A;H2X3:1])-[#6:20]([#8;A;X2H1,X1-:21])=[O:22])[#8;R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19]",
//				"[#7;A;H2X3:1][#6;H1X4:2]([#6;A;H2X4:3][#8:4][P:5]([#8;A;X2H1,X1-:6])(=[O:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;R0:15])[#8;R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19])-[#6:20]([#8;A;X2H1,X1-:21])=[O:22]>>[H][#6;A:3][#6;H1X4:2]([#7;A;H2X3:1])-[#6:20]([#8;A;X2H1,X1-:21])=[O:22].[#8;A;X2H1,X1-:6][P:5]([#8-:4])(=[O:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;R0:15])[#8;R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19]",
//				"[#7;A;H2X3:1][#6;H1X4:2]([#6;A;H2X4:3][#8:4][P:5]([#8;A;X2H1,X1-:6])(=[O:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;R0:15])[#8;R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19])-[#6:20]([#8;A;X2H1,X1-:21])=[O:22]>>[H][#6;R0:17]([#6,#1;A:18])=[O;R0:19].[#7;A;H2X3:1][#6;H1X4:2]([#6;A;H2X4:3][#8:4][P:5]([#8;A;X2H1,X1-:6])(=[O:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#8;R0-:16])[#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;R0:15])-[#6:20]([#8;A;X2H1,X1-:21])=[O:22]",
//				"[#7;A;H2X3:1][#6;H1X4:2]([#6;A;H2X4:3][#8:4][P:5]([#8;A;X2H1,X1-:6])(=[O:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;R0:15])[#8;R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19])-[#6:20]([#8;A;X2H1,X1-:21])=[O:22]>>[H][#8;R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19].[#7;A;H2X3:1][#6;H1X4:2]([#6;A;H2X4:3][#8:4][P:5]([#8;A;X2H1,X1-:6])(=[O:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4+:10][#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;R0:15])-[#6:20]([#8;A;X2H1,X1-:21])=[O:22]",
//				"[#7;A;H2X3:1][#6;H1X4:2]([#6;A;H2X4:3][#8:4][P:5]([#8;A;X2H1,X1-:6])(=[O:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;R0:15])[#8;R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19])-[#6:20]([#8;A;X2H1,X1-:21])=[O:22]>>[#6;A;H2X4+:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2R0:12]-[#6;R0:13]([#6,#1;A:14])=[O;R0:15])[#8;R0:16]-[#6;R0:17]([#6,#1;A:18])=[O;R0:19].[H][#8;X2:8][P:5]([#8;A;X2H1,X1-:6])(=[O:7])[#8:4][#6;A;H2X4:3][#6;H1X4:2]([#7;A;H2X3:1])-[#6:20]([#8;A;X2H1,X1-:21])=[O:22]"
//		});	
//		
//		//SPHINGOMYELINS NO NEED TO FRAGMENT	
//		
//		fragmentationPatterns.put(ClassName.PHOSPHATIDIC_ACIDS, new String[]{
//				"[#8;A;X2H1,X1-:3][P;X4:2]([#8;A;X2H1,X1-:1])(=[O;X1:4])[#8;X2:5][#6;A;H2X4:6][#6;H1X4R0:7]([#6;A;H2X4:8][#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12])[#8;A;X2:13][#6;R0:14]([#6,#1;A:15])=[O;X1:16]>>[H][#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12].[H][#6;A;X4:8][#6;H1X4R0:7]([#6;A;H2X4:6][#8;X2:5][P;X4:2]([#8;A;X2H1,X1-:1])([#8;A;X2H1,X1-:3])=[O;X1:4])[#8;A;X2:13][#6;R0:14]([#6,#1;A:15])=[O;X1:16]",
//				"[#8;A;X2H1,X1-:3][P;X4:2]([#8;A;X2H1,X1-:1])(=[O;X1:4])[#8;X2:5][#6;A;H2X4:6][#6;H1X4R0:7]([#6;A;H2X4:8][#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12])[#8;A;X2:13][#6;R0:14]([#6,#1;A:15])=[O;X1:16]>>[H][#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12].[#8;A;X2H1,X1-:1][P;X4:2]([#8;A;X2H1,X1-:3])(=[O;X1:4])[#8;X2:5][#6;A;H2X4:6][#6;H0X3R0:7](=[#6;A;X3:8])[#8;A;X2:13][#6;R0:14]([#6,#1;A:15])=[O;X1:16]",
//				"[#8;A;X2H1,X1-:3][P;X4:2]([#8;A;X2H1,X1-:1])(=[O;X1:4])[#8;X2:5][#6;A;H2X4:6][#6;H1X4R0:7]([#6;A;H2X4:8][#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12])[#8;A;X2:13][#6;R0:14]([#6,#1;A:15])=[O;X1:16]>>[H][#8;A;X2:13][#6;R0:14]([#6,#1;A:15])=[O;X1:16].[H][#6;X4R0:7]([#6;A;H2X4:8][#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12])[#6;A;H2X4:6][#8;X2:5][P;X4:2]([#8;A;X2H1,X1-:1])([#8;A;X2H1,X1-:3])=[O;X1:4]",
//				"[#8;A;X2H1,X1-:3][P;X4:2]([#8;A;X2H1,X1-:1])(=[O;X1:4])[#8;X2:5][#6;A;H2X4:6][#6;H1X4R0:7]([#6;A;H2X4:8][#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12])[#8;A;X2:13][#6;R0:14]([#6,#1;A:15])=[O;X1:16]>>[H][#8;A;X2:13][#6;R0:14]([#6,#1;A:15])=[O;X1:16].[#8;A;X2H1,X1-:3][P;X4:2]([#8;A;X2H1,X1-:1])(=[O;X1:4])[#8;X2:5][#6;A;H2X4:6]-[#6;H1X3R0:7]=[#6;A;H1X3:8]-[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12]"
//		});
//		
		// [M+H]+: [M+H]-H2O (-18); [M+H]-sn1; frag. C3H7O5P (155); [M+H]-H2O-C3H7O5P
		// e.g.: lysoPA 3:0; PA(3:0/0:0)
		fragmentationPatterns.put(ClassName._1_LYSOPHOSPHATIDIC_ACIDS, new String[][]{
				
				//  [M+H]-H2O (-18)
				new String[]{
						"[H][#8;A][P;X4]1(=[O;X1])[#8;X2][#6;A;X4]([H])([H])[C;X4R1]([H])([#8;A;X2]1)[#6;A;X4]([H])([H])[#8;A;X2][#6;R0](-[#6;X4])=[O;X1]",
						"[H][#8;A;X2:7][C;X4R0:6]([H])([#6;A;X4:5]([H])([H])[#8;A;X2:4][#6;R0:2](-[#6;X4:1])=[O;X1:3])[#6;A;X4:8]([H])([H])[#8;X2:9][P;X4:10](=[O;X1:13])([#8;A:11][H])[#8;A:12][H]>>[H][#8;A:11][H].[H][#8;A:12][P;X4:10]1(=[O;X1:13])[#8;X2:9][#6;A;X4:8]([H])([H])[C;X4R1:6]([H])([#8;A;X2:7]1)[#6;A;X4:5]([H])([H])[#8;A;X2:4][#6;R0:2](-[#6;X4:1])=[O;X1:3]"
				},
				
				// [M+H]-sn1
				new String[]{
						"[H][#8;A;X2][#6;A;H2X4][#6;H1X4R0]([#8;A;H1X2])[#6;A;H2X4][#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;A][H]",
						"[H][#8;A:12][P;X4:10](=[O;X1:13])([#8;A:11][H])[#8;X2:9][#6;A;H2X4:8][#6;H1X4R0:6]([#8;A;H1X2:7])[#6;A;H2X4:5][#8;A;X2:4][#6;R0:2](-[#6;X4:1])=[O;X1:3]>>[H][#6;R0:2](-[#6;X4:1])=[O;X1:3].[H][#8;A;X2:4][#6;A;H2X4:5][#6;H1X4R0:6]([#8;A;H1X2:7])[#6;A;H2X4:8][#8;X2:9][P;X4:10](=[O;X1:13])([#8;A:11][H])[#8;A:12][H]"
				},
				
				// frag. C3H7O5P (155)
				new String[]{
						"[H][#8;A][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;H2X4]-[#6;H0X3R0]([#8;A;H1X2])=[#6;A;X3](-[H])[H]",
						"[H][#8;A:12][P;X4:10](=[O;X1:13])([#8;A:11][H])[#8;X2:9][#6;A;H2X4:8][C;X4R0:6]([H])([#8;A;H1X2:7])[#6;A;X4:5]([H])([H])[#8;A;X2:4][#6;R0:2](-[#6;X4:1])=[O;X1:3]>>[H][#8;A;X2:4][#6;R0:2](-[#6;X4:1])=[O;X1:3].[H][#8;A:12][P;X4:10](=[O;X1:13])([#8;A:11][H])[#8;X2:9][#6;A;H2X4:8]-[#6;H0X3R0:6]([#8;A;H1X2:7])=[#6;A;X3:5](-[H])[H]"
				},
				
				// [M+H]-H2O-C3H7O5P
				new String[]{
						"[#6;A]=[#6;A;R0]=[O;X1]",
						"[H][#6;A;X4:1][#6;A;X3R0:2](=[O;X1:3])[#8;A;X2:4][#6;A;H2X4:5][#6;H1X4R0:6]([#8;A;H1X2:7])[#6;A;H2X4:8][#8;X2:9][P;X4:10](=[O;X1:13])([#8;A:12][H])[#8;A:11][H]>>[#6;A:1]=[#6;A;X2R0:2]=[O;X1:3].[H][#8;A;X2:4][#6;A;H2X4:5][#6;H1X4R0:6]([#8;A;H1X2:7])[#6;A;H2X4:8][#8;X2:9][P;X4:10](=[O;X1:13])([#8;A:12][H])[#8;A:11][H]"
				},
		});

		// [M+H]+: [M+H]-H2O (-18); [M+H]-sn1; frag. C3H7O5P (155); [M+H]-H2O-C3H7O5P
		// e.g.: lysoPA 3:0; PA(P-16:0/0:0)
		fragmentationPatterns.put(ClassName._1_O_ALKENYL_GLYCEROPHOSPHATES, new String[][]{
				
				//  [M+H]-H2O (-18)
				new String[]{	
						"[H][#8;A][P;X4]1(=[O;X1])[#8;X2][#6;A;H2X4][C;X4R1]([H])([#8;A;X2]1)[#6;A;X4]([H])([H])[#8;A;X2][#6;A;X3R0]([H])=[#6;A;X3]([H])[#6,#1;A]",
						"[H:18][#8;A;X2:10][C;X4R0:9]([H])([#6;A;H2X4:8][#8;X2:7][P;X4:3](=[O;X1:4])([#8;A:2][H:1])[#8;A:5][H:6])[#6;A;X4:11]([H])([H])[#8;A;X2:12][#6;A;X3R0:13]([H:14])=[#6;A;X3:15]([H:16])[#6,#1;A:17]>>[H:18][#8;A:2][H:1].[H:6][#8;A:5][P;X4:3]1(=[O;X1:4])[#8;X2:7][#6;A;H2X4:8][C;X4R1:9]([H])([#8;A;X2:10]1)[#6;A;X4:11]([H])([H])[#8;A;X2:12][#6;A;X3R0:13]([H:14])=[#6;A;X3:15]([H:16])[#6,#1;A:17]"
				},
				
				// [M+H]-sn1
				new String[]{
						"[H][#8;A;X2][C;X4R0]([H])([#6;A;H2X4][#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;A][H])[#6;A;X4]([H])([H])[H]",
						"[H][#8;A;X2:9][C;X4R0:8]([H])([#6;A;H2X4:7][#8;X2:6][P;X4:3](=[O;X1:4])([#8;A:2][H:1])[#8;A:5][H])[#6;A;X4:10]([H])([H])[#8;A;X2:11][#6;R0:12]([H:14])=[#6:13]([H:15])[#6,#1;A:16]>>[H][#8;A;X2:11][#6;R0:12]([H:14])=[#6:13]([H:15])[#6,#1;A:16].[H][#8;A;X2:9][C;X4R0:8]([H])([#6;A;H2X4:7][#8;X2:6][P;X4:3](=[O;X1:4])([#8;A:2][H:1])[#8;A:5][H])[#6;A;X4:10]([H])([H])[H]"
//						"[H][#8;A;X2][C;X4R0]([H])([#6;A;H2X4][#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;A][H])[#6;A;X4]([H])([H])[H]",
//						"[H][#8;A;X2:9][C;X4R0:8]([H])([#6;A;H2X4:7][#8;X2:6][P;X4:3](=[O;X1:4])([#8;A:2][H:1])[#8;A:5][H])[#6;A;X4:10]([H])([H])[#8;A;X2:11][#6;R0:12]([H:14])=[#6:13]([H:15])[#6,#1;A:16]>>[H][#8;A;X2:11][#6;R0:12]([H:14])=[#6:13]([H:15])[#6,#1;A:16].[H][#8;A;X2:9][C;X4R0:8]([H])([#6;A;H2X4:7][#8;X2:6][P;X4:3](=[O;X1:4])([#8;A:2][H:1])[#8;A:5][H])[#6;A;X4:10]([H])([H])[H]"
//						"[H][#8;A;X2]-[#6;X3R0]([#6;A;H2X4][#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;A][H])=[#6;A;X3]-[H]",
//						"[H][#8;A;X2:9][C;X4R0:8]([H])([#6;A;H2X4:7][#8;X2:6][P;X4:3](=[O;X1:4])([#8;A:5][H])[#8;A:2][H:1])[#6;A;X4:10]([H])([H])[#8;A;X2:11]-[#6;R0:12]([H:14])=[#6:13](/[H:15])[#6,#1;A:16]>>[H][#8;A;X2:11]-[#6;R0:12]([H:14])=[#6:13](/[H:15])[#6,#1;A:16].[H][#8;A;X2:9][#6;X3R0:8]([#6;A;H2X4:7][#8;X2:6][P;X4:3](=[O;X1:4])([#8;A:5][H])[#8;A:2][H:1])=[#6;A;X3:10]([H])[H]"
				},
				
				// frag. C3H7O5P (155)
				new String[]{
						"[H][#8;A;X2]-[#6;X3R0]([#6;A;H2X4][#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;A][H])=[#6;A;X3](-[H])[H]",
						"[H:18][#8;A;X2:10][C;X4R0:9]([H])([#6;A;H2X4:8][#8;X2:7][P;X4:3](=[O;X1:4])([#8;A:2][H:1])[#8;A:5][H:6])[#6;A;X4:11]([H])([H])[#8;A;X2:12][#6;A;X3R0:13]([H:14])=[#6;A;X3:15]([H:16])[#6,#1;A:17]>>[H][#8;A;X2:12][#6;A;X3R0:13]([H:14])=[#6;A;X3:15]([H:16])[#6,#1;A:17].[H:18][#8;A;X2:10]-[#6;X3R0:9]([#6;A;H2X4:8][#8;X2:7][P;X4:3](=[O;X1:4])([#8;A:2][H:1])[#8;A:5][H:6])=[#6;A;X3:11](-[H])[H]"
				},
				
				// [M+H]-H2O-C3H7O5P
				new String[]{
						"[H]-[#6;A;X2R0+]=[#6;A;X3](/[H])[#6,#1;A]",
						"[H:18][#8;A;X2:10][C;X4R0:9]([H])([#6;A;H2X4:8][#8;X2:7][P;X4:3](=[O;X1:4])([#8;A:2][H:1])[#8;A:5][H:6])[#6;A;X4:11]([H])([H])[#8;A;X2:12][#6;A;X3R0:13]([H:14])=[#6;A;X3:15]([H:16])[#6,#1;A:17]>>[H][#8;A;X2:12][H].[H:14]-[#6;A;X2R0+:13]=[#6;A;X3:15](/[H:16])[#6,#1;A:17].[H:18][#8;A;X2:10][C;X4R0:9]([H])([#6;A;H2X4:8][#8;X2:7][P;X4:3](=[O;X1:4])([#8;A:5][H:6])[#8;A:2][H:1])[#6;A;X4:11]([H])([H])[H]"
//						"[#6;A]=[#6;A;R0]=[O;X1]",
//						"[H][#6;A;X4:1][#6;A;X3R0:2](=[O;X1:3])[#8;A;X2:4][#6;A;H2X4:5][#6;H1X4R0:6]([#8;A;H1X2:7])[#6;A;H2X4:8][#8;X2:9][P;X4:10](=[O;X1:13])([#8;A:12][H])[#8;A:11][H]>>[#6;A:1]=[#6;A;X2R0:2]=[O;X1:3].[H][#8;A;X2:4][#6;A;H2X4:5][#6;H1X4R0:6]([#8;A;H1X2:7])[#6;A;H2X4:8][#8;X2:9][P;X4:10](=[O;X1:13])([#8;A:12][H])[#8;A:11][H]"
				},
		});	
		
		
		
////		fragmentationPatterns.put(ClassName._2_LYSOPHOSPHATIDIC_ACIDS, new String[]{
////				"[#8;A;H1X2:9][#6;A;H2X4:8][#6;H1X4R0:7]([#6;A;H2X4:6][#8;X2:5][P;X4:2]([#8;A;X2H1,X1-:3])([#8;A;X2H1,X1-:1])=[O;X1:4])[#8;A;X2:10][#6;R0:11]([#6,#1;A:12])=[O;X1:13]>>[H][#8;A;X1:10][H].[H][#6;R0:11]([#6,#1;A:12])=[O;X1:13].[#8;A;H1X2:9][#6;A;H2X4:8][#6;H1X4R0:7][#6;A;H2X4:6][#8;X2:5][P;X4:2]([#8;X1-:3])([#8;X1-:1])=[O;X1:4]"
////		});
//		
		fragmentationPatterns.put(ClassName.PHOSPHATIDYLINOSITOLS, new String[][]{
			
			
			// [M-H]-sn1
			new String[]{
					"[H][#8;X2][#6;A;H2X4][#6;A;X4]([H])([#6;A;H2X4][#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;H1X4]1[#6;A;H1X4]([#8;A;X2][H])[#6;A;H1X4]([#8;A;X2][H])[#6;A;H1X4]([#8;A;X2][H])[#6;A;H1X4]([#8;A;X2][H])[#6;A;H1X4]1[#8;A;X2][H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H:1][#8;A;X2:2][#6;A;H1X4:3]1[#6;A;H1X4:30]([#8;A;X2:31][H:32])[#6;A;H1X4:27]([#8;A;X2:28][H:29])[#6;A;H1X4:10]([#8;X2:11][P;X4:12](=[O;X1:13])([#8;A:14][H])[#8;X2:15][#6;A;H2X4:16][#6;A;X4:17]([H])([#6;A;H2X4:18][#8;X2:19]-[#6:20]([#6,#1;A:21])=[O;X1:22])[#8;X2:23]-[#6:24]([#6,#1;A:25])=[O;X1:26])[#6;A;H1X4:7]([#8;A;X2:8][H:9])[#6;A;H1X4:4]1[#8;A;X2:5][H:6]>>[H][#6:20]([#6,#1;A:21])=[O;X1:22].[H][#8;X2:19][#6;A;H2X4:18][#6;A;X4:17]([H])([#6;A;H2X4:16][#8;X2:15][P;X4:12]([#8;A-:14])(=[O;X1:13])[#8;X2:11][#6;A;H1X4:10]1[#6;A;H1X4:27]([#8;A;X2:28][H:29])[#6;A;H1X4:30]([#8;A;X2:31][H:32])[#6;A;H1X4:3]([#8;A;X2:2][H:1])[#6;A;H1X4:4]([#8;A;X2:5][H:6])[#6;A;H1X4:7]1[#8;A;X2:8][H:9])[#8;X2:23]-[#6:24]([#6,#1;A:25])=[O;X1:26]"
			},
			
			// [M-H]-sn2
			new String[]{
					"[H][#8;A;X2][#6;A;H1X4]1[#6;A;H1X4]([#8;A;X2][H])[#6;A;H1X4]([#8;A;X2][H])[#6;A;H1X4]([#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;H2X4][#6;A;X4]([H])([#8;X2][H])[#6;A;H2X4][#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;H1X4]([#8;A;X2][H])[#6;A;H1X4]1[#8;A;X2][H]",
					"[H:1][#8;A;X2:2][#6;A;H1X4:3]1[#6;A;H1X4:4]([#8;A;X2:5][H:6])[#6;A;H1X4:7]([#8;A;X2:8][H:9])[#6;A;H1X4:10]([#8;X2:11][P;X4:12](=[O;X1:13])([#8;A:14][H])[#8;X2:15][#6;A;H2X4:16][#6;A;X4:17]([H])([#6;A;H2X4:18][#8;X2:19]-[#6:20]([#6,#1;A:21])=[O;X1:22])[#8;X2:23]-[#6:24]([#6,#1;A:25])=[O;X1:26])[#6;A;H1X4:27]([#8;A;X2:28][H:29])[#6;A;H1X4:30]1[#8;A;X2:31][H:32]>>[H][#6:24]([#6,#1;A:25])=[O;X1:26].[H:1][#8;A;X2:2][#6;A;H1X4:3]1[#6;A;H1X4:4]([#8;A;X2:5][H:6])[#6;A;H1X4:7]([#8;A;X2:8][H:9])[#6;A;H1X4:10]([#8;X2:11][P;X4:12]([#8;A-:14])(=[O;X1:13])[#8;X2:15][#6;A;H2X4:16][#6;A;X4:17]([H])([#8;X2:23][H])[#6;A;H2X4:18][#8;X2:19]-[#6:20]([#6,#1;A:21])=[O;X1:22])[#6;A;H1X4:27]([#8;A;X2:28][H:29])[#6;A;H1X4:30]1[#8;A;X2:31][H:32]",
//					"[H][#8;X1][#6;A;H1X4]([#6;A;H2X4][#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;H2X4][#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;H1X4]1[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]",
//					"[H][#8;A:10][P;X4:9](=[O;X1:11])([#8;X2:12][#6;A;H2X4:13][#6;A;H1X4:14]([#6;A;H2X4:15][#8;X2:16]-[#6:17]([#6,#1;A:18])=[O;X1:19])[#8;X2:20]-[#6:21]([#6,#1;A:22])=[O;X1:23])[#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:5]([#8;A;H1X2:6])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]1[#8;A;H1X2:25]>>[H][#6:21]([#6,#1;A:22])=[O;X1:23].[H][#8;X1:20][#6;A;H1X4:14]([#6;A;H2X4:15][#8;X2:16]-[#6:17]([#6,#1;A:18])=[O;X1:19])[#6;A;H2X4:13][#8;X2:12][P;X4:9](=[O;X1:11])([#8;A:10][H])[#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:5]1[#8;A;H1X2:6]",
			},
			
			// [M-H]-sn1-H20
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;H2X4]-[#6;A;X3]([#8;X2]-[#6]([#6,#1;A])=[O;X1])=[#6;A;X3](/[H])[H])[#8;X2][#6;A;H1X4]1[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]",
					"[H][#8;A:10][P;X4:9](=[O;X1:11])([#8;X2:12][#6;A;H2X4:13][#6;A;X4:14]([H])([#8;X2:20]-[#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;X4:15]([H])([H])[#8;X2:16]-[#6:17]([#6,#1;A:18])=[O;X1:19])[#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:5]1[#8;A;H1X2:6]>>[#8;X1-:16]-[#6:17]([#6,#1;A:18])=[O;X1:19].[H]-[#6;A;X3:15]([H])=[#6;A;X3:14](-[#6;A;H2X4:13][#8;X2:12][P;X4:9]([#8;A-:10])(=[O;X1:11])[#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:5]([#8;A;H1X2:6])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]1[#8;A;H1X2:25])[#8;X2:20]-[#6:21]([#6,#1;A:22])=[O;X1:23]"
			},
			
			// [M-H]-sn2-H20
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;H1X4]1[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A]([H])=[#6;A;X3]([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:10][P;X4:9](=[O;X1:11])([#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:5]1[#8;A;H1X2:6])[#8;X2:12][#6;A;X4:13]([H])([H])[#6;A;X4:14]([H])([#8;X2:20]-[#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;X4:15]([H])([H])[#8;X2:16]-[#6:17]([#6,#1;A:18])=[O;X1:19]>>[#8;X1-:20]-[#6:21]([#6,#1;A:22])=[O;X1:23].[H][#6;A;X3:15]([#8;X2:16]-[#6:17]([#6,#1;A:18])=[O;X1:19])=[#6;A:14]([H])[#6;A;X4:13]([H])([H])[#8;X2:12][P;X4:9]([#8;A-:10])(=[O;X1:11])[#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:5]([#8;A;H1X2:6])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]1[#8;A;H1X2:25]"
			},

			// [M-H]-sn1-C6H12O6			
			new String[]{
					"[H][#6;A;X3](=[O;X1])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2][P;X4]([H])([#8;A-])=[O;X1]",
					"[H][#8;A:10][P;X4:9](=[O;X1:11])([#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:5]([#8;A;H1X2:6])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]1[#8;A;H1X2:25])[#8;X2:12][#6;A;X4:13]([H])([H])[#6;A;X4:14]([H])([#8;X2:20]-[#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;X4:15]([H])([H])[#8;X2:16]-[#6:17]([#6,#1;A:18])=[O;X1:19]>>[H][#6:17]([#6,#1;A:18])=[O;X1:19].[H][#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:5]([#8;A;H1X2:6])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]1[#8;A;H1X2:25].[H][#6;A;X3:15](=[O;X1:16])[#6;A;X4:14]([H])([#8;X2:20]-[#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;X4:13]([H])([H])[#8;X2:12][P;X4:9]([H])([#8;A-:10])=[O;X1:11]"
//					"[H][P;X4]([#8;A-])(=[O;X1])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X1-])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
//					"[H][#8;A:10][P;X4:9](=[O;X1:11])([#8;X2:12][#6;A;H2X4:13][#6;A;H1X4:14]([#6;A;H2X4:15][#8;X2:16]-[#6:17]([#6,#1;A:18])=[O;X1:19])[#8;X2:20]-[#6:21]([#6,#1;A:22])=[O;X1:23])[#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:5]([#8;A;H1X2:6])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]1[#8;A;H1X2:25]>>[H][#6:17]([#6,#1;A:18])=[O;X1:19].[H][#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:5]([#8;A;H1X2:6])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]1[#8;A;H1X2:25].[H][P;X4:9]([#8;A-:10])(=[O;X1:11])[#8;X2:12][#6;A;H2X4:13][#6;A;H1X4:14]([#6;A;H2X4:15][#8;X1-:16])[#8;X2:20]-[#6:21]([#6,#1;A:22])=[O;X1:23]"
			},
			
			// [M-H]-sn2-C6H12O6
			new String[]{
					"[H][#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X3](=[O;X1])[#6;A;X4]([H])([H])[#8;X2][P;X4]([H])([#8;A-])=[O;X1]",
					"[H][#8;A:10][P;X4:9](=[O;X1:11])([#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:5]([#8;A;H1X2:6])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]1[#8;A;H1X2:25])[#8;X2:12][#6;A;X4:13]([H])([H])[#6;A;X4:14]([H])([#8;X2:20]-[#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;X4:15]([H])([H])[#8;X2:16]-[#6:17]([#6,#1;A:18])=[O;X1:19]>>[H][#6:21]([#6,#1;A:22])=[O;X1:23].[#8;A;H1X2:1][#6;A;H1X4:2]1[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:7]([#8;X2:8])[#6;A;H1X4:5]([#8;A;H1X2:6])[#6;A;H1X4:3]1[#8;A;H1X2:4].[H][#6;A;X4:15]([H])([#8;X2:16]-[#6:17]([#6,#1;A:18])=[O;X1:19])[#6;A;X3:14](=[O;X1:20])[#6;A;X4:13]([H])([H])[#8;X2:12][P;X4:9]([H])([#8;A-:10])=[O;X1:11]"
			},
			// sn1-FA
			new String[]{
					"[#8;X1-]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:10][P;X4:9](=[O;X1:11])([#8;X2:12][#6;A;H2X4:13][#6;A;X4:14]([H])([#8;X2:20]-[#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;X4:15]([H])([H])[#8;X2:16]-[#6:17]([#6,#1;A:18])=[O;X1:19])[#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:5]1[#8;A;H1X2:6]>>[#8;X1-:16]-[#6:17]([#6,#1;A:18])=[O;X1:19].[H]-[#6;A;X3:15]([H])=[#6;A;X3:14](-[#6;A;H2X4:13][#8;X2:12][P;X4:9]([#8;A-:10])(=[O;X1:11])[#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:5]([#8;A;H1X2:6])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]1[#8;A;H1X2:25])[#8;X2:20]-[#6:21]([#6,#1;A:22])=[O;X1:23]"

			},
			
			// sn2-FA
			new String[]{
					"[#8;X1-]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:10][P;X4:9](=[O;X1:11])([#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:5]1[#8;A;H1X2:6])[#8;X2:12][#6;A;X4:13]([H])([H])[#6;A;X4:14]([H])([#8;X2:20]-[#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;X4:15]([H])([H])[#8;X2:16]-[#6:17]([#6,#1;A:18])=[O;X1:19]>>[#8;X1-:20]-[#6:21]([#6,#1;A:22])=[O;X1:23].[H][#6;A;X3:15]([#8;X2:16]-[#6:17]([#6,#1;A:18])=[O;X1:19])=[#6;A:14]([H])[#6;A;X4:13]([H])([H])[#8;X2:12][P;X4:9]([#8;A-:10])(=[O;X1:11])[#8;X2:8][#6;A;H1X4:7]1[#6;A;H1X4:5]([#8;A;H1X2:6])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]1[#8;A;H1X2:25]"

			}
		});
	
		//		 GPGro(2:0); PG(2:0/2:0)
		fragmentationPatterns.put(ClassName.PHOSPHATIDYLGLYCEROLS, new String[][]{
			
			//	M-H-sn1		
			new String[]{
					"[H][#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#8;A;H1X2])[#6;A;H2X4][#8;A;H1X2]",
					"[H][#8;A:8][P;X4:7](=[O;X1:9])([#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1])[#8;X2:10][#6;A;X4:11]([H])([H])[#6;A;X4:12]([H])([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:13]([H])([H])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]>>[H][#8;X2:14][#6;A;X4:13]([H])([H])[#6;A;X4:12]([H])([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:11]([H])([H])[#8;X2:10][P;X4:7]([#8;A-:8])(=[O;X1:9])[#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1].[H][#6:15]([#6,#1;A:16])=[O;X1:17]"
			},
			
			// M-H-sn1-H2O
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;H2X4][#6;A;H1X4]([#8;A;H1X2])[#6;A;H2X4][#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3]([#8;X2]-[#6]([#6,#1;A])=[O;X1])=[#6;A;X3]([H])[H]",
					"[H][#8;A:8][P;X4:7](=[O;X1:9])([#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1])[#8;X2:10][#6;A;X4:11]([H])([H])[#6;A;X4:12]([H])([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:13]([H])([H])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]>>[H][#6;A;X3:13]([H])=[#6;A;X3:12]([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:11]([H])([H])[#8;X2:10][P;X4:7]([#8;A-:8])(=[O;X1:9])[#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1].[#8;X1-:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]"
			},
			
			// M-H-sn2	
			new String[]{
					"[H][#8;A;X2][#6;A;H2X4][#6;A;X4]([H])([#8;A;X2][H])[#6;A;H2X4][#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;H2X4][#6;A;X4]([H])([#8;X2][H])[#6;A;H2X4][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A;X2:1][#6;A;H2X4:2][#6;A;X4:3]([H])([#8;A;X2:4][H])[#6;A;H2X4:5][#8;X2:6][P;X4:7](=[O;X1:9])([#8;A:8][H])[#8;X2:10][#6;A;H2X4:11][#6;A;X4:12]([H])([#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]>>[H][#6:19]([#6,#1;A:20])=[O;X1:21].[H][#8;A;X2:1][#6;A;H2X4:2][#6;A;X4:3]([H])([#8;A;X2:4][H])[#6;A;H2X4:5][#8;X2:6][P;X4:7]([#8;A-:8])(=[O;X1:9])[#8;X2:10][#6;A;H2X4:11][#6;A;X4:12]([H])([#8;X2:18][H])[#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]"
			},			
			
			// M-H-sn2-H2O
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]([H])([H])[#6;A;X3](-[H])=[#6;A;X3](/[H])[#8;X2]-[#6]([#6,#1;A])=[O;X1])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;A;H1X2])[#6;A;X4]([H])([H])[#8;A;H1X2]",
					"[H][#8;A:8][P;X4:7](=[O;X1:9])([#8;X2:6][#6;A;X4:5]([H])([H])[#6;A;X4:3]([H])([#8;A;H1X2:4])[#6;A;X4:2]([H])([H])[#8;A;H1X2:1])[#8;X2:10][#6;A;X4:11]([H])([H])[#6;A;X4:12]([H])([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:13]([H])([H])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]>>[H][#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21].[H]-[#6;A;X3:13]([#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])=[#6;A;X3:12](-[H])[#6;A;X4:11]([H])([H])[#8;X2:10][P;X4:7]([#8;A-:8])(=[O;X1:9])[#8;X2:6][#6;A;X4:5]([H])([H])[#6;A;X4:3]([H])([#8;A;H1X2:4])[#6;A;X4:2]([H])([H])[#8;A;H1X2:1]"

//					"[H][#6;A;X4]([H])([#8;A;H1X2])[#6;A;X4]([H])([#8;A;H1X2])[#6;A;X4]([H])([H])[#8;X2][P;X4]1(=[O;X1])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;A]1)[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
//					"[H][#8;A:8][P;X4:7](=[O;X1:9])([#8;X2:6][#6;A;X4:5]([H])([H])[#6;A;X4:3]([H])([#8;A;H1X2:4])[#6;A;X4:2]([H])([H])[#8;A;H1X2:1])[#8;X2:10][#6;A;X4:11]([H])([H])[#6;A;X4:12]([H])([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:13]([H])([H])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]>>[H][#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21].[H][#6;A;X4:2]([H])([#8;A;H1X2:1])[#6;A;X4:3]([H])([#8;A;H1X2:4])[#6;A;X4:5]([H])([H])[#8;X2:6][P;X4:7]1(=[O;X1:9])[#8;X2:10][#6;A;X4:11]([H])([H])[#6;A;X4:12]([H])([#8;A:8]1)[#6;A;X4:13]([H])([H])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]"
			},		
			
			// [M-H]-sn1-C3H8O3
			new String[]{
					"[H][#8;A][P;X4]1(=[O;X1])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2]1)[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:8][P;X4:7](=[O;X1:9])([#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1])[#8;X2:10][#6;A;H2X4:11][#6;A;H1X4:12]([#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]>>[H][#6:15]([#6,#1;A:16])=[O;X1:17].[H][#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1].[#8;A-:8][P;X4:7]1(=[O;X1:9])[#8;X2:10][#6;A;H2X4:11][#6;A;H1X4:12]([#6;A;H2X4:13][#8;X2:14]1)[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]"
					
//					"[H][#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2]-[#15;X3+]([#8;A-])=[O;X1])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
//					"[H][#8;A:8][P;X4:7](=[O;X1:9])([#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1])[#8;X2:10][#6;A;H2X4:11][#6;A;H1X4:12]([#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]>>[H][#6:15]([#6,#1;A:16])=[O;X1:17].[H][#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1].[H][#8;X2:14][#6;A;H2X4:13][#6;A;H1X4:12]([#6;A;H2X4:11][#8;X2:10]-[#15;X3+:7]([#8;A-:8])=[O;X1:9])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]"
			},		
			
			// [M-H]-sn2-C3H8O3
			new String[]{
					"[H][#8;A][P;X4]1(=[O;X1])[#8;X2R1][#6;A;X4R1]([H])([H])[#6;A;X4R1]([H])([#6;A;H2X4][#8;X2]-[#6]([#6,#1;A])=[O;X1])[#8;X2R1]1",
					"[H][#8;A:8][P;X4:7](=[O;X1:9])([#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1])[#8;X2:10][#6;A;X4:11]([H])([H])[#6;A;X4:12]([H])([#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]>>[H][#6:19]([#6,#1;A:20])=[O;X1:21].[H][#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1].[H][#6;A;X4R1:11]1([H])[#8;X2R1:10][P;X4:7]([#8;A-:8])(=[O;X1:9])[#8;X2R1:18][#6;A;X4R1:12]1([H])[#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]"

//					"[H][#8;A][P;X4]1(=[O;X1])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#6;A;H2X4][#8;X2]-[#6]([#6,#1;A])=[O;X1])[#8;X2]1",
//					"[H][#8;A:8][P;X4:7](=[O;X1:9])([#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1])[#8;X2:10][#6;A;X4:11]([H])([H])[#6;A;X4:12]([H])([#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]>>[H][#6:19]([#6,#1;A:20])=[O;X1:21].[H][#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1].[H][#6;A;X4:11]1([H])[#8;X2:10][P;X4:7]([#8;A-:8])(=[O;X1:9])[#8;X2:18][#6;A;X4:12]1([H])[#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]"
			},
			
			// sn1-FA
			new String[]{
					"[#8;X1-]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:8][P;X4:7](=[O;X1:9])([#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1])[#8;X2:10][#6;A;X4:11]([H])([H])[#6;A;X4:12]([H])([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:13]([H])([H])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]>>[H][#6;A;X3:13]([H])=[#6;A;X3:12]([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:11]([H])([H])[#8;X2:10][P;X4:7]([#8;A-:8])(=[O;X1:9])[#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1].[#8;X1-:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]"

//					"[H]-[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
//					"[H][#8;A:8][P;X4:7](=[O;X1:9])([#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1])[#8;X2:10][#6;A;X4:11]([H])([H])[#6;A;X4:12]([H])([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:13]([H])([H])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]>>[H][#6;A;X3:13]([H])=[#6;A;X3:12]([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:11]([H])([H])[#8;X2:10][P;X4:7]([#8;A-:8])(=[O;X1:9])[#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1].[#8;X1-:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]"
			},

			// sn2-FA
			new String[]{
					"[#8;X1-]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:8][P;X4:7](=[O;X1:9])([#8;X2:6][#6;A;X4:5]([H])([H])[#6;A;X4:3]([H])([#8;A;H1X2:4])[#6;A;X4:2]([H])([H])[#8;A;H1X2:1])[#8;X2:10][#6;A;X4:11]([H])([H])[#6;A;X4:12]([H])([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:13]([H])([H])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]>>[#8;X1-:18]-[#6:19]([#6,#1;A:20])=[O;X1:21].[H][#6;A;X3:13]([#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])=[#6;A;X3:12]([H])[#6;A;X4:11]([H])([H])[#8;X2:10][P;X4:7]([#8;A-:8])(=[O;X1:9])[#8;X2:6][#6;A;X4:5]([H])([H])[#6;A;X4:3]([H])([#8;A;H1X2:4])[#6;A;X4:2]([H])([H])[#8;A;H1X2:1]"
					
//					"[H]-[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
//					"[H][#8;A:8][P;X4:7](=[O;X1:9])([#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1])[#8;X2:10][#6;A;X4:11]([H])([H])[#6;A;X4:12]([H])([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:13]([H])([H])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]>>[H][#6;A;X3:13]([H])=[#6;A;X3:12]([#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:11]([H])([H])[#8;X2:10][P;X4:7]([#8;A-:8])(=[O;X1:9])[#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1].[#8;X1-:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]"
			}
						
//				"[#8;A;H1X2:1][#6;A;H2X4:2][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:5][#8;X2:6][P;X4:7]([#8;A;X2H1,X1-:8])(=[O;X1:9])[#8;X2:10][#6;A;H2X4:11][#6;A;H1X4:12]([#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]>>[#6,#1;A:16][#6+:15]=[O;X1:17].[#8;A;H1X2:1][#6;A;H2X4:2][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:5][#8;X2:6][P;X4:7]([#8;A;X2H1,X1-:8])(=[O;X1:9])[#8;X2:10][#6;A;H2X4:11][#6;A;H1X4:12]([#6;A;H2X4:13][#8;X1-:14])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]",
//				"[#8;A;H1X2:1][#6;A;H2X4:2][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:5][#8;X2:6][P;X4:7]([#8;A;X2H1,X1-:8])(=[O;X1:9])[#8;X2:10][#6;A;H2X4:11][#6;A;H1X4:12]([#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]>>[H][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17].[#6;A;H2X4+:13][#6;A;H1X4:12]([#6;A;H2X4:11][#8;X2:10][P;X4:7]([#8;A;X2H1,X1-:8])(=[O;X1:9])[#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]",
//				"[#8;A;H1X2:1][#6;A;H2X4:2][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:5][#8;X2:6][P;X4:7]([#8;A;X2H1,X1-:8])(=[O;X1:9])[#8;X2:10][#6;A;H2X4:11][#6;A;H1X4:12]([#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]>>[H][#6:15]([#6,#1;A:16])=[O;X1:17].[H][#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1].[H][#8;X2:14][#6;A;H2X4:13][#6;A;H1X4:12]([#6;A;H2X4:11][#8;X2:10]-[#15;X3+:7]([#8;A;X2H1,X1-:8])=[O;X1:9])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]",
//				"[#8;A;H1X2:1][#6;A;H2X4:2][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:5][#8;X2:6][P;X4:7]([#8;A;X2H1,X1-:8])(=[O;X1:9])[#8;X2:10][#6;A;H2X4:11][#6;A;H1X4:12]([#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]>>[#6,#1;A:20][#6+:19]=[O;X1:21].[#8;A;H1X2:1][#6;A;H2X4:2][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:5][#8;X2:6][P;X4:7]([#8;A;X2H1,X1-:8])(=[O;X1:9])[#8;X2:10][#6;A;H2X4:11][#6;A;H1X4:12]([#8;X1-:18])[#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]",
//				"[#8;A;H1X2:1][#6;A;H2X4:2][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:5][#8;X2:6][P;X4:7]([#8;A;X2H1,X1-:8])(=[O;X1:9])[#8;X2:10][#6;A;H2X4:11][#6;A;H1X4:12]([#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]>>[H][#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21].[#8;A;H1X2:1][#6;A;H2X4:2][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:5][#8;X2:6][P;X4:7]([#8;A;X2H1,X1-:8])(=[O;X1:9])[#8;X2:10][#6;A;H2X4:11][#6;A;H1X4+:12][#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]",
//				"[#8;A;H1X2:1][#6;A;H2X4:2][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:5][#8;X2:6][P;X4:7]([#8;A;X2H1,X1-:8])(=[O;X1:9])[#8;X2:10][#6;A;H2X4:11][#6;A;H1X4:12]([#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])[#8;X2:18]-[#6:19]([#6,#1;A:20])=[O;X1:21]>>[H][#6:19]([#6,#1;A:20])=[O;X1:21].[H][#8;X2:6][#6;A;H2X4:5][#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H2X4:2][#8;A;H1X2:1].[H][#8;X2:18][#6;A;H1X4:12]([#6;A;H2X4:13][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17])[#6;A;H2X4:11][#8;X2:10]-[#15;X4+:7]([#8;A;X2H1,X1-:8])=[O;X1:9]"
		});
//		
//		fragmentationPatterns.put(ClassName.CARDIOLIPINS, new String[][]{
//				new String[]{
//						"[H][#8]P(=[O;X1])([#8;X2][#6;A;H2X4][#6;A;H1X4]([#8;A;H1X2])[#6;A;H2X4][#8;X2]P(=[O;X1])([#8][H])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2]-[#6;X3]([#6;A;X4])=[O;X1])[#8;X2]-[#6;X3]([#6;A;X4])=O)[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X1-])[#8;X2]-[#6;X3]([#6;A;X4])=[O;X1]",
//						"[H][#8:23][P:22](=[O;X1:24])([#8;X2:21][#6;A;H2X4:20][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:3][#8;X2:4][P:5](=[O;X1:7])([#8:6][H])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2:12]-[#6;X3:13]([#6;A;X4:14])=[O:15])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19])[#8;X2:25][#6;A;H2X4:26][#6;A;H1X4:27]([#6;A;H2X4:28][#8;X2:29]-[#6;X3:30]([#6;A;X4:31])=[O;X1:32])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36]>>[H][#6;X3:13]([#6;A;X4:14])=[O:15].[H][#8:6][P:5](=[O;X1:7])([#8;X2:4][#6;A;H2X4:3][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:20][#8;X2:21][P:22](=[O;X1:24])([#8:23][H])[#8;X2:25][#6;A;H2X4:26][#6;A;H1X4:27]([#6;A;H2X4:28][#8;X2:29]-[#6;X3:30]([#6;A;X4:31])=[O;X1:32])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X1-:12])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19]"
//				},
////				new String[]{
////						"",
////						""
////				},
////				new String[]{
////						"",
////						""
////				},
////				new String[]{
////						"",
////						""
////				}
////				"[#6;A;X4:31][#6;X3:30](=[O;X1:32])-[#8;X2:29][#6;A;H2X4:28][#6;A;H1X4:27]([#6;A;H2X4:26][#8;X2:25][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:21][#6;A;H2X4:20][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:3][#8;X2:4][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2:12]-[#6;X3:13]([#6;A;X4:14])=[O:15])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36]>>[H][#6;X3:13]([#6;A;X4:14])=[O:15].[#6;A;X4:31][#6;X3:30](=[O;X1:32])-[#8;X2:29][#6;A;H2X4:28][#6;A;H1X4:27]([#6;A;H2X4:26][#8;X2:25][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:21][#6;A;H2X4:20][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:3][#8;X2:4][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X1-:12])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36]",
////				"[#6;A;X4:31][#6;X3:30](=[O;X1:32])-[#8;X2:29][#6;A;H2X4:28][#6;A;H1X4:27]([#6;A;H2X4:26][#8;X2:25][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:21][#6;A;H2X4:20][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:3][#8;X2:4][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2:12]-[#6;X3:13]([#6;A;X4:14])=[O:15])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36]>>[H][#6;X3:30]([#6;A;X4:31])=[O;X1:32].[#6;A;X4:14][#6;X3:13](=[O:15])-[#8;X2:12][#6;A;H2X4:11][#6;A;H1X4:10]([#6;A;H2X4:9][#8;X2:8][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:4][#6;A;H2X4:3][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:20][#8;X2:21][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:25][#6;A;H2X4:26][#6;A;H1X4:27]([#6;A;H2X4:28][#8;X1-:29])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19]",
////				"[#6;A;X4:31][#6;X3:30](=[O;X1:32])-[#8;X2:29][#6;A;H2X4:28][#6;A;H1X4:27]([#6;A;H2X4:26][#8;X2:25][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:21][#6;A;H2X4:20][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:3][#8;X2:4][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2:12]-[#6;X3:13]([#6;A;X4:14])=[O:15])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36]>>[H][#6;X3:17]([#6;A;X4:18])=[O;X1:19].[H][#6;X3:13]([#6;A;X4:14])=[O:15].[#6;A;X4:31][#6;X3:30](=[O;X1:32])-[#8;X2:29][#6;A;H2X4:28][#6;A;H1X4:27]([#6;A;H2X4:26][#8;X2:25][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:21][#6;A;H2X4:20][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:3][#8;X2:4][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#8;X1-:16])[#6;A;H2X4:11][#8;X1-:12])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36]",
////				"[#6;A;X4:31][#6;X3:30](=[O;X1:32])-[#8;X2:29][#6;A;H2X4:28][#6;A;H1X4:27]([#6;A;H2X4:26][#8;X2:25][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:21][#6;A;H2X4:20][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:3][#8;X2:4][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2:12]-[#6;X3:13]([#6;A;X4:14])=[O:15])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36]>>[H][#6;X3:30]([#6;A;X4:31])=[O;X1:32].[H][#6;X3:34]([#6;A;X4:35])=[O:36].[#6;A;X4:14][#6;X3:13](=[O:15])-[#8;X2:12][#6;A;H2X4:11][#6;A;H1X4:10]([#6;A;H2X4:9][#8;X2:8][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:4][#6;A;H2X4:3][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:20][#8;X2:21][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:25][#6;A;H2X4:26][#6;A;H1X4:27]([#8;X1-:33])[#6;A;H2X4:28][#8;X1-:29])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19]",
////				"[#6;A;X4:31][#6;X3:30](=[O;X1:32])-[#8;X2:29][#6;A;H2X4:28][#6;A;H1X4:27]([#6;A;H2X4:26][#8;X2:25][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:21][#6;A;H2X4:20][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:3][#8;X2:4][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2:12]-[#6;X3:13]([#6;A;X4:14])=[O:15])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36]>>[H][#6;X3:34]([#6;A;X4:35])=[O:36].[#6;A;X4:31][#6;X3:30](=[O;X1:32])-[#8;X2:29][#6;A;H2X4:28][#6;A;H1X4:27]1[#6;A;H2X4:26][#8;X2:25][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:33]1.[H][#8;X2:21][#6;A;H2X4:20][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:3][#8;X2:4][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2:12]-[#6;X3:13]([#6;A;X4:14])=[O:15])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19]",
////				"[#6;A;X4:31][#6;X3:30](=[O;X1:32])-[#8;X2:29][#6;A;H2X4:28][#6;A;H1X4:27]([#6;A;H2X4:26][#8;X2:25][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:21][#6;A;H2X4:20][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:3][#8;X2:4][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2:12]-[#6;X3:13]([#6;A;X4:14])=[O:15])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36]>>[H][#6;X3:30]([#6;A;X4:31])=[O;X1:32].[#6;A;X4:35][#6;X3:34](=[O:36])-[#8;X2:33][#6;A;H1X4:27]1[#6;A;H2X4:26][#8;X2:25][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:29][#6;A;H2X4:28]1.[H][#8;X2:21][#6;A;H2X4:20][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:3][#8;X2:4][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2:12]-[#6;X3:13]([#6;A;X4:14])=[O:15])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19]",
////				"[#6;A;X4:31][#6;X3:30](=[O;X1:32])-[#8;X2:29][#6;A;H2X4:28][#6;A;H1X4:27]([#6;A;H2X4:26][#8;X2:25][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:21][#6;A;H2X4:20][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:3][#8;X2:4][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2:12]-[#6;X3:13]([#6;A;X4:14])=[O:15])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36]>>[H][#6;X3:17]([#6;A;X4:18])=[O;X1:19].[#6;A;X4:14][#6;X3:13](=[O:15])-[#8;X2:12][#6;A;H2X4:11][#6;A;H1X4:10]1[#6;A;H2X4:9][#8;X2:8][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:16]1.[H][#8;X2:4][#6;A;H2X4:3][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:20][#8;X2:21][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:25][#6;A;H2X4:26][#6;A;H1X4:27]([#6;A;H2X4:28][#8;X2:29]-[#6;X3:30]([#6;A;X4:31])=[O;X1:32])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36]",
////				"[#6;A;X4:31][#6;X3:30](=[O;X1:32])-[#8;X2:29][#6;A;H2X4:28][#6;A;H1X4:27]([#6;A;H2X4:26][#8;X2:25][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:21][#6;A;H2X4:20][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:3][#8;X2:4][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X4:10]([#6;A;H2X4:11][#8;X2:12]-[#6;X3:13]([#6;A;X4:14])=[O:15])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36]>>[H][#6;X3:13]([#6;A;X4:14])=[O:15].[#6;A;X4:18][#6;X3:17](=[O;X1:19])-[#8;X2:16][#6;A;H1X4:10]1[#6;A;H2X4:11][#8;X2:12][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9]1.[H][#8;X2:4][#6;A;H2X4:3][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:20][#8;X2:21][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:25][#6;A;H2X4:26][#6;A;H1X4:27]([#6;A;H2X4:28][#8;X2:29]-[#6;X3:30]([#6;A;X4:31])=[O;X1:32])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36]",
////				
////				"[#6;A;X4:14][#6;X3:13](=[O:15])-[#8;X2:12][#6;A;H2X4:11][#6;A;H1X4:10]([#6;A;H2X4:9][#8;X2:8][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:4][#6;A;H2X4:3][#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H2X4:20][#8;X2:21][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:25][#6;A;H2X4:26][#6;A;H1X4:27]([#6;A;H2X4:28][#8;X2:29]-[#6;X3:30]([#6;A;X4:31])=[O;X1:32])[#8;X2:33]-[#6;X3:34]([#6;A;X4:35])=[O:36])[#8;X2:16]-[#6;X3:17]([#6;A;X4:18])=[O;X1:19]>>[#6;A;X4:14][#6;X3:13](-[#8;X1-:12])=[O:15].[#6;A;X4:18][#6;X3:17](-[#8;X1-:16])=[O;X1:19].[#6;A;X4:31][#6;X3:30](-[#8;X1-:29])=[O;X1:32].[#6;A;X4:35][#6;X3:34](-[#8;X1-:33])=[O:36].[#8;A;H1X2:1][#6;A;H1X4:2]([#6;A;H2X4:3][#8;X2:4][P:5]([#8;X2H1,X1-:6])(=[O;X1:7])[#8;X2:8][#6;A;H2X4:9][#6;A;H1X3:10]=[#6;A;H2X3:11])[#6;A;H2X4:20][#8;X2:21][P:22]([#8;X2H1,X1-:23])(=[O;X1:24])[#8;X2:25][#6;A;H2X4:26][#6;A;H1X3:27]=[#6;A;H2X3:28]"
////	
////				
//////				"[#8;A;H1X2][#6;A;H1X4]([#6;A;H2X4][#8]P([#8;X2H1,X1-])(=O)[#8][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8:1]-[#6:2]([#6,#1;A:3])=[O:4])[#8:5]-[#6:6]([#6,#1;A:7])=[O:8])[#6;A;H2X4][#8]P([#8;X2H1,X1-])(=O)[#8][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8:9]-[#6:10]([#6,#1;A:11])=[O:12])[#8:13]-[#6:14]([#6,#1;A:15])=[O:16]>>[#8:1]-[#6:2]([#6,#1;A:3])=[O:4].[#8:5]-[#6:6]([#6,#1;A:7])=[O:8].[#8:9]-[#6:10]([#6,#1;A:11])=[O:12].[#8:13]-[#6:14]([#6,#1;A:15])=[O:16]"
//////				"[#8;A;H1X2][#6;A;H2X4][#6;A;H1X4]([#8;A;H1X2])[#6;A;H2X4][#8;X2][P;X4]([#8;A;X2H1,X1-])(=[O;X1])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2]-[#6:1]([#6,#1;A:2])=[O;X1:3])[#8;X2]-[#6:4]([#6,#1;A:5])=[O;X1:6]>>[#6,#1;A:2][#6:1]=[O;X1:3].[#6,#1;A:5][#6:4]=[O;X1:6]"
////
//		});
		
		fragmentationPatterns.put(ClassName.CERAMIDE_1_PHOSPHATES, new String[][]{
			
			// [M+H]+
			
			// M+H]+ (-H20)
			new String[]{
					"[H][#8;A]P(=O)([#8;A][H])[#8][#6;A;X4]([H])([H])[#6;A;X3]([#7;A;X3]([H])[#6]([#6,#1;A])=[O;X1])=[#6;A;X3]([H])[#6;A;H1X3,H2X4]-,=[#6;A;H1X3,H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;X4]([H])[H]",
					"[H:1][#8;A;X2:2][#6;A;X4:17]([H:16])([#6;A;H1X3,H2X4:15]-,=[#6;A;H1X3,H2X4:14][#6;A;H2X4:13][#6;A;H2X4:12][#6;A;H2X4:11][#6;A;H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;X4:5]([H:3])[H:4])[#6;A;X4:23]([H])([#7;A;X3:22]([H:21])[#6:20]([#6,#1;A:19])=[O;X1:18])[#6;A;X4:26]([H:24])([H:25])[#8:27][P:28](=[O:29])([#8;A:30][H])[#8;A:31][H]>>[H:1][#8;A;X2:2][H].[H][#8;A:30][P:28](=[O:29])([#8;A:31][H])[#8:27][#6;A;X4:26]([H:24])([H:25])[#6;A;X3:23]([#7;A;X3:22]([H:21])[#6:20]([#6,#1;A:19])=[O;X1:18])=[#6;A;X3:17]([H:16])[#6;A;H1X3,H2X4:15]-,=[#6;A;H1X3,H2X4:14][#6;A;H2X4:13][#6;A;H2X4:12][#6;A;H2X4:11][#6;A;H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;X4:5]([H:3])[H:4]"
			},
//			// [M+H]+ (-HPO3) (-79.96633)
			new String[]{
					"[H][#8][#6;A;X4]([H])([H])[#6;A;X4]([H])([#7;A;X3]([H])[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([#6;A;H1X3,H2X4]-,=[#6;A;H1X3,H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;X4]([H])[H])[#8;A;X2][H]",
					"[H:1][#8;A;X2:2][#6;A;X4:17]([H:16])([#6;A;H1X3,H2X4:15]-,=[#6;A;H1X3,H2X4:14][#6;A;H2X4:13][#6;A;H2X4:12][#6;A;H2X4:11][#6;A;H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;X4:5]([H:4])[H:3])[#6;A;X4:23]([H])([#7;A;X3:22]([H:21])[#6:20]([#6,#1;A:19])=[O;X1:18])[#6;A;X4:26]([H:25])([H:24])[#8:27][P:28](=[O:29])([#8;A:31][H])[#8;A:30][H]>>[H][#8;A:31][P:28]([H])(=[O:29])[#8;A:30][H].[H][#8:27][#6;A;X4:26]([H:25])([H:24])[#6;A;X4:23]([H])([#7;A;X3:22]([H:21])[#6:20]([#6,#1;A:19])=[O;X1:18])[#6;A;X4:17]([H:16])([#6;A;H1X3,H2X4:15]-,=[#6;A;H1X3,H2X4:14][#6;A;H2X4:13][#6;A;H2X4:12][#6;A;H2X4:11][#6;A;H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;X4:5]([H:4])[H:3])[#8;A;X2:2][H:1]"
			},
			// [M+H]+ (-H3PO4) (-97.9769)
			new String[]{
					"[H][#8;A;X2][#6;A;X4]([H])([#6;A;H1X3,H2X4]-,=[#6;A;H1X3,H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;X4]([H])[H])[#6;A;X4]([H])([#6;A;X3+]([H])[H])[#7;A;X3]([H])[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A;X2:1][#6;A;X4:2]([H])([#6;A;H1X3,H2X4:3]-,=[#6;A;H1X3,H2X4:4][#6;A;H2X4:5][#6;A;H2X4:6][#6;A;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H2X4:10][#6;A;H2X4:11][#6;A;H2X4:12][#6;A;X4:13]([H:15])[H:14])[#6;A;X4:16]([H:17])([#7;A;X3:18]([H])[#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:22]([H])([H])[#8:23][P:24](=[O:25])([#8;A:27][H])[#8;A:26][H]>>[H][#8:23][P:24](=[O:25])([#8;A:27][H])[#8;A:26][H].[H][#8;A;X2:1][#6;A;X4:2]([H])([#6;A;H1X3,H2X4:3]-,=[#6;A;H1X3,H2X4:4][#6;A;H2X4:5][#6;A;H2X4:6][#6;A;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H2X4:10][#6;A;H2X4:11][#6;A;H2X4:12][#6;A;X4:13]([H:15])[H:14])[#6;A;X4:16]([H:17])([#6;A;X3+:22]([H])[H])[#7;A;X3:18]([H])[#6:19]([#6,#1;A:20])=[O;X1:21]"
			},
			// [M+H]+ (-H3PO4-H20)
			new String[]{
					"[H][#6;A;X4]([H])[#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H1X3,H2X4]-,=[#6;A;H1X3,H2X4][#6;A;X3]([H])=[#6;A;X3]([#6;A;X3+]([H])[H])[#7;A;X3]([H])[#6]([#6,#1;A])=[O;X1]",
					"[H:1][#8;A;X2:2][#6;A;X4:3]([H:4])([#6;A;H1X3,H2X4:5]-,=[#6;A;H1X3,H2X4:6][#6;A;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H2X4:10][#6;A;H2X4:11][#6;A;H2X4:12][#6;A;H2X4:13][#6;A;H2X4:14][#6;A;X4:15]([H:16])[H:17])[#6;A;X4:18]([H])([#7;A;X3:19]([H:20])[#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;X4:24]([H])([H])[#8:25][P:26](=[O:27])([#8;A:28][H])[#8;A:29][H]>>[H:1][#8;A;X2:2][H].[H][#8;A:28][P:26](=[O:27])([#8;A:29][H])[#8:25][H].[H:16][#6;A;X4:15]([H:17])[#6;A;H2X4:14][#6;A;H2X4:13][#6;A;H2X4:12][#6;A;H2X4:11][#6;A;H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H1X3,H2X4:6]-,=[#6;A;H1X3,H2X4:5][#6;A;X3:3]([H:4])=[#6;A;X3:18]([#6;A;X3+:24]([H])[H])[#7;A;X3:19]([H:20])[#6:21]([#6,#1;A:22])=[O;X1:23]"
			},
			// sn2 N
			new String[]{
//					"",
//					"[H:17][#6;A;X4:15][#6;A;H2X4:14][#6;A;H2X4:13][#6;A;H2X4:12][#6;A;H2X4:11][#6;A;H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H1X3,H2X4:6]-,=[#6;A;H1X3,H2X4:5][#6;A;X4:3]([H:4])([#8;A;X2:2][H:1])[#6;A;X4:18]([H])([#7;A;X3:19]([H:20])[#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;X4:24]([H])([H])[#8:25][P:26](=[O:27])([#8;A:29][H])[#8;A:28][H]>>"
					"[H][#7;A;X3]([H])[#6]([#6,#1;A])=[O;X1]",
					"[H:1][#8;A;X2:2][#6;A;X4:3]([H:4])([#6;A;H1X3,H2X4:5]-,=[#6;A;H1X3,H2X4:6][#6;A;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H2X4:10][#6;A;H2X4:11][#6;A;H2X4:12][#6;A;H2X4:13][#6;A;H2X4:14][#6;A;X4:15]([H:16])[H:17])[#6;A;X4:18]([H])([#7;A;X3:19]([H:20])[#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;X4:24]([H])([H])[#8:25][P:26](=[O:27])([#8;A:28][H])[#8;A:29][H]>>[H:20][#7;A;X3:19]([H])[#6:21]([#6,#1;A:22])=[O;X1:23].[H:1][#8;A;X2:2][#6;A;X4:3]([H:4])([#6;A;H1X3,H2X4:5]-,=[#6;A;H1X3,H2X4:6][#6;A;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H2X4:10][#6;A;H2X4:11][#6;A;H2X4:12][#6;A;H2X4:13][#6;A;H2X4:14][#6;A;X4:15]([H:16])[H:17])[#6;A;X4:18]([H])([H])[#6;A;X4:24]([H])([H])[#8:25][P:26](=[O:27])([#8;A:28][H])[#8;A:29][H]"
			}
		});
//				
////		fragmentationPatterns.put(ClassName.N_ACYL_SPHINGOSINES, new String[]{
////				
////		});
//		// E.g.: Name: ST 16:0; [M-H]-; Sulfatide(d14:0/2:0)
		fragmentationPatterns.put(ClassName.SULFATIDES, new String[][]{
			
			// [M-H]-H2O (-18)
			// Fong-Fu Hsu and John Turk. 2004. Journal of the American Society for Mass Spectrometry, Volume 15, Issue 4, April 2004, Pages 536â€“546
			new String[]{
					"[H][#8;A;X2][#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;H1X4]([#8][#6;A;X4]([H])([H])[#6;A;X3](-[#7;A;H1X3][#6]([#6,#1;A])=[O;X1])=[#6;A;X3](/[H])[#6;A;H1X3,H2X4]-,=[#6;A;H1X3,H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;X4]([H])[H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([H])([#8;X2][S;X4]([#8;A-])(=[O;X1])=[O;X1])[#6;A;H1X4]1[#8;A;H1X2]",
					"[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;H1X4:17]([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;H1X3:32][#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:29])(=[O;X1:28])[#8;A:27][H])[#6;A;H1X4:22]1[#8;A;H1X2:23]>>[H][#8;A;X2:13][H].[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;H1X4:17]([#8:16][#6;A;X4:15]([H])([H])[#6;A;X3:14](-[#7;A;H1X3:32][#6:33]([#6,#1;A:34])=[O;X1:35])=[#6;A;X3:12](/[H])[#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26]([#8;A-:27])(=[O;X1:29])=[O;X1:28])[#6;A;H1X4:22]1[#8;A;H1X2:23]"
			},
			
			// [M-H]-sn2
			// Fong-Fu Hsu and John Turk. 2004. Journal of the American Society for Mass Spectrometry, Volume 15, Issue 4, April 2004, Pages 536â€“546
			new String[]{
					"[H][#8;A;X2][#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;H1X4]([#8][#6;A;X4]([H])([H])[#6;A;X4]([H])([#7;A;X3]([H])[H])[#6;A;X4]([H])([#6;A;H1X3,H2X4]-,=[#6;A;H1X3,H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;X4]([H])[H])[#8;A;X2][H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([H])([#8;X2][S;X4](=[O;X1])(=[O;X1])[#8;A][H])[#6;A;H1X4]1[#8;A;H1X2]",
					"[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;H1X4:17]([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;X3:32]([H])[#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:29])(=[O;X1:28])[#8;A:27][H])[#6;A;H1X4:22]1[#8;A;H1X2:23]>>[H][#6:33]([#6,#1;A:34])=[O;X1:35].[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;H1X4:17]([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;X3:32]([H])[H])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:29])(=[O;X1:28])[#8;A:27][H])[#6;A;H1X4:22]1[#8;A;H1X2:23]"

//					"[H][#8;A;X2][#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;H1X4]([#8][#6;A;X4]([H])([H])[#6;A;X4]2([H])[#7;A;X3]([H])[#6;A;X4]2([#6;A;H1X3,H2X4]-,=[#6;A;H1X3,H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;X4]([H])[H])[#8;A;X2][H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([H])([#8;X2][S;X4](=[O;X1])(=[O;X1])[#8;A][H])[#6;A;H1X4]1[#8;A;H1X2]",
//					"[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;H1X4:17]([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;X3:32]([H])[#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:29])(=[O;X1:28])[#8;A:27][H])[#6;A;H1X4:22]1[#8;A;H1X2:23]>>[H][#6:33]([#6,#1;A:34])=[O;X1:35].[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;H1X4:17]([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]2([H])[#7;A;X3:32]([H])[#6;A;X4:12]2([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:29])(=[O;X1:28])[#8;A:27][H])[#6;A;H1X4:22]1[#8;A;H1X2:23]"
					
//					"[H][#8;A;X2][#6;A;H2X4][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#8][#6;A;X4]([H])([H])[#6;A;X4]([H])([#7;A;X3]([H])[H])[#6;A;X4]([H])([#6;A;H1X3,H2X4]-,=[#6;A;H1X3,H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;X4]([H])[H])[#8;A;X2][H])[#6;A;X4]([H])([#8;A;X2][H])[#6;A;X4]([H])([#8;X2][S;X4](=[O;X1])(=[O;X1])[#8;A][H])[#6;A;X4]1([H])[#8;A;H1X2]",
//					"[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;X4:19]1([H])[#8:18][#6;A;X4:17]([H])([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;X3:32]([H])[#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;X4:30]([H])([#8;A;X2:31][H])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:28])(=[O;X1:29])[#8;A:27][H])[#6;A;X4:22]1([H])[#8;A;H1X2:23]>>[H][#6:33]([#6,#1;A:34])=[O;X1:35].[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;X4:19]1([H])[#8:18][#6;A;X4:17]([H])([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;X3:32]([H])[H])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;X4:30]([H])([#8;A;X2:31][H])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:28])(=[O;X1:29])[#8;A:27][H])[#6;A;X4:22]1([H])[#8;A;H1X2:23]"
			},
			
			// [M-H]-sn2-H20
			new String[]{
//					"[H][#8;A;X2][#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;H1X4]([#8][#6;A;X4]([H])([H])[#6;A;X4]2([H])[#7;A;X3]([H])[#6;A;X4]2([H])[#6;A;H1X3,H2X4]-,=[#6;A;H1X3,H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;X4]([H])[H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([H])([#8;X2][S;X4]([#8;A-])(=[O;X1])=[O;X1])[#6;A;H1X4]1[#8;A;H1X2]",
//					"[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;H1X4:17]([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;X3:32]([H])[#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:28])(=[O;X1:29])[#8;A:27][H])[#6;A;H1X4:22]1[#8;A;H1X2:23]>>[H][#8;A;X2:13][H].[H][#6:33]([#6,#1;A:34])=[O;X1:35].[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;H1X4:17]([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]2([H])[#7;A;X3:32]([H])[#6;A;X4:12]2([H])[#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26]([#8;A-:27])(=[O;X1:28])=[O;X1:29])[#6;A;H1X4:22]1[#8;A;H1X2:23]"

					"[H][#8;A;X2][#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;H1X4]([#8][#6;A;X4]([H])([H])[#6;A;X3]([#7;A;X3]([H])[H])=[#6;A;X3]([H])[#6;A;H1X3,H2X4]-,=[#6;A;H1X3,H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;X4]([H])[H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([H])([#8;X2][S;X4]([#8;A-])(=[O;X1])=[O;X1])[#6;A;H1X4]1[#8;A;H1X2]",
					"[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;H1X4:17]([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;X3:32]([H])[#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:28])(=[O;X1:29])[#8;A:27][H])[#6;A;H1X4:22]1[#8;A;H1X2:23]>>[H][#8;A;X2:13][H].[H][#6:33]([#6,#1;A:34])=[O;X1:35].[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;H1X4:17]([#8:16][#6;A;X4:15]([H])([H])[#6;A;X3:14]([#7;A;X3:32]([H])[H])=[#6;A;X3:12]([H])[#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26]([#8;A-:27])(=[O;X1:28])=[O;X1:29])[#6;A;H1X4:22]1[#8;A;H1X2:23]"
					
//					"[H][#8;A;X2][#6;A;H2X4][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#8][#6;A;X4]([H])([H])[#6;A;X4]([H])([#7;A;X3]([H])[H])[#6;A;X4]([H])([H])[#6;A;H1X3,H2X4]-,=[#6;A;H1X3,H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;X4]([H])[H])[#6;A;X4]([H])([#8;A;X2][H])[#6;A;X4]([H])([#8;X2][S;X4](=[O;X1])(=[O;X1])[#8;A][H])[#6;A;X4]1([H])[#8;A;H1X2]",
//					"[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;X4:19]1([H])[#8:18][#6;A;X4:17]([H])([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;X3:32]([H])[#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;X4:30]([H])([#8;A;X2:31][H])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:29])(=[O;X1:28])[#8;A:27][H])[#6;A;X4:22]1([H])[#8;A;H1X2:23]>>[H][#8;A;X2:13][H].[H][#6:33]([#6,#1;A:34])=[O;X1:35].[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;X4:19]1([H])[#8:18][#6;A;X4:17]([H])([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;X3:32]([H])[H])[#6;A;X4:12]([H])([H])[#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#6;A;X4:30]([H])([#8;A;X2:31][H])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:29])(=[O;X1:28])[#8;A:27][H])[#6;A;X4:22]1([H])[#8;A;H1X2:23]"
//					"[H][#7;A;X3][#6;A;X4]([H])([#6;A;X4]([H])([H])[#6;A;H1X3,H2X4]-,=[#6;A;H1X3,H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;X4]([H])[H])[#6;A;X4]([H])([H])[#8][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#6;A;H2X4][#8;A;X2][H])[#6;A;X4]([H])([#8;A;H1X2])[#6;A;X4]([H])([#8;X2][S;X4](=[O;X1])(=[O;X1])[#8;A][H])[#6;A;X4]1([H])[#8;A;X2][H]",
//					"[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;X4:19]1([H])[#8:18][#6;A;X4:17]([H])([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;X3:32]([H])[#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;X4:30]([H])([#8;A;X2:31][H])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:28])(=[O;X1:29])[#8;A:27][H])[#6;A;X4:22]1([H])[#8;A;H1X2:23]>>[H][#8;A;X2:13][H].[H][#6:33]([#6,#1;A:34])=[O;X1:35].[H][#7;A;X3:32][#6;A;X4:14]([H])([#6;A;X4:12]([H])([H])[#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#6;A;X4:15]([H])([H])[#8:16][#6;A;X4:17]1([H])[#8:18][#6;A;X4:19]([H])([#6;A;H2X4:20][#8;A;X2:21][H])[#6;A;X4:22]([H])([#8;A;H1X2:23])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:28])(=[O;X1:29])[#8;A:27][H])[#6;A;X4:30]1([H])[#8;A;X2:31][H]"
//					"[H][#7;A;X3][#6;A;X4]([H])([#6;A;X4]([H])([H])[#6;A;H1X3,H2X4]-,=[#6;A;H1X3,H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;X4]([H])[H])[#6;A;X4]([H])([H])[#8][#6;A;H1X4]1[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;X2][H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([H])([#8;X2][S;X4](=[O;X1])(=[O;X1])[#8;A][H])[#6;A;H1X4]1[#8;A;H1X2]",
//					"[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;H1X4:17]([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;X3:32]([H])[#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:28])(=[O;X1:29])[#8;A:27][H])[#6;A;H1X4:22]1[#8;A;H1X2:23]>>[H][#8;A;X2:13][H].[H][#6:33]([#6,#1;A:34])=[O;X1:35].[H][#7;A;X3:32][#6;A;X4:14]([H])([#6;A;X4:12]([H])([H])[#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#6;A;X4:15]([H])([H])[#8:16][#6;A;H1X4:17]1[#8:18][#6;A;H1X4:19]([#6;A;H2X4:20][#8;A;X2:21][H])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:28])(=[O;X1:29])[#8;A:27][H])[#6;A;H1X4:30]1[#8;A;H1X2:31]"
			},
			
			// ion C6H9O8S- (241.00181)
			new String[]{
					"[H][#8;A;X2][#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;X3]([H])=[#6;A;X3]([#8;A;X2][H])[#6;A;X4]([H])([#8;X2][S;X4]([#8;A-])(=[O;X1])=[O;X1])[#6;A;H1X4]1[#8;A;H1X2]",
					"[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;X4:17]([H])([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;H1X3:32][#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;X4:30]([H])([#8;A;X2:31][H])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:28])(=[O;X1:29])[#8;A:27][H])[#6;A;H1X4:22]1[#8;A;H1X2:23]>>[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;X3:17]([H])=[#6;A;X3:30]([#8;A;X2:31][H])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26]([#8;A-:27])(=[O;X1:28])=[O;X1:29])[#6;A;H1X4:22]1[#8;A;H1X2:23].[H][#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;H1X3:32][#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H]"
							
//					"[H][#8;A;X2][#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;X4]([H])([H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([H])([#8;X2][S;X4]([#8;A-])(=[O;X1])=[O;X1])[#6;A;H1X4]1[#8;A;H1X2]",
//					"[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;X4:17]([H])([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;H1X3:32][#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;H1X4:12]([#8;A;X2:13][H])[#6;A;H1X3:11]=[#6;A;H1X3:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:29])(=[O;X1:28])[#8;A:27][H])[#6;A;H1X4:22]1[#8;A;H1X2:23]>>[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;X4:17]([H])([H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26]([#8;A-:27])(=[O;X1:29])=[O;X1:28])[#6;A;H1X4:22]1[#8;A;H1X2:23].[H][#8;A;X2:13][#6;A;H1X4:12]([#6;A;H1X3:11]=[#6;A;H1X3:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#6;A;X4:14]([H])([#7;A;H1X3:32][#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:15]([H])([H])[#8:16]"
			},
			
			// ion SO4H- (96.95956)
			new String[]{
					"[H][#8;A][S;X4]([#8;X1-])(=[O;X1])=[O;X1]",
					"[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;H1X4:17]([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;H1X3:32][#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([#8;X2:25][S;X4:26](=[O;X1:28])(=[O;X1:29])[#8;A:27][H])[#6;A;H1X4:22]1[#8;A;H1X2:23]>>[H][#8;A:27][S;X4:26]([#8;X1-:25])(=[O;X1:28])=[O;X1:29].[H][#8;A;X2:21][#6;A;H2X4:20][#6;A;H1X4:19]1[#8:18][#6;A;H1X4:17]([#8:16][#6;A;X4:15]([H])([H])[#6;A;X4:14]([H])([#7;A;H1X3:32][#6:33]([#6,#1;A:34])=[O;X1:35])[#6;A;X4:12]([H])([#6;A;H1X3,H2X4:11]-,=[#6;A;H1X3,H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;A;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;X4:1]([H])[H])[#8;A;X2:13][H])[#6;A;H1X4:30]([#8;A;H1X2:31])[#6;A;X4:24]([H:36])([H])[#6;A;H1X4:22]1[#8;A;H1X2:23]"
			}			
//				"[#6;A;X4;H2,H3:1][#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H2X4:4][#6;A;H2X4:5][#6;A;H2X4:6][#6;A;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H1X3:10]=[#6;A;H1X3:11][#6;A;H1X4;@@:12]([#8;A;H1X2:13])[#6;A;H1X4;@:14]([#6;A;H2X4:15][#8:16][#6;A;H1X4;@@]1[#8][#6;A;H1X4;@]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4;@]([#8;A;H1X2])[#6;A;H1X4;@]([#8]S([#8;A;X2H1,X1-])(=O)=O)[#6;A;H1X4;@]1[#8;A;H1X2])[#7;A;H1X3:17][#6:18]([#6,#1;A:19])=[O;X1:20]>>[#6;A;X4;H2,H3:1][#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H2X4:4][#6;A;H2X4:5][#6;A;H2X4:6][#6;A;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H1X3:10]=[#6;A;H1X3:11][#6;A;H1X4;@@:12]([#8;A;H1X2:13])[#6;A;H1X4;@:14]([#6;A;H2X4:15][#8:16])[#7;A;H1X3:17][#6:18]([#6,#1;A:19])=[O;X1:20]"
//				"[#6;A;X4;H2,H3][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H1X3]=[#6;A;H1X3][#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#6;A;H2X4][#8][#6;A;H1X4]1[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;X2][S;X4]([#8;A;X2H1,X1-])(=[O;X1])=[O;X1])[#6;A;H1X4]1[#8;A;H1X2])[#7;A;H1X3][#6:3]([#6,#1;A:2])=[O;X1:1]>>[#6:3]([#6,#1;A:2])=[O;X1:1]"
		
		});
//		
//		fragmentationPatterns.put(ClassName.GANGLIOSIDES, new String[]{
//				"[#6;A;X4:1][#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H2X4:4][#6;A;H2X4:5][#6;A;H2X4:6][#6;A;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H2X4:10][#6;A;H2X4:11][#6;A;H2X4:12][#6;A;H2X4:13][#6;A;H1X3:14]=[#6;A;H1X3:15][#6;A;H1X4:16]([#8;A;H1X2:17])[#6;A;H1X4:18]([#6;A;H2X4:19][#8:20][#6;A;H1X4]1[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8][#6;A;H1X4]2[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8]C3([#6;A;H2X4][#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#7;A;H1X3][#6](-[#6])=[O;X1])[#6;A;H1X4]([#8]3)[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H2X4][#8;A;H1X2])[#6]([#8;A;X2H1,X1-])=[O;X1])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#7;A;H1X3:21][#6:22]([#6,#1;A:23])=[O;X1:24]>>[#6;A;X4:1][#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H2X4:4][#6;A;H2X4:5][#6;A;H2X4:6][#6;A;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H2X4:10][#6;A;H2X4:11][#6;A;H2X4:12][#6;A;H2X4:13][#6;A;H1X3:14]=[#6;A;H1X3:15][#6;A;H1X4:16]([#8;A;H1X2:17])[#6;A;H1X4:18]([#6;A;H2X4:19][#8:20])[#7;A;H1X3:21][#6:22]([#6,#1;A:23])=[O;X1:24]",
//				"[#6;A;X4:22][#6;H2X4:21]-[#6;H2X4:20]-[#6;H2X4:19]-[#6;H2X4:18]-[#6;H2X4:17]-[#6;H2X4:16]-[#6;H2X4:15]-[#6;H2X4:14]-[#6;H2X4:13]-[#6;H2X4:12]-[#6;H2X4:11]-[#6;H2X4:10]\\[#6;A;H1X3:9]=[#6;A;H1X3:8]\\[#6;A;H1X4:7]([#8;A;H1X2:23])[#6;A;H1X4:4]([#6:5]-[#8:6][#6;A;H1X4]1[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8][#6;A;H1X4]2[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8][#6;A;H1X4]3[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]3[#7;A;H1X3][#6]([#6;A;H3X4])=O)[#6;A;H1X4]([#8]C3([#6;A;H2X4][#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#7;A;H1X3][#6](-[#6])=O)[#6;A;H1X4]([#8]3)[#6]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H2X4][#8;A;H1X2])[#6]([#8;A;X2H1,X1-])=O)[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#7;A;H1X3:3][#6:1]([#6,#1;A:24])=[O:2]>>[#6;A;X4:22][#6;H2X4:21]-[#6;H2X4:20]-[#6;H2X4:19]-[#6;H2X4:18]-[#6;H2X4:17]-[#6;H2X4:16]-[#6;H2X4:15]-[#6;H2X4:14]-[#6;H2X4:13]-[#6;H2X4:12]-[#6;H2X4:11]-[#6;H2X4:10]\\[#6;A;H1X3:9]=[#6;A;H1X3:8]\\[#6;A;H1X4:7]([#8;A;H1X2:23])[#6;A;H1X4:4]([#6:5]-[#8:6])[#7;A;H1X3:3][#6:1]([#6,#1;A:24])=[O:2]",
//				"[#6;A;X4:22][#6;H2X4:21]-[#6;H2X4:20]-[#6;H2X4:19]-[#6;H2X4:18]-[#6;H2X4:17]-[#6;H2X4:16]-[#6;H2X4:15]-[#6;H2X4:14]-[#6;H2X4:13]-[#6;H2X4:12]-[#6;H2X4:11]-[#6;H2X4:10]\\[#6;A;H1X3:9]=[#6;A;H1X3:8]\\[#6;A;H1X4:7]([#8;A;H1X2:23])[#6;A;H1X4:4]([#6;A;H2X4:5][#8:6][#6;A;H1X4]1[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8]C2([#6;A;H2X4][#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#7;A;H1X3][#6]([#6;A;H3X4])=O)[#6;A;H1X4]([#8]2)[#6]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H2X4][#8;A;H1X2])[#6]([#8;A;X2H1,X1-])=O)[#6;A;H1X4]1[#8;A;H1X2])[#7;A;H1X3:3][#6:1]([#6,#1;A:24])=[O:2]>>[#6;A;X4:22][#6;H2X4:21]-[#6;H2X4:20]-[#6;H2X4:19]-[#6;H2X4:18]-[#6;H2X4:17]-[#6;H2X4:16]-[#6;H2X4:15]-[#6;H2X4:14]-[#6;H2X4:13]-[#6;H2X4:12]-[#6;H2X4:11]-[#6;H2X4:10]\\[#6;A;H1X3:9]=[#6;A;H1X3:8]\\[#6;A;H1X4:7]([#8;A;H1X2:23])[#6;A;H1X4:4]([#6;A;H2X4:5][#8:6])[#7;A;H1X3:3][#6:1]([#6,#1;A:24])=[O:2]"
//		});	
//		
//		fragmentationPatterns.put(ClassName.CHOLESTERYL_ESTERS, new String[]{
//				"[#6;A;H3X4:30][#6;A;H1X4:29]([#6;A;H3X4:31])[#6;A;H2X4:28][#6;A;H2X4:27][#6;A;H2X4:26][#6;A;H1X4:24]([#6;A;H3X4:25])[#6;A;H1X4:1]1[#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H1X4:4]2[#6;A;H1X4:5]3[#6;A;H2X4:6][#6;A;H1X3:7]=[#6:8]4[#6;A;H2X4:9][#6:10]([#6;A;H2X4:11][#6;A;H2X4:12][C:13]4([#6;A;H3X4:14])[#6;A;H1X4:15]3[#6;A;H2X4:16][#6;A;H2X4:17][C:18]12[#6;A;H3X4:19])-[#8;X2:20]-[#6;X3:21](-[#6:23])=[O;X1:22]>>[#6;A;H3X4:30][#6;A;H1X4:29]([#6;A;H3X4:31])[#6;A;H2X4:28][#6;A;H2X4:27][#6;A;H2X4:26][#6;A;H1X4:24]([#6;A;H3X4:25])[#6;A;H1X4:1]1[#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H1X4:4]2[#6;A;H1X4:5]3[#6;A;H2X4:6][#6;A;H1X3:7]=[#6:8]4[#6;A;H2X4:9][#6:10]([#6;A;H2X4:11][#6;A;H2X4:12][C:13]4([#6;A;H3X4:14])[#6;A;H1X4:15]3[#6;A;H2X4:16][#6;A;H2X4:17][C:18]12[#6;A;H3X4:19])-[#8;X2:20]-[#6;X3:21](-[#6:23])=[O;X1:22]"
//		});
//		
//		fragmentationPatterns.put(ClassName.CHOLESTERYL_ESTERS_LANOSTERYL_OR_ZYMOSTERYL, new String[]{
//			"[#6;A;H3X4:1][#6;A;H1X4:2]([#6;A;H2X4:3][#6;A;H2X4:4][#6;A;H1X3:5]=[#6;A;X3:6]([#6;A;H3X4:7])[#6;A;H3X4:8])[#6;A;H1X4:9]1[#6;A;H2X4:10][#6;A;H2X4:11][#6;A;X4:12]2([*,#1;#1,CX4H3:34])[#6;A;X3:13]3=[#6;A;X3:14]([#6;A;H2X4:15][#6;A;H2X4:16][C:17]12[#6;A;H3X4:18])[C:19]1([#6;A;H3X4:20])[#6;A;H2X4:21][#6;A;H2X4:22][#6;H1X4:23](-[#8;X2:24]-[#6;X3:25](-[#6:26])=[O;X1:27])[#6;A;X4:28]([*,#1;#1,CX4H3:29])([*,#1;#1,CX4H3:30])[#6;A;H1X4:31]1[#6;A;H2X4:32][#6;A;H2X4:33]3>>[#6;A;H3X4:1][#6;A;H1X4:2]([#6;A;H2X4:3][#6;A;H2X4:4]-[#6;A;H1X3:5]=[#6;A;X3:6](-[#6;A;H3X4:7])[#6;A;H3X4:8])[#6;A;H1X4:9]1[#6;A;H2X4:10][#6;A;H2X4:11][#6;A;X4:12]2([*,#1;#1,CX4H3:34])[#6;A;X3:13]3=[#6;A;X3:14]([#6;A;H2X4:15][#6;A;H2X4:16][C:17]12[#6;A;H3X4:18])[C:19]1([#6;A;H3X4:20])[#6;A;H2X4:21][#6;A;H2X4:22][#6;H1X4:23](-[#8;X2:24]-[#6;X3:25](-[#6:26])=[O;X1:27])[#6;A;X4:28]([*,#1;#1,CX4H3:29])([*,#1;#1,CX4H3:30])[#6;A;H1X4:31]1[#6;A;H2X4:32][#6;A;H2X4:33]3"	
//		});		
//		
		// [M+Li]+
		fragmentationPatterns.put(ClassName._1_MONOACYLGLYCEROLS, new String[][]{
			new String[]{
					// [M+Li]+
					"[H][#8;A;X2][#6;A;H2X4][#6;H1X4R0]([#8;A;X2][H])[#6;A;H2X4][#8;X2]-[#6;R0]([#6,#1;A])=[O;X1]",
					"[H][#8;A;X2:1][#6;A;H2X4:2][#6;H1X4R0:3]([#8;A;X2:4][H])[#6;A;H2X4:5][#8;X2:6]-[#6;R0:7]([#6,#1;A:8])=[O;X1:9]>>[H][#8;A;X2:1][#6;A;H2X4:2][#6;H1X4R0:3]([#8;A;X2:4][H])[#6;A;H2X4:5][#8;X2:6]-[#6;R0:7]([#6,#1;A:8])=[O;X1:9]"
			},
			// C3H8O3Li (99.06)
			new String[]{
				"[H][#8;X2][#6;A;H2X4][#6;H1X4R0]([#8;A;X2][H])[#6;A;H2X4][#8;A;X2][H]",
				"[H][#8;A;X2:1][#6;A;H2X4:2][#6;H1X4R0:3]([#8;A;X2:4][H])[#6;A;H2X4:5][#8;X2:6]-[#6;R0:7]([#6,#1;A:8])=[O;X1:9]>>[H][#6;R0:7]([#6,#1;A:8])=[O;X1:9].[H][#8;X2:6][#6;A;H2X4:5][#6;H1X4R0:3]([#8;A;X2:4][H])[#6;A;H2X4:2][#8;A;X2:1][H]"
			},
			// C3H8O3Li-H20 (81.05)
			new String[]{
					"[H][#8;A;X2][#6;A;H2X4][#6;X3R0]([#8;A;X2][H])=[#6;A;X3]([H])[H]",
					"[H][#8;A;X2:1][#6;A;H2X4:2][C;X4R0:3]([H])([#8;A;X2:4][H])[#6;A;X4:5]([H])([H])[#8;X2:6]-[#6;R0:7]([#6,#1;A:8])=[O;X1:9]>>[H][#8;X2:6][H].[H][#6;R0:7]([#6,#1;A:8])=[O;X1:9].[H][#8;A;X2:1][#6;A;H2X4:2][#6;X3R0:3]([#8;A;X2:4][H])=[#6;A;X3:5]([H])[H]"
				}
			});
		
		// [M+Li]+		
		fragmentationPatterns.put(ClassName._2_MONOACYLGLYCEROLS, new String[][]{
			// [M+Li]+	
			new String[]{
					"[H][#8;X2][#6;A;X4]([H])([H])[C;X4R0]([H])([#8;A;X2][#6;R0]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;A;X2][H]",
					"[H:11][#8;X2:7][#6;A;X4:6]([H])([H])[C;X4R0:4]([H])([#8;A;X2:5][#6;R0:8]([#6,#1;A:9])=[O;X1:10])[#6;A;X4:3]([H])([H])[#8;A;X2:2][H:1]>>[H:11][#8;X2:7][#6;A;X4:6]([H])([H])[C;X4R0:4]([H])([#8;A;X2:5][#6;R0:8]([#6,#1;A:9])=[O;X1:10])[#6;A;X4:3]([H])([H])[#8;A;X2:2][H:1]"
				},
			// C3H8O3Li (99.06)
			new String[]{
					"[H][#8;A;X2][#6;A;H2X4][#6;H1X4R0]([#8;A;X2][H])[#6;A;H2X4][#8;X2][H]",
					"[H:11][#8;X2:7][#6;A;H2X4:6][#6;H1X4R0:4]([#6;A;H2X4:3][#8;A;X2:2][H:1])[#8;A;X2:5][#6;R0:8]([#6,#1;A:9])=[O;X1:10]>>[H][#6;R0:8]([#6,#1;A:9])=[O;X1:10].[H:11][#8;X2:7][#6;A;H2X4:6][#6;H1X4R0:4]([#8;A;X2:5][H])[#6;A;H2X4:3][#8;A;X2:2][H:1]"
				},
			// C3H8O3Li-H20 (81.05)
			new String[]{
					"[H][#8;X2][#6;A;X3]([H])=[#6;X3R0]([H])[#6;A;X4]([H])([H])[#8;A;X2][H]",
					"[H:1][#8;A;X2:2][#6;A;X4:3]([H])([H])[C;X4R0:4]([H])([#8;A;X2:5][#6;R0:8]([#6,#1;A:9])=[O;X1:10])[#6;A;X4:6]([H])([H])[#8;X2:7][H:11]>>[H][#8;A;X2:5][H].[H][#6;R0:8]([#6,#1;A:9])=[O;X1:10].[H:11][#8;X2:7][#6;A;X3:6]([H])=[#6;X3R0:4]([H])[#6;A;X4:3]([H])([H])[#8;A;X2:2][H:1]"
				}
				
//				"[#8;A;H1X2:1][#6;A;H2X4:2][#6;H1X4R0:3]([#6;A;H2X4:4][#8;A;H1X2:5])-[#8;X2:6]-[#6;R0:7]([#6,#1;A:8])=[O;X1:9]>>[Li][#8;A;X2:1][#6;A;H2X4:2][#6;H1X4R0:3]([#6;A;H2X4:4][#8;A;H1X2:5])-[#8;X2:6]-[#6;R0:7]([#6,#1;A:8])=[O;X1:9]"
		});
		
//		// E.g.: DG 17:0; [M+Li]+; DG(8:0/9:0/0:0)
		fragmentationPatterns.put(ClassName.DIACYLGLYCEROLS, new String[][]{
			// [M+Li]+
			new String[]{
					"[#8;A;H1X2][#6;A;H2X4][#6;H1X4R0]([#6;A;H2X4][#8;X2]-[#6;R0]([#6,#1;A])=[O;X1])[#8;A;X2][#6;R0]([#6,#1;A])=[O;X1]",
					"[#8;A;H1X2:1][#6;A;H2X4:2][#6;H1X4R0:3]([#6;A;H2X4:4][#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8])[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12]>>[#8;A;H1X2:1][#6;A;H2X4:2][#6;H1X4R0:3]([#6;A;H2X4:4][#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8])[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12]"
			},
			// [M+Li]-H20 (-18)
			new String[]{
					"[H]-[#6;A;X3]([H])=[#6;X3R0](-[#6;A;H2X4][#8;X2]-[#6;R0]([#6,#1;A])=[O;X1])[#8;A;X2][#6;R0]([#6,#1;A])=[O;X1]",
					"[H][#6;A;X4:2]([H])([#8;A;H1X2:1])[C;X4R0:3]([H])([#6;A;H2X4:4][#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8])[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12]>>[H][#8;A;X2:1][H].[H]-[#6;A;X3:2]([H])=[#6;X3R0:3](-[#6;A;H2X4:4][#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8])[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12]"
			},
			// [M+Li]-sn1
			new String[]{
					"[H]-[#6;A;X3]([H])=[#6;X3R0](/[#8;A;X2][#6;R0]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;A;H1X2]",
					"[H][#6;A;X4:2]([H])([#8;A;H1X2:1])[C;X4R0:3]([H])([#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12])[#6;A;X4:4]([H])([H])[#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8]>>[H][#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8].[H]-[#6;A;X3:4]([H])=[#6;X3R0:3](/[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12])[#6;A;X4:2]([H])([H])[#8;A;H1X2:1]"
			},
			// [M+Li]-sn1+H20
			new String[]{
					"[H][#8;X2][#6;A;H2X4][#6;H1X4R0]([#6;A;H2X4][#8;A;H1X2])[#8;A;X2][#6;R0]([#6,#1;A])=[O;X1]",
					"[#8;A;H1X2:1][#6;A;H2X4:2][#6;H1X4R0:3]([#6;A;H2X4:4][#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8])[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12]>>[H][#6;R0:6]([#6,#1;A:7])=[O;X1:8].[H][#8;X2:5][#6;A;H2X4:4][#6;H1X4R0:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12]"
			},
			// [M+Li]-sn2
			new String[]{
					"[H]-[#6;A;X3]([#8;X2]-[#6;R0]([#6,#1;A])=[O;X1])=[#6;X3R0](-[H])[#6;A;X4]([H])([H])[#8;A;H1X2]",
					"[H][#6;A;X4:2]([H])([#8;A;H1X2:1])[C;X4R0:3]([H])([#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12])[#6;A;X4:4]([H])([H])[#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8]>>[H][#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12].[H][#6;A;X3:4]([#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8])=[#6;X3R0:3]([H])[#6;A;X4:2]([H])([H])[#8;A;H1X2:1]"
			},
			// [M+Li]-sn2+H20
			new String[]{
					"[H][#8;A;X2][#6;H1X4R0]([#6;A;H2X4][#8;A;H1X2])[#6;A;H2X4][#8;X2]-[#6;R0]([#6,#1;A])=[O;X1]",
					"[#8;A;H1X2:1][#6;A;H2X4:2][#6;H1X4R0:3]([#6;A;H2X4:4][#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8])[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12]>>[H][#6;R0:10]([#6,#1;A:11])=[O;X1:12].[H][#8;A;X2:9][#6;H1X4R0:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H2X4:4][#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8]"
			},
			// sn1+Li
			new String[]{
					"[H][#8;X2]-[#6;R0]([#6,#1;A])=[O;X1]",
					"[H][#6;A;X4:2]([H])([#8;A;H1X2:1])[C;X4R0:3]([H])([#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12])[#6;A;X4:4]([H])([H])[#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8]>>[H][#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8].[H]-[#6;A;X3:4]([H])=[#6;X3R0:3](/[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12])[#6;A;X4:2]([H])([H])[#8;A;H1X2:1]"
//					"[H][#6;R0]([#6,#1;A])=[O;X1]",
//					"[#8;A;H1X2:1][#6;A;H2X4:2][#6;H1X4R0:3]([#6;A;H2X4:4][#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8])[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12]>>[H][#6;R0:6]([#6,#1;A:7])=[O;X1:8].[H][#8;X2:5][#6;A;H2X4:4][#6;H1X4R0:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12]"
			},
			// sn2+Li
			new String[]{
					"[H][#8;A;X2][#6;R0]([#6,#1;A])=[O;X1]",
					"[H][#6;A;X4:2]([H])([#8;A;H1X2:1])[C;X4R0:3]([H])([#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12])[#6;A;X4:4]([H])([H])[#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8]>>[H][#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12].[H][#6;A;X3:4]([#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8])=[#6;X3R0:3]([H])[#6;A;X4:2]([H])([H])[#8;A;H1X2:1]"
//					"[H][#6;R0]([#6,#1;A])=[O;X1]",
//					"[#8;A;H1X2:1][#6;A;H2X4:2][#6;H1X4R0:3]([#6;A;H2X4:4][#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8])[#8;A;X2:9][#6;R0:10]([#6,#1;A:11])=[O;X1:12]>>[H][#6;R0:10]([#6,#1;A:11])=[O;X1:12].[H][#8;A;X2:9][#6;H1X4R0:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H2X4:4][#8;X2:5]-[#6;R0:6]([#6,#1;A:7])=[O;X1:8]"
			}
		});
//
////		// check Fong-Fu Hsu and John Turk J Am Soc Mass Spectrom 1999, 10, 587â€“599 Scheme 1A.
////		// Structural Characterization of Triacylglycerols as Lithiated Adducts by Electrospray Ionization Mass 
////		// Spectrometry Using LowEnergy Collisionally Activated Dissociation on a Triple Stage Quadrupole Instrument
////		fragmentationPatterns.put(ClassName.TRIACYLGLYCEROLS, new String[]{
////				"[#6,#1;A:10][#6;R0:9](=[O;X1:11])[#8;A;X2:8][#6;A;H2X4:7][#6;H1X4R0:6]([#6;A;H2X4:5][#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3])[#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15]>>[H][#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3].[Li][#6;A;X4:5][#6;H1X4R0:6]([#6;A;H2X4:7][#8;A;X2:8][#6;R0:9]([#6,#1;A:10])=[O;X1:11])[#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15]",
////				"[#6,#1;A:10][#6;R0:9](=[O;X1:11])[#8;A;X2:8][#6;A;H2X4:7][#6;H1X4R0:6]([#6;A;H2X4:5][#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3])[#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15]>>[H][#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15].[Li][#6;X4R0:6]([#6;A;H2X4:7][#8;A;X2:8][#6;R0:9]([#6,#1;A:10])=[O;X1:11])[#6;A;H2X4:5][#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3]",
////				"[#6,#1;A:10][#6;R0:9](=[O;X1:11])[#8;A;X2:8][#6;A;H2X4:7][#6;H1X4R0:6]([#6;A;H2X4:5][#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3])[#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15]>>[H][#8;A;X2:8][#6;R0:9]([#6,#1;A:10])=[O;X1:11].[Li][#6;A;X4:7][#6;H1X4R0:6]([#6;A;H2X4:5][#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3])[#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15]"
////		});
		
		// TG 42:0; [M+Li]+; TG(12:0/14:0/16:0)
		fragmentationPatterns.put(ClassName.TRIACYLGLYCEROLS, new String[][]{
			// [M+Li]-sn1+Li
			new String[]{
				"[H]-[#6;A;X3]([H])=[#6;X3R0](/[#8;A;X2][#6;R0]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;A;X2][#6;R0]([#6,#1;A])=[O;X1]",
				"[H][#6;A;X4:7]([H])([#8;A;X2:8][#6;R0:9]([#6,#1;A:10])=[O;X1:11])[C;X4R0:6]([H])([#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15])[#6;A;X4:5]([H])([H])[#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3]>>[H][#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3].[H]-[#6;A;X3:5]([H])=[#6;X3R0:6](/[#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15])[#6;A;X4:7]([H])([H])[#8;A;X2:8][#6;R0:9]([#6,#1;A:10])=[O;X1:11]"
			},
			// [M+Li]-sn2+Li
			new String[]{
					"[H]-[#6;A;X3]([#8;A;X2][#6;R0]([#6,#1;A])=[O;X1])=[#6;X3R0](-[H])[#6;A;X4]([H])([H])[#8;X2]-[#6;R0]([#6,#1;A])=[O;X1]",
					"[H][#6;A;X4:5]([H])([#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3])[C;X4R0:6]([H])([#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15])[#6;A;X4:7]([H])([H])[#8;A;X2:8][#6;R0:9]([#6,#1;A:10])=[O;X1:11]>>[H][#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15].[H]-[#6;A;X3:7]([#8;A;X2:8][#6;R0:9]([#6,#1;A:10])=[O;X1:11])=[#6;X3R0:6](-[H])[#6;A;X4:5]([H])([H])[#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3]"
			},
			// [M+Li]-sn3+Li
			new String[]{
					"[H][#6;A;X3]([H])=[#6;X3R0]([#8;A;X2][#6;R0]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2]-[#6;R0]([#6,#1;A])=[O;X1]",
					"[H][#6;A;X4:5]([H])([#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3])[C;X4R0:6]([H])([#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15])[#6;A;X4:7]([H])([H])[#8;A;X2:8][#6;R0:9]([#6,#1;A:10])=[O;X1:11]>>[H][#8;A;X2:8][#6;R0:9]([#6,#1;A:10])=[O;X1:11].[H][#6;A;X3:7]([H])=[#6;X3R0:6]([#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15])[#6;A;X4:5]([H])([H])[#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3]"
			}
//				"[#6,#1;A:10][#6;R0:9](=[O;X1:11])[#8;A;X2:8][#6;A;H2X4:7][#6;H1X4R0:6]([#6;A;H2X4:5][#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3])[#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15]>>[H][#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3].[#6;A;H2X4+:5][#6;H1X4R0:6]([#6;A;H2X4:7][#8;A;X2:8][#6;R0:9]([#6,#1;A:10])=[O;X1:11])[#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15]",
//				"[#6,#1;A:10][#6;R0:9](=[O;X1:11])[#8;A;X2:8][#6;A;H2X4:7][#6;H1X4R0:6]([#6;A;H2X4:5][#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3])[#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15]>>[H][#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15].[#6,#1;A:1][#6;R0:2](=[O;X1:3])-[#8;X2:4][#6;A;H2X4:5][#6;H1X4R0+:6][#6;A;H2X4:7][#8;A;X2:8][#6;R0:9]([#6,#1;A:10])=[O;X1:11]",
//				"[#6,#1;A:10][#6;R0:9](=[O;X1:11])[#8;A;X2:8][#6;A;H2X4:7][#6;H1X4R0:6]([#6;A;H2X4:5][#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3])[#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15]>>[H][#8;A;X2:8][#6;R0:9]([#6,#1;A:10])=[O;X1:11].[#6;A;H2X4+:7][#6;H1X4R0:6]([#6;A;H2X4:5][#8;X2:4]-[#6;R0:2]([#6,#1;A:1])=[O;X1:3])[#8;A;X2:12][#6;R0:13]([#6,#1;A:14])=[O;X1:15]"
		});
		
		fragmentationPatterns.put(ClassName.MONOGALACTOSYLDIACYLGLYCEROLS, new String[][]{
			new String[]{
//					"[H][#6]([#6,#1;A])=[O;X1]",
//					"[H:24][#6;A;X4:8]([#6;A;H2X4:7][#8;X2:6][#6;A;H1X4;@@:5]1[#8;X2:4][#6;A;H1X4;@:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4;@:22]([#8;A;H1X2:23])[#6;A;H1X4:20]([#8;A;H1X2:21])[#6;A;H1X4:18]1[#8;A;H1X2:19])([#6;A;H2X4:9][#8;X2:10]-[#6:11]([#6,#1;A:12])=[O;X1:13])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]>>[H][#6:15]([#6,#1;A:16])=[O;X1:17].[H:24][#6;A;X4:8]([#8;X2:14])([#6;A;H2X4:7][#8;X2:6][#6;A;H1X4;@@:5]1[#8;X2:4][#6;A;H1X4;@:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4;@:22]([#8;A;H1X2:23])[#6;A;H1X4:20]([#8;A;H1X2:21])[#6;A;H1X4:18]1[#8;A;H1X2:19])[#6;A;H2X4:9][#8;X2:10]-[#6:11]([#6,#1;A:12])=[O;X1:13]"
					"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H:24][#6;A;X4:8]([#6;A;H2X4:7][#8;X2:6][#6;A;H1X4;@@:5]1[#8;X2:4][#6;A;H1X4;@:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4;@:22]([#8;A;H1X2:23])[#6;A;H1X4:20]([#8;A;H1X2:21])[#6;A;H1X4:18]1[#8;A;H1X2:19])([#6;A;H2X4:9][#8;X2:10]-[#6:11]([#6,#1;A:12])=[O;X1:13])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]>>[H][#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17].[H][#6;A;X4:8]([H:24])([#6;A;H2X4:7][#8;X2:6][#6;A;H1X4;@@:5]1[#8;X2:4][#6;A;H1X4;@:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4;@:22]([#8;A;H1X2:23])[#6;A;H1X4:20]([#8;A;H1X2:21])[#6;A;H1X4:18]1[#8;A;H1X2:19])[#6;A;H2X4:9][#8;X2:10]-[#6:11]([#6,#1;A:12])=[O;X1:13]"
			},
			new String[]{
//					"[H][#6]([#6,#1;A])=[O;X1]",
//					"[H:24][#6;A;X4:8]([#6;A;H2X4:7][#8;X2:6][#6;A;H1X4;@@:5]1[#8;X2:4][#6;A;H1X4;@:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4;@:22]([#8;A;H1X2:23])[#6;A;H1X4:20]([#8;A;H1X2:21])[#6;A;H1X4:18]1[#8;A;H1X2:19])([#6;A;H2X4:9][#8;X2:10]-[#6:11]([#6,#1;A:12])=[O;X1:13])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]>>[H][#6:11]([#6,#1;A:12])=[O;X1:13].[H][#8;X2:10][#6;A;H2X4:9][#6;A;X4:8]([H:24])([#6;A;H2X4:7][#8;X2:6][#6;A;H1X4;@@:5]1[#8;X2:4][#6;A;H1X4;@:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4;@:22]([#8;A;H1X2:23])[#6;A;H1X4:20]([#8;A;H1X2:21])[#6;A;H1X4:18]1[#8;A;H1X2:19])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]"
					"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#6;A;X4:9]([H])([#8;X2:10]-[#6:11]([#6,#1;A:12])=[O;X1:13])[#6;A;X4:8]([H:24])([#6;A;H2X4:7][#8;X2:6][#6;A;H1X4;@@:5]1[#8;X2:4][#6;A;H1X4;@:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4;@:22]([#8;A;H1X2:23])[#6;A;H1X4:20]([#8;A;H1X2:21])[#6;A;H1X4:18]1[#8;A;H1X2:19])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]>>[H][#8;X2:10]-[#6:11]([#6,#1;A:12])=[O;X1:13].[H][#6;A;X4:9]([H])([H])[#6;A;X4:8]([H:24])([#6;A;H2X4:7][#8;X2:6][#6;A;H1X4;@@:5]1[#8;X2:4][#6;A;H1X4;@:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4;@:22]([#8;A;H1X2:23])[#6;A;H1X4:20]([#8;A;H1X2:21])[#6;A;H1X4:18]1[#8;A;H1X2:19])[#8;X2:14]-[#6:15]([#6,#1;A:16])=[O;X1:17]"
			}		
//				"[#8;A;H1X2][#6;A;H2X4][#6;A@H;H1X4]1[#8;X2][#6;A@@H;H1X4]([#8;X2][#6;A;H2X4][#6;A@@H;H1X4]([#6;A;H2X4][#8;X2:3]-[#6:1]([#6,#1;A:8])=[O;X1:2])[#8;X2:4]-[#6:5]([#6,#1;A:7])=[O;X1:6])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A@H;H1X4]1[#8;A;H1X2]>>[#8;X2:3]-[#6:1]([#6,#1;A:8])=[O;X1:2].[#8;X2:4]-[#6:5]([#6,#1;A:7])=[O;X1:6]"
		});
//		
//		
		fragmentationPatterns.put(ClassName.DIGALACTOSYLDIACYLGLYCEROLS, new String[][]{
			new String[]{
					"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H:37][#6;A;X4:14]([H:36])([#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18])[#6;A;X4:13]([H:35])([#6;A;H2X4:12][#8;X2:11][#6;A;H1X4;@@:10]1[#8:9][#6;A;H1X4;@:8]([#6;A;H2X4:7][#8;X2:6][#6;A;H1X4;@:5]2[#8:4][#6;A;H1X4;@:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4;@:33]([#8;A;H1X2:34])[#6;A;H1X4;@@:31]([#8;A;H1X2:32])[#6;A;H1X4;@:29]2[#8;A;H1X2:30])[#6;A;H1X4;@:27]([#8;A;H1X2:28])[#6;A;H1X4;@@:25]([#8;A;H1X2:26])[#6;A;H1X4;@:23]1[#8;A;H1X2:24])[#8;X2:19]-[#6:20]([#6,#1;A:21])=[O;X1:22]>>[H][#8;X2:19]-[#6:20]([#6,#1;A:21])=[O;X1:22].[H][#6;A;X4:13]([H:35])([#6;A;H2X4:12][#8;X2:11][#6;A;H1X4;@@:10]1[#8:9][#6;A;H1X4;@:8]([#6;A;H2X4:7][#8;X2:6][#6;A;H1X4;@:5]2[#8:4][#6;A;H1X4;@:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4;@:33]([#8;A;H1X2:34])[#6;A;H1X4;@@:31]([#8;A;H1X2:32])[#6;A;H1X4;@:29]2[#8;A;H1X2:30])[#6;A;H1X4;@:27]([#8;A;H1X2:28])[#6;A;H1X4;@@:25]([#8;A;H1X2:26])[#6;A;H1X4;@:23]1[#8;A;H1X2:24])[#6;A;X4:14]([H:37])([H:36])[#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18]"
			},
			
			new String[]{
					"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H:36][#6;A;X4:14]([H:37])([#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18])[#6;A;X4:13]([H:35])([#6;A;H2X4:12][#8;X2:11][#6;A;H1X4;@@:10]1[#8:9][#6;A;H1X4;@:8]([#6;A;H2X4:7][#8;X2:6][#6;A;H1X4;@:5]2[#8:4][#6;A;H1X4;@:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4;@:33]([#8;A;H1X2:34])[#6;A;H1X4;@@:31]([#8;A;H1X2:32])[#6;A;H1X4;@:29]2[#8;A;H1X2:30])[#6;A;H1X4;@:27]([#8;A;H1X2:28])[#6;A;H1X4;@@:25]([#8;A;H1X2:26])[#6;A;H1X4;@:23]1[#8;A;H1X2:24])[#8;X2:19]-[#6:20]([#6,#1;A:21])=[O;X1:22]>>[H][#8;X2:15]-[#6:16]([#6,#1;A:17])=[O;X1:18].[H:36][#6;A;X4:14]([H:37])([H])[#6;A;X4:13]([H:35])([#6;A;H2X4:12][#8;X2:11][#6;A;H1X4;@@:10]1[#8:9][#6;A;H1X4;@:8]([#6;A;H2X4:7][#8;X2:6][#6;A;H1X4;@:5]2[#8:4][#6;A;H1X4;@:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4;@:33]([#8;A;H1X2:34])[#6;A;H1X4;@@:31]([#8;A;H1X2:32])[#6;A;H1X4;@:29]2[#8;A;H1X2:30])[#6;A;H1X4;@:27]([#8;A;H1X2:28])[#6;A;H1X4;@@:25]([#8;A;H1X2:26])[#6;A;H1X4;@:23]1[#8;A;H1X2:24])[#8;X2:19]-[#6:20]([#6,#1;A:21])=[O;X1:22]"
			}
		});
		
		// [M-H]-sn1; [M-H]-sn12; sn2 FA; sn1 FA; fragment C6H9O7S
		fragmentationPatterns.put(ClassName.SULFOQUINOVOSYLDIACYLGLYCEROLS, new String[][]{
			// [M-H]-sn1
			new String[]{
					"[H][#8;A][S;X4](=[O;X1])(=[O;X1])[#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;H1X4]([#8;X2][#6;A;H2X4]-[#6](-[#8;X2]-[#6]([#6,#1;A])=[O;X1])=[#6;A;X3](/[H])[H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]",
					"[H][#8;A:8][S;X4:7](=[O;X1:9])(=[O;X1:10])[#6;A;H2X4:6][#6;A;H1X4:5]1[#8:11][#6;A;H1X4:12]([#8;X2:13][#6;A;H2X4:14][C:15]([H])([#8;X2:21]-[#6:22]([#6,#1;A:23])=[O;X1:24])[#6;A;X4:16]([H])([H])[#8;X2:17]-[#6:18]([#6,#1;A:19])=[O;X1:20])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]1[#8;A;H1X2:4]>>[H][#8;X2:17]-[#6:18]([#6,#1;A:19])=[O;X1:20].[H][#8;A:8][S;X4:7](=[O;X1:9])(=[O;X1:10])[#6;A;H2X4:6][#6;A;H1X4:5]1[#8:11][#6;A;H1X4:12]([#8;X2:13][#6;A;H2X4:14]-[#6:15](-[#8;X2:21]-[#6:22]([#6,#1;A:23])=[O;X1:24])=[#6;A;X3:16](/[H])[H])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]1[#8;A;H1X2:4]"
			},
			// [M-H]-sn2
			new String[]{
					"[H][#8;A][S;X4](=[O;X1])(=[O;X1])[#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;H1X4]([#8;X2][#6;A;H2X4]C([H])([H])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]",
					"[H][#8;A:8][S;X4:7](=[O;X1:9])(=[O;X1:10])[#6;A;H2X4:6][#6;A;H1X4:5]1[#8:11][#6;A;H1X4:12]([#8;X2:13][#6;A;H2X4:14][C:15]([H])([#8;X2:21]-[#6:22]([#6,#1;A:23])=[O;X1:24])[#6;A;X4:16]([H])([H])[#8;X2:17]-[#6:18]([#6,#1;A:19])=[O;X1:20])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]1[#8;A;H1X2:4]>>[#8;X2:21]-[#6:22]([#6,#1;A:23])=[O;X1:24].[H][#8;A:8][S;X4:7](=[O;X1:9])(=[O;X1:10])[#6;A;H2X4:6][#6;A;H1X4:5]1[#8:11][#6;A;H1X4:12]([#8;X2:13][#6;A;H2X4:14][C:15]([H])([H])[#6;A;X4:16]([H])([H])[#8;X2:17]-[#6:18]([#6,#1;A:19])=[O;X1:20])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]1[#8;A;H1X2:4]"
//					"[H][#8;X2]C([H])([#6;A;H2X4][#8;X2][#6;A;H1X4]1[#8][#6;A;H1X4]([#6;A;H2X4][S;X4](=[O;X1])(=[O;X1])[#8;A][H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
//					"[H][#8;A:8][S;X4:7](=[O;X1:9])(=[O;X1:10])[#6;A;H2X4:6][#6;A;H1X4:5]1[#8:11][#6;A;H1X4:12]([#8;X2:13][#6;A;H2X4:14][C:15]([H])([#8;X2:21]-[#6:22]([#6,#1;A:23])=[O;X1:24])[#6;A;X4:16]([H])([H])[#8;X2:17]-[#6:18]([#6,#1;A:19])=[O;X1:20])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]1[#8;A;H1X2:4]>>[H][#6:22]([#6,#1;A:23])=[O;X1:24].[H][#8;X2:21][C:15]([H])([#6;A;H2X4:14][#8;X2:13][#6;A;H1X4:12]1[#8:11][#6;A;H1X4:5]([#6;A;H2X4:6][S;X4:7](=[O;X1:9])(=[O;X1:10])[#8;A:8][H])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:25]1[#8;A;H1X2:26])[#6;A;X4:16]([H])([H])[#8;X2:17]-[#6:18]([#6,#1;A:19])=[O;X1:20]"
			},
			// fragment C6H9O7S			
			new String[]{
					"[H][#8;A][S;X4](=[O;X1])(=[O;X1])[#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;X3+]([H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]",
					"[H][#8;A:8][S;X4:7](=[O;X1:9])(=[O;X1:10])[#6;A;H2X4:6][#6;A;H1X4:5]1[#8:11][#6;A;X4:12]([H])([#8;X2:13][#6;A;H2X4:14][C:15]([H])([#8;X2:21]-[#6:22]([#6,#1;A:23])=[O;X1:24])[#6;A;X4:16]([H])([H])[#8;X2:17]-[#6:18]([#6,#1;A:19])=[O;X1:20])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]1[#8;A;H1X2:4]>>[H][#6;A;X3+:12]1[#8:11][#6;A;H1X4:5]([#6;A;H2X4:6][S;X4:7]([#8;A-:8])(=[O;X1:9])=[O;X1:10])[#6;A;H1X4:3]([#8;A;H1X2:4])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:25]1[#8;A;H1X2:26].[H][#8;X2:13][#6;A;H2X4:14][C:15]([H])([#8;X2:21]-[#6:22]([#6,#1;A:23])=[O;X1:24])[#6;A;X4:16]([H])([H])[#8;X2:17]-[#6:18]([#6,#1;A:19])=[O;X1:20]"
			}, 		
			// sn2 FA
			new String[]{
					"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:8][S;X4:7](=[O;X1:10])(=[O;X1:9])[#6;A;H2X4:6][#6;A;H1X4:5]1[#8:11][#6;A;H1X4:12]([#8;X2:13][#6;A;H2X4:14][C:15]([H])([#8;X2:21]-[#6:22]([#6,#1;A:23])=[O;X1:24])[#6;A;X4:16]([H])([H])[#8;X2:17]-[#6:18]([#6,#1;A:19])=[O;X1:20])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]1[#8;A;H1X2:4]>>[H][#8;X2:21]-[#6:22]([#6,#1;A:23])=[O;X1:24].[H][#8;A:8][S;X4:7](=[O;X1:10])(=[O;X1:9])[#6;A;H2X4:6][#6;A;H1X4:5]1[#8:11][#6;A;H1X4:12]([#8;X2:13][#6;A;H2X4:14][C:15]([H])([H])[#6;A;X4:16]([H])([H])[#8;X2:17]-[#6:18]([#6,#1;A:19])=[O;X1:20])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]1[#8;A;H1X2:4]"
			},
			// sn1 FA
			new String[]{
					"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:8][S;X4:7](=[O;X1:10])(=[O;X1:9])[#6;A;H2X4:6][#6;A;H1X4:5]1[#8:11][#6;A;H1X4:12]([#8;X2:13][#6;A;H2X4:14][C:15]([H])([#8;X2:21]-[#6:22]([#6,#1;A:23])=[O;X1:24])[#6;A;X4:16]([H])([H])[#8;X2:17]-[#6:18]([#6,#1;A:19])=[O;X1:20])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]1[#8;A;H1X2:4]>>[H][#8;X2:17]-[#6:18]([#6,#1;A:19])=[O;X1:20].[H][#8;A:8][S;X4:7](=[O;X1:10])(=[O;X1:9])[#6;A;H2X4:6][#6;A;H1X4:5]1[#8:11][#6;A;H1X4:12]([#8;X2:13][#6;A;H2X4:14][C:15]([H])([#8;X2:21]-[#6:22]([#6,#1;A:23])=[O;X1:24])[#6;A;X4:16]([H])([H])[H])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:2]([#8;A;H1X2:1])[#6;A;H1X4:3]1[#8;A;H1X2:4]"
			}
		});
		
		fragmentationPatterns.put(ClassName.DIACYLATED_PHOSPHATIDYLINOSITOL_MONOMANNOSIDES, new String[][]{
			// [M-H]-
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;X2][#6;A;H1X4]1[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:19][P;X4:18](=[O;X1:20])([#8;X2:17][#6;A;X4:16]1[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;H1X4:5]1[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34])[#8;X2:21][#6;A;X4:22]([H:39])([H:40])[#6;A;X4:23]([H])([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])[#6;A;X4:24]([H])([H])[#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28]>>[H][#6;A;X4:24]([H])([#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28])[#6;A;X4:23]([H])([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])[#6;A;X4:22]([H:39])([H:40])[#8;X2:21][P;X4:18]([#8;A-:19])(=[O;X1:20])[#8;X2:17][#6;A;X4:16]1[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;H1X4:5]1[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34]"
			},
			// [M-H]-C6H10O5 (-162.05282)
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;X1-])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:19][P;X4:18](=[O;X1:20])([#8;X2:17][#6;A;X4:16]1[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;X4:5]1([H])[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34])[#8;X2:21][#6;A;X4:22]([H:40])([H:39])[#6;A;X4:23]([H])([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])[#6;A;X4:24]([H])([H])[#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28]>>[H][#6;A;X4:5]1([H])[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34].[H][#6;A;X4:24]([H])([#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28])[#6;A;X4:23]([H])([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])[#6;A;X4:22]([H:40])([H:39])[#8;X2:21][P;X4:18]([#8;A-:19])(=[O;X1:20])[#8;X2:17][#6;A;X4:16]1[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X1-:6]"
			},
			// [M-H]-sn1
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;X2][#6;A;X4]1([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3]([#8;X2]-[#6]([#6,#1;A])=[O;X1])=[#6;A;X3]([H])[H]",
					"[H][#8;A:19][P;X4:18](=[O;X1:20])([#8;X2:17][#6;A;X4:16]1[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;X4:5]1([H])[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34])[#8;X2:21][#6;A;X4:22]([H:39])([H:40])[#6;A;X4:23]([H])([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])[#6;A;X4:24]([H])([H])[#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28]>>[H][#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28].[H][#6;A;X3:24]([H])=[#6;A;X3:23]([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])[#6;A;X4:22]([H:39])([H:40])[#8;X2:21][P;X4:18]([#8;A-:19])(=[O;X1:20])[#8;X2:17][#6;A;X4:16]1[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;X4:5]1([H])[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34]"
			},
			// [M-H]-sn2
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;X2][#6;A;X4]1([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3+]([H])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:19][P;X4:18](=[O;X1:20])([#8;X2:17][#6;A;X4:16]1[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;X4:5]1([H])[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34])[#8;X2:21][#6;A;X4:22]([H:39])([H:40])[#6;A;X4:23]([H])([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])[#6;A;X4:24]([H])([H])[#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28]>>[H][#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32].[H][#6;A;X3+:23]([#6;A;X4:24]([H])([H])[#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28])[#6;A;X4:22]([H:39])([H:40])[#8;X2:21][P;X4:18]([#8;A-:19])(=[O;X1:20])[#8;X2:17][#6;A;X4:16]1[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;X4:5]1([H])[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34]"
			},
			// [M-H]-C12H20O10 (-324.10564)
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][H])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:19][P;X4:18](=[O;X1:20])([#8;X2:21][#6;A;X4:22]([H:39])([H:40])[#6;A;X4:23]([H])([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])[#6;A;X4:24]([H])([H])[#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28])[#8;X2:17][#6;A;X4:16]1([H])[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;H1X4:5]1[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34]>>[H][#8;A:19][P;X4:18]([#8;X1-:17])(=[O;X1:20])[#8;X2:21][#6;A;X4:22]([H:39])([H:40])[#6;A;X4:23]([H])([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])[#6;A;X4:24]([H])([H])[#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28].[H][#6;A;X4:16]1([H])[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;H1X4:5]1[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34]"
			},
			// [M-H]-C12H20O10-sn1
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8][H])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3]([#8;X2]-[#6]([#6,#1;A])=[O;X1])=[#6;A;X3]([H])[H]",
					"[H][#8;A:19][P;X4:18](=[O;X1:20])([#8;X2:21][#6;A;X4:22]([H:39])([H:40])[#6;A;X4:23]([H])([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])[#6;A;X4:24]([H])([H])[#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28])[#8;X2:17][#6;A;X4:16]1([H:41])[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;H1X4:5]1[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34]>>[H][#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28].[H][#8;A:19][P;X4:18]([#8;X1-:17])(=[O;X1:20])[#8;X2:21][#6;A;X4:22]([H:39])([H:40])[#6;A;X3:23]([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])=[#6;A;X3:24]([H])[H].[H:41][#6;A;X4:16]1([H])[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;H1X4:5]1[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34]"
			},
			// [M-H]-C12H20O10-sn2
			new String[]{
					"[H][#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3+]([H])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:19][P;X4:18](=[O;X1:20])([#8;X2:21][#6;A;X4:22]([H:39])([H:40])[#6;A;X4:23]([H])([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])[#6;A;X4:24]([H])([H])[#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28])[#8;X2:17][#6;A;X4:16]1([H:41])[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;H1X4:5]1[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34]>>[H][#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32].[H][#8;A:19][P;X4:18]([#8;X1-:17])(=[O;X1:20])[#8;X2:21][#6;A;X4:22]([H:39])([H:40])[#6;A;X3+:23]([H])[#6;A;X4:24]([H])([H])[#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28].[H:41][#6;A;X4:16]1([H])[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;H1X4:5]1[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34]"
			},
			// sn2 FA
			new String[]{
					"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:19][P;X4:18](=[O;X1:20])([#8;X2:21][#6;A;X4:22]([H:39])([H:40])[#6;A;X4:23]([H])([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])[#6;A;X4:24]([H])([H])[#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28])[#8;X2:17][#6;A;X4:16]1([H:41])[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;H1X4:5]1[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34]>>[H][#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32].[H][#6;A;X3+:23]([#6;A;X4:24]([H])([H])[#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28])[#6;A;X4:22]([H:39])([H:40])[#8;X2:21][P;X4:18]([#8;A-:19])(=[O;X1:20])[#8;X2:17][#6;A;X4:16]1([H:41])[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;H1X4:5]1[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34]"
			},
			// sn1 FA
			new String[]{
					"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:19][P;X4:18](=[O;X1:20])([#8;X2:21][#6;A;X4:22]([H:39])([H:40])[#6;A;X4:23]([H])([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])[#6;A;X4:24]([H])([H])[#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28])[#8;X2:17][#6;A;X4:16]1([H:41])[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;H1X4:5]1[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34]>>[H][#8;X2:25]-[#6:26]([#6,#1;A:27])=[O;X1:28].[H][#8;A:19][P;X4:18](=[O;X1:20])([#8;X2:21][#6;A;X4:22]([H:39])([H:40])[#6;A;X3:23]([#8;X2:29]-[#6:30]([#6,#1;A:31])=[O;X1:32])=[#6;A;X3:24]([H])[H])[#8;X2:17][#6;A;X4:16]1([H:41])[#6;A;H1X4:14]([#8;A;H1X2:15])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:7]1[#8;X2:6][#6;A;H1X4:5]1[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]1[#8;A;H1X2:34]"
			}
		});
		
		
		fragmentationPatterns.put(ClassName.DIACYLATED_PHOSPHATIDYLINOSITOL_DIMANNOSIDES, new String[][]{
				// [M-H]-
				new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2]-[#6]([#6,#1;A])=[O;X1])[#8;X2]-[#6]([#6,#1;A])=[O;X1])[#8;X2][#6;A;X4]1([H])[#6;A;H1X4]([#8;A;X2][#6;A;H1X4]2[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;X2][#6;A;H1X4]1[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]",
					"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;H2X4:5][#6;A;H1X4:6]([#6;A;H2X4:7][#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11])[#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15])[#8;X2:16][#6;A;X4:17]1[#6;A;X4:37]([H])([#8;X2:38][#6;A;H1X4:39]2[#8:40][#6;A;H1X4:41]([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]2[#8;A;H1X2:49])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;X4:18]1([H])[#8;A;X2:19][#6;A;H1X4:20]1[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]1[#8;A;H1X2:30]>>[H][#6;A;X4:37]1([#8;X2:38][#6;A;H1X4:39]2[#8:40][#6;A;H1X4:41]([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]2[#8;A;H1X2:49])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;X4:18]([H])([#8;A;X2:19][#6;A;H1X4:20]2[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]2[#8;A;H1X2:30])[#6;A;X4:17]1[#8;X2:16][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:4][#6;A;H2X4:5][#6;A;H1X4:6]([#6;A;H2X4:7][#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11])[#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15]"
				},
				// [M-H]-C6H10O5 (-162.05282)
				new String[]{
					"[H][#8;X2][#6;A;X4]1([H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([H])([#8;A;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;X4]1[#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2]-[#6]([#6,#1;A])=[O;X1])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;H2X4:5][#6;A;H1X4:6]([#6;A;H2X4:7][#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11])[#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15])[#8;X2:16][#6;A;X4:17]1[#6;A;X4:18]([H])([#8;A;X2:19][#6;A;X4:20]2([H])[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]2[#8;A;H1X2:30])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;X4:37]1([H])[#8;X2:38][#6;A;X4:39]1([H])[#8:40][#6;A;X4:41]([H])([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]1[#8;A;H1X2:49]>>[H][#6;A;X4:39]1([H])[#8:40][#6;A;X4:41]([H])([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]1[#8;A;H1X2:49].[H][#8;X2:38][#6;A;X4:37]1([H])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;X4:18]([H])([#8;A;X2:19][#6;A;X4:20]2([H])[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]2[#8;A;H1X2:30])[#6;A;X4:17]1[#8;X2:16][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:4][#6;A;H2X4:5][#6;A;H1X4:6]([#6;A;H2X4:7][#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11])[#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15]"
				},
				// [M-H]-sn1
				new String[]{
						"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([H])([#8;A;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;X2][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3](-[#8;X2]-[#6]([#6,#1;A])=[O;X1])=[#6;A;X3](-[H])[H]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:16][#6;A;X4:17]1[#6;A;X4:18]([H])([#8;A;X2:19][#6;A;X4:20]2([H])[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]2[#8;A;H1X2:30])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;X4:37]1([H])[#8;X2:38][#6;A;X4:39]1([H])[#8:40][#6;A;X4:41]([H])([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]1[#8;A;H1X2:49])[#8;X2:4][#6;A;X4:5]([H])([H])[#6;A;X4:6]([H])([#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15])[#6;A;X4:7]([H])([H])[#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11]>>[H][#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11].[H]-[#6;A;X3:7]([H])=[#6;A;X3:6](/[#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15])[#6;A;X4:5]([H])([H])[#8;X2:4][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:16][#6;A;X4:17]1[#6;A;X4:18]([H])([#8;A;X2:19][#6;A;X4:20]2([H])[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]2[#8;A;H1X2:30])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;X4:37]1([H])[#8;X2:38][#6;A;X4:39]1([H])[#8:40][#6;A;X4:41]([H])([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]1[#8;A;H1X2:49]"
						
				},
				// [M-H]-sn2
				new String[]{
						"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([H])([#8;A;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;X2][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3+]([H])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:16][#6;A;X4:17]1[#6;A;X4:18]([H])([#8;A;X2:19][#6;A;X4:20]2([H])[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]2[#8;A;H1X2:30])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;X4:37]1([H])[#8;X2:38][#6;A;X4:39]1([H])[#8:40][#6;A;X4:41]([H])([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]1[#8;A;H1X2:49])[#8;X2:4][#6;A;X4:5]([H])([H])[#6;A;X4:6]([H])([#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15])[#6;A;X4:7]([H])([H])[#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11]>>[H][#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15].[H][#6;A;X3+:6]([#6;A;X4:7]([H])([H])[#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11])[#6;A;X4:5]([H])([H])[#8;X2:4][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:16][#6;A;X4:17]1[#6;A;X4:18]([H])([#8;A;X2:19][#6;A;X4:20]2([H])[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]2[#8;A;H1X2:30])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;X4:37]1([H])[#8;X2:38][#6;A;X4:39]1([H])[#8:40][#6;A;X4:41]([H])([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]1[#8;A;H1X2:49]"
				},			
				// [M-H]-sn1-sn2
				new String[]{
						"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([H])([#8;A;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;X2][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X2+]=[#6;A;X3]([H])[H]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:16][#6;A;X4:17]1[#6;A;X4:18]([H])([#8;A;X2:19][#6;A;X4:20]2([H])[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]2[#8;A;H1X2:30])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;X4:37]1([H])[#8;X2:38][#6;A;X4:39]1([H])[#8:40][#6;A;X4:41]([H])([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]1[#8;A;H1X2:49])[#8;X2:4][#6;A;X4:5]([H])([H])[#6;A;X4:6]([H])([#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15])[#6;A;X4:7]([H])([H])[#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11]>>[H][#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15].[H][#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11].[H][#6;A;X3:7]([H])=[#6;A;X2+:6][#6;A;X4:5]([H])([H])[#8;X2:4][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:16][#6;A;X4:17]1[#6;A;X4:18]([H])([#8;A;X2:19][#6;A;X4:20]2([H])[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]2[#8;A;H1X2:30])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;X4:37]1([H])[#8;X2:38][#6;A;X4:39]1([H])[#8:40][#6;A;X4:41]([H])([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]1[#8;A;H1X2:49]"
						
				},
				// sn2 FA
				new String[]{
						"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:16][#6;A;X4:17]1[#6;A;X4:18]([H])([#8;A;X2:19][#6;A;X4:20]2([H])[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]2[#8;A;H1X2:30])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;X4:37]1([H])[#8;X2:38][#6;A;X4:39]1([H])[#8:40][#6;A;X4:41]([H])([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]1[#8;A;H1X2:49])[#8;X2:4][#6;A;X4:5]([H])([H])[#6;A;X4:6]([H])([#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15])[#6;A;X4:7]([H])([H])[#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11]>>[H][#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15].[H][#6;A;X3+:6]([#6;A;X4:7]([H])([H])[#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11])[#6;A;X4:5]([H])([H])[#8;X2:4][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:16][#6;A;X4:17]1[#6;A;X4:18]([H])([#8;A;X2:19][#6;A;X4:20]2([H])[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]2[#8;A;H1X2:30])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;X4:37]1([H])[#8;X2:38][#6;A;X4:39]1([H])[#8:40][#6;A;X4:41]([H])([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]1[#8;A;H1X2:49]"
				},
				
				// sn1 FA
				new String[]{
						"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:16][#6;A;X4:17]1[#6;A;X4:18]([H])([#8;A;X2:19][#6;A;X4:20]2([H])[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]2[#8;A;H1X2:30])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;X4:37]1([H])[#8;X2:38][#6;A;X4:39]1([H])[#8:40][#6;A;X4:41]([H])([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]1[#8;A;H1X2:49])[#8;X2:4][#6;A;X4:5]([H])([H])[#6;A;X4:6]([H])([#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15])[#6;A;X4:7]([H])([H])[#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11]>>[H][#8;X2:8]-[#6:9]([#6,#1;A:10])=[O;X1:11].[H]-[#6;A;X3:7]([H])=[#6;A;X3:6](/[#8;X2:12]-[#6:13]([#6,#1;A:14])=[O;X1:15])[#6;A;X4:5]([H])([H])[#8;X2:4][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:16][#6;A;X4:17]1[#6;A;X4:18]([H])([#8;A;X2:19][#6;A;X4:20]2([H])[#8:21][#6;A;H1X4:22]([#6;A;H2X4:23][#8;A;H1X2:24])[#6;A;H1X4:25]([#8;A;H1X2:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]2[#8;A;H1X2:30])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:33]([#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;X4:37]1([H])[#8;X2:38][#6;A;X4:39]1([H])[#8:40][#6;A;X4:41]([H])([#6;A;H2X4:42][#8;A;H1X2:43])[#6;A;H1X4:44]([#8;A;H1X2:45])[#6;A;H1X4:46]([#8;A;H1X2:47])[#6;A;H1X4:48]1[#8;A;H1X2:49]"						
				}
//				"[#8;A;H1X2][#6;A;H2X4][#6;A;H1X4]1[#8][#6;A;H1X4]([#8;X2][#6;A;H1X4]2[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;X2][#6;A;H1X4]3[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]3[#8;A;H1X2])[#6;A;X4]2[#8;X2][P;X4]([#8;A;X2H1,X1-])(=[O;X1])[#8;X2][#6;A;H2X4][#6;A;H1X4]([#6;A;H2X4][#8;X2:1]-[#6:2]([#6,#1;A:3])=[O;X1:4])[#8;X2:5]-[#6:6]([#6,#1;A:7])=[O;X1:8])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]>>[#8;X2:1]-[#6:2]([#6,#1;A:3])=[O;X1:4].[#8;X2:5]-[#6:6]([#6,#1;A:7])=[O;X1:8]"
		});
		
		// Ac3PIM2 45:0; [M-H]-; Ac3PIM2(14:0/15:0/16:0)		
		fragmentationPatterns.put(ClassName.TRIACYLATED_PHOSPHATIDYLINOSITOL_DIMANNOSIDES, new String[][]{
				// [M-H]-
				new String[]{
						"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;H1X4]([#8;A;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;X4]([H])([H])[#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;X2][#6;A;X4]1([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
						"[H][#8;A:33][P;X4:32](=[O;X1:34])([#8;X2:31][#6;A;X4:30]1[#6;A;H1X4:14]([#8;A;X2:15][#6;A;X4:16]2([H])[#8:17][#6;A;H1X4:18]([#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:28]2[#8;A;H1X2:29])[#6;A;X4:19]([H])([H])[#8;A;X2:20][#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:7]1([H])[#8;X2:6][#6;A;X4:5]1([H])[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:51]([#8;A;H1X2:52])[#6;A;H1X4:49]([#8;A;H1X2:50])[#6;A;H1X4:47]1[#8;A;H1X2:48])[#8;X2:35][#6;A;X4:36]([H])([H])[#6;A;X4:37]([H])([#8;X2:43]-[#6:44]([#6,#1;A:45])=[O;X1:46])[#6;A;X4:38]([H])([H])[#8;X2:39]-[#6:40]([#6,#1;A:41])=[O;X1:42]>>[H][#6;A;X4:19]([H])([#8;A;X2:20][#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;H1X4:18]1[#8:17][#6;A;X4:16]([H])([#8;A;X2:15][#6;A;H1X4:14]2[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]3([H])[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:51]([#8;A;H1X2:52])[#6;A;H1X4:49]([#8;A;H1X2:50])[#6;A;H1X4:47]3[#8;A;H1X2:48])[#6;A;X4:30]2[#8;X2:31][P;X4:32]([#8;A-:33])(=[O;X1:34])[#8;X2:35][#6;A;X4:36]([H])([H])[#6;A;X4:37]([H])([#8;X2:43]-[#6:44]([#6,#1;A:45])=[O;X1:46])[#6;A;X4:38]([H])([H])[#8;X2:39]-[#6:40]([#6,#1;A:41])=[O;X1:42])[#6;A;H1X4:28]([#8;A;H1X2:29])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]1[#8;A;H1X2:25]"						
				},
				// [M-H]-C6H10O5 (-162.05282)
				new String[]{
						"[H][#8;X2][#6;A;X4]1([H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;X4]([H])([H])[#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;X4]1[#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
						"[H][#8;A:33][P;X4:32](=[O;X1:34])([#8;X2:31][#6;A;X4:30]1[#6;A;H1X4:14]([#8;A;X2:15][#6;A;X4:16]2([H])[#8:17][#6;A;H1X4:18]([#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:28]2[#8;A;H1X2:29])[#6;A;X4:19]([H])([H])[#8;A;X2:20][#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:7]1([H])[#8;X2:6][#6;A;X4:5]1([H])[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:51]([#8;A;H1X2:52])[#6;A;H1X4:49]([#8;A;H1X2:50])[#6;A;H1X4:47]1[#8;A;H1X2:48])[#8;X2:35][#6;A;X4:36]([H])([H])[#6;A;X4:37]([H])([#8;X2:43]-[#6:44]([#6,#1;A:45])=[O;X1:46])[#6;A;X4:38]([H])([H])[#8;X2:39]-[#6:40]([#6,#1;A:41])=[O;X1:42]>>[H][#6;A;X4:5]1([H])[#8:4][#6;A;H1X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:51]([#8;A;H1X2:52])[#6;A;H1X4:49]([#8;A;H1X2:50])[#6;A;H1X4:47]1[#8;A;H1X2:48].[H][#8;X2:6][#6;A;X4:7]1([H])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:10]([#8;A;H1X2:11])[#6;A;H1X4:12]([#8;A;H1X2:13])[#6;A;H1X4:14]([#8;A;X2:15][#6;A;X4:16]2([H])[#8:17][#6;A;H1X4:18]([#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:28]2[#8;A;H1X2:29])[#6;A;X4:19]([H])([H])[#8;A;X2:20][#6:21]([#6,#1;A:22])=[O;X1:23])[#6;A;X4:30]1[#8;X2:31][P;X4:32]([#8;A-:33])(=[O;X1:34])[#8;X2:35][#6;A;X4:36]([H])([H])[#6;A;X4:37]([H])([#8;X2:43]-[#6:44]([#6,#1;A:45])=[O;X1:46])[#6;A;X4:38]([H])([H])[#8;X2:39]-[#6:40]([#6,#1;A:41])=[O;X1:42]"
				},
				// [M-H]-sn1+H20
				new String[]{
						"[H][#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;X4]1[#6;A;X4]([#8;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;H1X4]([#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#6;A;X4]([H])([H])[#8;A;X2][#6]([#6,#1;A])=[O;X1]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;H1X4:10]([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H][#8]-[#6:50]([#6,#1;A:51])=[O;X1:52].[H][#8;X2:49][#6;A;X4:48]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:42]([H])([H])[#8;X2:41][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;H1X4:10]([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21]"
				},

				// [M-H]-sn2+H20
				new String[]{
						"[H][#8;X2][#6;A;X4]([H])([#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;X4]1[#6;A;X4]([#8;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;H1X4]([#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#6;A;X4]([H])([H])[#8;A;X2][#6]([#6,#1;A])=[O;X1]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;H1X4:10]([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H][#8]-[#6:45]([#6,#1;A:46])=[O;X1:47].[H][#8;X2:44][#6;A;X4:43]([H])([#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52])[#6;A;X4:42]([H])([H])[#8;X2:41][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;H1X4:10]([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21]"
				},			
				// [M-H]-sn1
				new String[]{
						"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([#8;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;H1X4]([#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#6;A;X4]([H])([H])[#8;A;X2][#6]([#6,#1;A])=[O;X1])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3]([#8;X2]-[#6]([#6,#1;A])=[O;X1])=[#6;A;X3]([H])[H]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;H1X4:10]([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H][#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52].[H][#6;A;X3:48]([H])=[#6;A;X3:43]([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:42]([H])([H])[#8;X2:41][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;H1X4:10]([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21]"
				},				
				// [M-H]-sn3+H20
				new String[]{
						"[H][#8][#6;A;X4]([H])([H])[#6;A;H1X4]1[#8][#6;A;X4]([H])([#8;A;X2][#6;A;X4]2([H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([#8;X2][#6;A;X4]3([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]3[#8;A;H1X2])[#6;A;X4]2[#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;H1X4:10]([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H][#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21].[H][#8][#6;A;X4:17]([H])([H])[#6;A;H1X4:10]1[#8:9][#6;A;X4:8]([H])([#8;A;X2:7][#6;A;X4:6]2([H])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]3([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]3[#8;A;H1X2:40])[#6;A;X4:5]2[#8;X2:4][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:11]1[#8;A;H1X2:12]"
				},	
				// [M-H]-sn2
				new String[]{
						"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([#8;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;H1X4]([#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#6;A;X4]([H])([H])[#8;A;X2][#6]([#6,#1;A])=[O;X1])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3]([H])=[#6;A;X3]([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;H1X4:10]([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H][#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47].[H][#6;A;X3:48]([#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52])=[#6;A;X3:43]([H])[#6;A;X4:42]([H])([H])[#8;X2:41][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;H1X4:10]([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21]"
//						"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([#8;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;H1X4]([#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#6;A;X4]([H])([H])[#8;A;X2][#6]([#6,#1;A])=[O;X1])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3+]([H])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
//						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;H1X4:10]([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H][#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47].[H][#6;A;X3+:43]([#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52])[#6;A;X4:42]([H])([H])[#8;X2:41][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;H1X4:10]([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21]"
				},	
				// [M-H]-sn3
				new String[]{
						"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([#8;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;X3](=[#6;A;X3]([H])[H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;X4:10]([H])([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H][#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21].[H][#6;A;X3:17]([H])=[#6;A;X3:10]1[#8:9][#6;A;X4:8]([H])([#8;A;X2:7][#6;A;X4:6]2([H])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]3([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]3[#8;A;H1X2:40])[#6;A;X4:5]2[#8;X2:4][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:11]1[#8;A;H1X2:12]"
//						"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([#8;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#6;A;X3+]([H])[H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
//						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;X4:10]([H])([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H][#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21].[H][#6;A;X3+:17]([H])[#6;A;X4:10]1([H])[#8:9][#6;A;X4:8]([H])([#8;A;X2:7][#6;A;X4:6]2([H])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]3([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]3[#8;A;H1X2:40])[#6;A;X4:5]2[#8;X2:4][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:11]1[#8;A;H1X2:12]"
				},	
				// M-sn1-sn2
				new String[]{
						"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([#8;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#6;A;X4]([H])([H])[#8;A;X2][#6]([#6,#1;A])=[O;X1])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3](-[H])=[#6;A;X2+]/[H]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;X4:10]([H])([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H][#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52].[H][#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47].[H]-[#6;A;X2+:48]=[#6;A;X3:43](-[H])[#6;A;X4:42]([H])([H])[#8;X2:41][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;X4:10]([H])([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21]"
				},
				// M-sn1-sn2-C3H5O (-56.02621)
				new String[]{
						"[H][#6;A;X4]([H])([#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;X4]1([H])[#8][#6;A;X4]([H])([#8;A;X2][#6;A;X4]2([H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([#8;X2][#6;A;X4]3([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]3[#8;A;H1X2])[#6;A;X4]2[#8;X2]-[#15;X3+]([#8;A-])=[O;X1])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;X4:10]([H])([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H][#6;A;X4:42]([H])([#8;X2:41])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52].[H][#6;A;X4:17]([H])([#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:10]1([H])[#8:9][#6;A;X4:8]([H])([#8;A;X2:7][#6;A;X4:6]2([H])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]3([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]3[#8;A;H1X2:40])[#6;A;X4:5]2[#8;X2:4]-[#15;X3+:2]([#8;A-:1])=[O;X1:3])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:11]1[#8;A;H1X2:12]"
//						"[H][#8;X2][P;X4](=[O;X1])([#8;A][H])[#8;X2][#6;A;X4]1[#6;A;X4]([#8;X2][#6;A;X4]2([H])[#8][#6;A;H1X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#6;A;X4]([H])([H])[#8;A;X2][#6]([#6,#1;A])=[O;X1]",
//						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;X4:10]([H])([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H]-[#6;A;X3:42]([H])=[#6;A;X3:43](/[#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52].[H][#6;A;X4:17]([H])([#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#6;A;X4:10]1([H])[#8:9][#6;A;X4:8]([H])([#8;A;X2:7][#6;A;X4:6]2([H])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]3([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]3[#8;A;H1X2:40])[#6;A;X4:5]2[#8;X2:4][P;X4:2]([#8;X1-:41])([#8;A-:1])=[O;X1:3])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:11]1[#8;A;H1X2:12]"
				},
				// sn3 FA
				new String[]{
						"[H][#8;A;X2][#6]([#6,#1;A])=[O;X1]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;X4:10]([H])([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H][#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21].[H][#6;A;X3+:17]([H])[#6;A;X4:10]1([H])[#8:9][#6;A;X4:8]([H])([#8;A;X2:7][#6;A;X4:6]2([H])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]3([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]3[#8;A;H1X2:40])[#6;A;X4:5]2[#8;X2:4][P;X4:2]([#8;A-:1])(=[O;X1:3])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:11]1[#8;A;H1X2:12]"
				},
				// sn2 FA
				new String[]{
						"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;X4:10]([H])([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H][#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47].[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;X4:10]([H])([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X3+:43]([H])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]"
				},
				
				// sn1 FA
				new String[]{
						"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
						"[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;X4:10]([H])([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X4:43]([H])([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])[#6;A;X4:48]([H])([H])[#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52]>>[H][#8;X2:49]-[#6:50]([#6,#1;A:51])=[O;X1:52].[H][#8;A:1][P;X4:2](=[O;X1:3])([#8;X2:4][#6;A;X4:5]1[#6;A;X4:28]([#8;X2:29][#6;A;X4:30]2([H])[#8:31][#6;A;H1X4:32]([#6;A;H2X4:33][#8;A;H1X2:34])[#6;A;H1X4:35]([#8;A;H1X2:36])[#6;A;H1X4:37]([#8;A;H1X2:38])[#6;A;H1X4:39]2[#8;A;H1X2:40])[#6;A;H1X4:26]([#8;A;H1X2:27])[#6;A;H1X4:24]([#8;A;H1X2:25])[#6;A;H1X4:22]([#8;A;H1X2:23])[#6;A;X4:6]1([H])[#8;A;X2:7][#6;A;X4:8]1([H])[#8:9][#6;A;X4:10]([H])([#6;A;H1X4:11]([#8;A;H1X2:12])[#6;A;H1X4:13]([#8;A;H1X2:14])[#6;A;H1X4:15]1[#8;A;H1X2:16])[#6;A;X4:17]([H])([H])[#8;A;X2:18][#6:19]([#6,#1;A:20])=[O;X1:21])[#8;X2:41][#6;A;X4:42]([H])([H])[#6;A;X3:43]([#8;X2:44]-[#6:45]([#6,#1;A:46])=[O;X1:47])=[#6;A;X3:48]([H])[H]"
				}
		});
		
		
		fragmentationPatterns.put(ClassName.TETRACYLATED_PHOSPHATIDYLINOSITOL_DIMANNOSIDES, new String[][]{
			// [M-H]-	
			new String[]{
						"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([H])([#8;X2][#6;A;X4]2([H])[#8][#6;A;X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#6;A;H2X4][#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
						"[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:10]([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H2X4:22][#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45]>>[H][#6;A;X4:41]([H])([#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:39]([H])([H])[#8;X2:38][P;X4:35]([#8;A-:36])(=[O;X1:37])[#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:10]([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H2X4:22][#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32]"
				},
			// [M-H]-sn1
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([H])([#8;X2][#6;A;X4]2([H])[#8][#6;A;X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#6;A;H2X4][#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3]([#8;X2]-[#6]([#6,#1;A])=[O;X1])=[#6;A;X3]([H])[H]",
					"[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:10]([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H2X4:22][#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45]>>[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45].[H][#6;A;X3:41]([H])=[#6;A;X3:40]([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:39]([H])([H])[#8;X2:38][P;X4:35]([#8;A-:36])(=[O;X1:37])[#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;H1X4:10]([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H2X4:22][#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32]"
			},
			// [M-H]-sn2
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([H])([#8;X2][#6;A;X4]2([H])[#8][#6;A;X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([H])([#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#6;A;H2X4][#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3]([H])=[#6;A;X3]([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H2X4:22][#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45]>>[H][#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49].[H][#6;A;X3:41]([#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45])=[#6;A;X3:40]([H])[#6;A;X4:39]([H])([H])[#8;X2:38][P;X4:35]([#8;A-:36])(=[O;X1:37])[#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H2X4:22][#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32]"
			},			
			// [M-H]-sn3
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([H])([#8;X2][#6;A;X4]2([H])[#8][#6;A;X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([H])([#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;X3](=[#6;A;X3]([H])[H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45]>>[H][#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26].[H][#6;A;X3:22]([H])=[#6;A;X3:21]1[#8:20][#6;A;X4:19]([H])([#8;A;X2:18][#6;A;X4:17]2([H])[#6;A;H1X4:15]([#8;A;H1X2:16])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]3([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]3[#8;A;H1X2:51])[#6;A;X4:33]2[#8;X2:34][P;X4:35]([#8;A-:36])(=[O;X1:37])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:27]1[#8;A;H1X2:28]"
			},
			// [M-H]-sn4
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([H])([#8;X2][#6;A;X4]2([H])[#8][#6;A;X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X3]([H])=[#6;A;X3]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#6;A;X4]([H])([H])[#8;A;X2][#6]([#6,#1;A])=[O;X1])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45]>>[H][#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14].[H][#6;A;X3:10]1=[#6;A;X3:15]([#8;A;H1X2:16])[#6;A;X4:17]([H])([#8;A;X2:18][#6;A;X4:19]2([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]2[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#6;A;X4:33]([#8;X2:34][P;X4:35]([#8;A-:36])(=[O;X1:37])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45])[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]1[#8;A;H1X2:9]"
			},
			// [M-H]-sn1-sn2
			new String[]{
					"[H]-[#6;A;X2+]=[#6;A;X3]1/[#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]2[#6;A;X4]([H])([#8;X2][#6;A;X4]3([H])[#8][#6;A;X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]3[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([H])([#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([#8;A;H1X2])[#6;A;X4]2([H])[#8;A;X2][#6;A;X4]2([H])[#8][#6;A;X4]([H])([#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;X4]([H])([H])[#8;A;X2][#6]([#6,#1;A])=[O;X1])[#8;X2][#6;A;X4]1([H])[H]",
					"[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45]>>[H][#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45].[H][#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49].[H]-[#6;A;X2+:41]=[#6;A;X3:40]1/[#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]2[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]3([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]3[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]2([H])[#8;A;X2:18][#6;A;X4:19]2([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]2[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#8;X2:38][#6;A;X4:39]1([H])[H]"
//					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([H])([#8;X2][#6;A;X4]2([H])[#8][#6;A;X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([H])([#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;X4]([H])([#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#6;A;X4]([H])([H])[#8;A;X2][#6]([#6,#1;A])=[O;X1])[#8;X2][#6;A;X4]([H])([H])[#6;A;X3]([H])=[#6;A;X3]([H])[H]",
//					"[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45]>>[H][#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45].[H][#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49].[H][#6;A;X3:41]([H])=[#6;A;X3:40]([H])[#6;A;X4:39]([H])([H])[#8;X2:38][P;X4:35]([#8;A-:36])(=[O;X1:37])[#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26]"
			},
			// [M-H]-sn1-sn2-C3H5O
			new String[]{
					"[H][#6;A;X4]([H])([#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;X4]1([H])[#8][#6;A;X4]([H])([#8;A;X2][#6;A;X4]2([H])[#6;A;X4]([#8;X2]-[#15;X3+]([#8;A-])=[O;X1])[#6;A;X4]([H])([#8;X2][#6;A;X4]3([H])[#8][#6;A;X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]3[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X4]([H])([#8;A;X2][#6]([#6,#1;A])=[O;X1])[#6;A;X4]2([H])[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]",
					"[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45]>>[H][#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45].[H][#6;A;X4:22]([H])([#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#6;A;X4:21]1([H])[#8:20][#6;A;X4:19]([H])([#8;A;X2:18][#6;A;X4:17]2([H])[#6;A;X4:33]([#8;X2:34]-[#15;X3+:35]([#8;A-:36])=[O;X1:37])[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]3([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]3[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]2([H])[#8;A;H1X2:16])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:27]1[#8;A;H1X2:28]"
			},
			// [M-H]-sn3-sn4
			new String[]{
					"[H][#8;A][P;X4](=[O;X1])([#8;X2][#6;A;X4]1[#6;A;X4]([H])([#8;X2][#6;A;X4]2([H])[#8][#6;A;X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X3]([H])=[#6;A;X3]([#8;A;H1X2])[#6;A;X4]1([H])[#8;A;X2][#6;A;X4]1([H])[#8][#6;A;X3](=[#6;A;X3]([H])[H])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2])[#8;X2][#6;A;X4]([H])([H])[#6;A;X4]([H])([#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([H])[#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45]>>[H][#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26].[H][#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14].[H][#6;A;X3:22]([H])=[#6;A;X3:21]1[#8:20][#6;A;X4:19]([H])([#8;A;X2:18][#6;A;X4:17]2([H])[#6;A;X4:33]([#8;X2:34][P;X4:35]([#8;A-:36])(=[O;X1:37])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45])[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]3([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]3[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X3:10]([H])=[#6;A;X3:15]2[#8;A;H1X2:16])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:27]1[#8;A;H1X2:28]"
			},
			// [M-H]-sn3-sn4-C3H5O
			new String[]{
					"[H][#6;A;X3]([H])=[#6;A;X3]1[#8][#6;A;X4]([H])([#8;A;X2][#6;A;X4]2([H])[#6;A;X4]([#8;X2][P;X4](=[O;X1])([#8;A][#8;X2]-[#6]([#6,#1;A])=[O;X1])[#8;X2]-[#6]([#6,#1;A])=[O;X1])[#6;A;X4]([H])([#8;X2][#6;A;X4]3([H])[#8][#6;A;X4]([#6;A;H2X4][#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]3[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;X3]([H])=[#6;A;X3]2[#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]([#8;A;H1X2])[#6;A;H1X4]1[#8;A;H1X2]",
					"[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45]>>[H][#6;A;X4:39]([H])([#8;X2:38])[#6;A;X4:40]([H])([#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#6;A;X4:41]([H])([H])[#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14].[H][#6;A;X3:22]([H])=[#6;A;X3:21]1[#8:20][#6;A;X4:19]([H])([#8;A;X2:18][#6;A;X4:17]2([H])[#6;A;X4:33]([#8;X2:34][P;X4:35](=[O;X1:37])([#8;A:36][#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45])[#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]3([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]3[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X3:10]([H])=[#6;A;X3:15]2[#8;A;H1X2:16])[#6;A;H1X4:31]([#8;A;H1X2:32])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:27]1[#8;A;H1X2:28]"
			},
			// sn2 FA
			new String[]{
					"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45]>>[H][#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49].[H][#6;A;X3+:40]([#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45])[#6;A;X4:39]([H])([H])[#8;X2:38][P;X4:35]([#8;A-:36])(=[O;X1:37])[#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26]"
//					"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
//					"[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45]>>[H][#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45].[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X3:40]([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])=[#6;A;X3:41]([H])[H]"
			},
			// sn1 FA
			new String[]{
					"[H][#8;X2]-[#6]([#6,#1;A])=[O;X1]",
					"[H][#8;A:36][P;X4:35](=[O;X1:37])([#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26])[#8;X2:38][#6;A;X4:39]([H])([H])[#6;A;X4:40]([H])([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:41]([H])([H])[#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45]>>[H][#8;X2:42]-[#6:43]([#6,#1;A:44])=[O;X1:45].[H][#6;A;X3:41]([H])=[#6;A;X3:40]([#8;X2:46]-[#6:47]([#6,#1;A:48])=[O;X1:49])[#6;A;X4:39]([H])([H])[#8;X2:38][P;X4:35]([#8;A-:36])(=[O;X1:37])[#8;X2:34][#6;A;X4:33]1[#6;A;X4:7]([H])([#8;X2:6][#6;A;X4:5]2([H])[#8:4][#6;A;X4:3]([#6;A;H2X4:2][#8;A;H1X2:1])[#6;A;H1X4:54]([#8;A;H1X2:55])[#6;A;H1X4:52]([#8;A;H1X2:53])[#6;A;H1X4:50]2[#8;A;H1X2:51])[#6;A;H1X4:8]([#8;A;H1X2:9])[#6;A;X4:10]([H])([#8;A;X2:11][#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:15]([H])([#8;A;H1X2:16])[#6;A;X4:17]1([H])[#8;A;X2:18][#6;A;X4:19]1([H])[#8:20][#6;A;X4:21]([H])([#6;A;H1X4:27]([#8;A;H1X2:28])[#6;A;H1X4:29]([#8;A;H1X2:30])[#6;A;H1X4:31]1[#8;A;H1X2:32])[#6;A;X4:22]([H])([H])[#8;A;X2:23][#6:24]([#6,#1;A:25])=[O;X1:26]"
			}
		});
		
//		fragmentationPatterns.put(ClassName.DIPHOSPHORYLATED_HEXAACYL_LIPID_A, new String[]{
//				
//		});
		

		
//		// R1 (Chem. Rev. 2001, 101, 479âˆ’526)
//		fragmentationPatterns.put(ClassName._1_LYSOPHOSPHATIDYLCHOLINES, new String[]{
//				"[#6;A;H3X4:3][N;X4+:4]([#6;A;H3X4:2])([#6;A;H3X4:1])!@-[#6;A;H2X4:5]!@-[#6;A;H2X4:6]!@-[#8;X2:7][P;X4:10]([#8;A;X2H1,X1-:9])(=[O;X1:8])[#8;X2:11]!@-[#6;A;H2X4:12]!@-[#6;A;H1X4:19]([#8;A;h1X2:18])!@-[#6;A;H2X4:17]!@-[#8:16]!@-[#6:15]([#6,#1;A:14])!@=[O;X1:13]>>[#6;A;H3X4:3][N;X4+:4]([#6;A;H3X4:2])([#6;A;H3X4:1])!@-[#6;A;H2X4:5]!@-[#6;A;H2X4:6]!@-[#8;XH12:7].[#8;A;X2H1,X1-:9][P;X4:10]1(=[O;X1:8])[#8;X2:11]!@-[#6;A;H2X4:12]!@-[#6;A;H1X4:19](!@-[#6;A;H2X4:17]!@-[#8:16]!@-[#6:15]([#6,#1;A:14])!@=[O;X1:13])[#8;h0v2X2:18]1"		
//		});
//		
//		// R1 (Chem. Rev. 2001, 101, 479âˆ’526)
//		fragmentationPatterns.put(ClassName._2_LYSOPHOSPHATIDYLCHOLINES, new String[]{
//				// with the NC3H9 at m/z 59
//				// "[H:1][C:2](!@-[#6;A;H2X4:3]!@-[#8;A;H1X2:4])(!@-[#6;A;H2X4:5]!@-[#8;X2:6][P;X4:7]([#8;A;X2H1,X1-:8])(=[O;X1:9])[#8;X2:10]!@-[#6;A;H2X4:11]!@-[#6;A;H2X4:12]!@-[N+:13]([#6;A;H3X4:16])([#6;A;H3X4:15])[#6;A;H3X4:14])[#8:17]-[#6:18]([#6,#1;A:19])!@=[O;X1:20]>>[#6;A;H3X4:14][#7:13]([#6;A;H3X4:15])[#6;A;H3X4:16].[H:1][C:2](!@-[#6;A;H2X4:3]!@-[#8;A;X2:4])(!@-[#6;A;H2X4:5]!@-[#8;X2:6][P;X4:7]1(=[O;X1:9])[#8;X2:10]!@-[#6;A;H2X4:11]!@-[#6;A;H2X4:12][#8;A;X2H1,X1-:8]1)[#8:17]-[#6:18]([#6,#1;A:19])!@=[O;X1:20]",
//
//				// without that moiety because it is neutral
//				"[#6;A;H3X4][N+]([#6;A;H3X4])([#6;A;H3X4])!@-[#6;A;H2X4:5]!@-[#6;A;H2X4:6]!@-[#8;X2:7][P;X4:10]([#8;A;X2H1,X1-:9])(=[O;X1:8])[#8;X2:11]!@-[#6;A;H2X4:12]!@-[#6;X4H1:15](!@-[#6;A;H2X4:14]!@-[#8;A;H1X2:13])-[#8:4]-[#6:3]([#6,#1;A:2])!@=[O;X1:1]>>[#8;A;H1X2:13]!@-[#6;A;H2X4:14]!@-[#6;X4H1:15](!@-[#6;A;H2X4:12]!@-[#8;X2:11][P;X4:10]1(=[O;X1:8])[#8;A;X2+0:9][#6;A;H2X4:5]!@-[#6;A;H2X4:6]!@-[#8;X2:7]1)-[#8:4]-[#6:3]([#6,#1;A:2])!@=[O;X1:1]",
//				"[H]C(!@-[#6;A;H2X4]!@-[#8;A;H1X2])(!@-[#6;A;H2X4]!@-[#8;X2:7][P;X4:6]([#8;A;X2H1,X1-:5])(=[O;X1:4])[#8;X2:3]!@-[#6;A;H2X4:2]!@-[#6;A;H2X4:1]!@-[N+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#8]-[#6]([#6,#1;A])!@=[O;X1]>>[#8;X2:7][P;X4:6]1(=[O;X1:4])[#8;A;X2:5][#6;A;H2X4:1]!@-[#6;A;H2X4:2]!@-[#8;X2:3]1"
//		});
//
//		fragmentationPatterns.put(ClassName._1_LYSOPHOSPHATIDYLETHANOLAMINES, new String[]{">>",">>"});
//		fragmentationPatterns.put(ClassName._2_LYSOPHOSPHATIDYLETHANOLAMINES, new String[]{">>",">>"});
//		
//		// R1 (Chem. Rev. 2001, 101, 479âˆ’526)
//		fragmentationPatterns.put(ClassName.SPHINGOMYELINS, new String[]{
//				// [Cer+H]+
//				"[#6;A;H2X4:17][#6;A;H2X4:16][#6;R0:15](=[O:14])[#7;A;H1X3:13][#6;A;H1X4:12]([#6;A;H2X4:11][#8;R0]P([#8;X2H1,X1-])(=O)[#8][#6;A;H2X4][#6;A;H2X4][N+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#6;R0:10]([#8;A;X2H1,X1-:9])-[#6;H1X3R0:8]=[#6;H1X3R0:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;H2X4:1][#6;H2X4:24][#6;A;H2X4:18][#6;A;H2X4:19][#6;A;H2X4:20][#6;A;H2X4:21][#6;A;H2X4:22][#6;A;H3X4:23]>>[#6;A;H2X4:17][#6;A;H2X4:16][#6;R0:15](=[O:14])[#7;A;H1X3:13][#6;A;H1X4:12]([#6;A;H2X4+:11])[#6;R0:10]([#8;A;X2H1,X1-:9])-[#6;H1X3R0:8]=[#6;H1X3R0:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;H2X4:1][#6;H2X4:24][#6;A;H2X4:18][#6;A;H2X4:19][#6;A;H2X4:20][#6;A;H2X4:21][#6;A;H2X4:22][#6;A;H3X4:23]",
//				
//				// m/z 264. The second SMIRKS returns 2 fragments, one of which is charged. Because of the varying length of the 
//				//	of the fatty acyl moiety, I could not remove it from the right side.	
//				"[#6;A;H2X4:23][#6;A;H2X4:22][#6;R0:21](=[O:20])[#7;A;H1X3:19][#6;A;H1X4:18]([#6;A;H2X4:17][#8;R0]P([#8;X2H1,X1-])(=O)[#8][#6;A;H2X4][#6;A;H2X4][N+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#6;R0:16]([#8;A;X2H1,X1-])\\[#6;H1X3R0:15]=[#6;H1X3R0:14]\\[#6;A;H2X4:13][#6;A;H2X4:12][#6;A;H2X4:11][#6;A;H2X4:10][#6;A;H2X4:9][#6;A;H2X4:8][#6;H2X4:7][#6;A;H2X4:6][#6;A;H2X4:5][#6;A;H2X4:4][#6;A;H2X4:3][#6;A;H2X4:2][#6;A;H3X4:1]>>[#6;A;H2X4:23][#6;A;H2X4:22][#6;R0:21]=[O:20].[#6;A;H3X4:1][#6;A;H2X4:2][#6;A;H2X4:3][#6;A;H2X4:4][#6;A;H2X4:5][#6;A;H2X4:6][#6;H2X4:7][#6;A;H2X4:8][#6;A;H2X4:9][#6;A;H2X4:10][#6;A;H2X4:11][#6;A;H2X4:12][#6;A;H2X4:13]\\[#6;H1X3R0:14]=[#6;H1X3R0:15]\\[#6;R0:16]=[#6;A;X3:18]1/[#6;A;H2X4:17][#7;A;H2X3+:19]1",
//		
//				// m/z 280		
//				"[#6;A;H2X4:7][#6;A;H2X4:6][#6;R0:5](=[O:4])[#7;A;H1X3:3][#6;A;H1X4:2]([#6;A;H2X4:1][#8;R0]P([#8;X2H1,X1-])(=O)[#8][#6;A;H2X4][#6;A;H2X4][N+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#6;R0]([#8;A;X2H1,X1-])-[#6;H1X3R0]=[#6;H1X3R0][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H2X4][#6;A;H3X4]>>[#6;A;H2X4:7][#6;A;H2X4:6][#6;R0:5](=[O:4])[#7;A;X3+:3]1=[#6;AH1:2][#6;A;H2X4:1]1"
//				});
//		
//		// R1 (Chem. Rev. 2001, 101, 479âˆ’526) m/z 99
		fragmentationPatterns.put(ClassName.ACYL_CARNITINES, new String[][]{
			
			// C3H10N fragment		
			new String[]{
					"[H][N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4]",
					"[H][#6;A;X4:14]([H])([#6:13]([#8;A;X1-,X2H1:12])=[O;X1:11])[#6;A;X4:10]([H])([#8;X2:9]-[#6:8]([#6,#1;A:7])=[O;X1:6])[#6;A;X4:5]([H])([H])[N;X4+:4]([#6;A;H3X4:1])([#6;A;H3X4:2])[#6;A;H3X4:3]>>[H][N;X4+:4]([#6;A;H3X4:1])([#6;A;H3X4:2])[#6;A;H3X4:3].[H][#6;A;X3:5]([H])=[#6;A;X3:10]([#8;X2:9]-[#6:8]([#6,#1;A:7])=[O;X1:6])[#6;A;X4:14]([H])([H])[#6:13]([#8;A;X1-,X2H1:12])=[O;X1:11]"
			},
			// [M+H] - carnitine
			new String[]{
					"[#6]=C=[O;X1]",
					"[H][#6:1]-[#6:2](=[O;X1:3])-[#8;X2:4][#6;A;X4:5]([H])([#6;A;X4:6]([H])([H])[#6:7]([#8;A;X1-,X2H1:8])=[O;X1:9])[#6;A;X4:10]([H])([H])[N;X4+:11]([#6;A;H3X4:12])([#6;A;H3X4:13])[#6;A;H3X4:14]>>[#6:1]=[C:2]=[O;X1:3].[H][#8;X2:4][#6;A;X4:5]([H])([#6;A;X4:6]([H])([H])[#6:7]([#8;A;X1-,X2H1:8])=[O;X1:9])[#6;A;X4:10]([H])([H])[N;X4+:11]([#6;A;H3X4:12])([#6;A;H3X4:13])[#6;A;H3X4:14]"
			},
			
			// [M+h] - FA - N(CH3)3 - H2O
			new String[]{
					"[H][#8;X2]-[#6]1=[O;X2+][#6;A;X4]([H])([H])[#6;A;X3]([H])=[#6;A;X3]1[H]",
					"[H][#6:7]-[#6:8](=[O;X1:6])-[#8;X2:9][#6;A;X4:10]([H])([#6;A;X4:14]([H])([H])[#6:13](=[O;X1:11])-[#8;X2:12][H])[#6;A;X4:5]([H])([H])[N;X4+:4]([#6;A;H3X4:1])([#6;A;H3X4:2])[#6;A;H3X4:3]>>[H][N;X4+:4]([#6;A;H3X4:1])([#6;A;H3X4:2])[#6;A;H3X4:3].[H][#6:7]-[#6:8](=[O;X1:6])-[#8;X2:9][H].[H][#8;X2:12]-[#6:13]1=[O;X2+:11][#6;A;X4:5]([H])([H])[#6;A;X3:10]([H])=[#6;A;X3:14]1[H]"
//					"[H][#8;X2]-[#6]1=[O;X2+][#6;A;X4]([H])([H])[#6;A;X3]([H])=[#6;A;X3]1[H]",
//					"[H][#6:7]-[#6:8](=[O;X1:6])-[#8;X2:9][#6;A;X4:10]([H])([#6;A;X4:14]([H])([H])[#6:13](-[#8;X1-:12])=[O;X1:11])[#6;A;X4:5]([H])([H])[N;X4+:4]([#6;A;H3X4:3])([#6;A;H3X4:2])[#6;A;H3X4:1]>>[H][N;X4+:4]([#6;A;H3X4:3])([#6;A;H3X4:2])[#6;A;H3X4:1].[H][#6:7]-[#6:8](=[O;X1:6])-[#8;X2:9][H].[H][#8;X2:12]-[#6:13]1=[O;X2+:11][#6;A;X4:5]([H])([H])[#6;A;X3:10]([H])=[#6;A;X3:14]1[H]"
			},		
			
			// [M+H] - FA
			new String[]{
					"[H][#6;A;X3](=[#6;A;X3]([H])[#6;A;X4]([H])([H])[N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#6]([#8;A;X1-,X2H1])=[O;X1]",
					"[H][#6:7]-[#6:8](=[O;X1:6])-[#8;X2:9][#6;A;X4:10]([H])([#6;A;X4:14]([H])([H])[#6:13]([#8;A;X1-,X2H1:12])=[O;X1:11])[#6;A;X4:5]([H])([H])[N;X4+:4]([#6;A;H3X4:1])([#6;A;H3X4:2])[#6;A;H3X4:3]>>[H][#6:7]-[#6:8](=[O;X1:6])-[#8;X2:9][H].[H][#6;A;X3:14](=[#6;A;X3:10]([H])[#6;A;X4:5]([H])([H])[N;X4+:4]([#6;A;H3X4:3])([#6;A;H3X4:2])[#6;A;H3X4:1])[#6:13]([#8;A;X1-,X2H1:12])=[O;X1:11]"
			},
			
//			// Carnitine
//			new String[]{
//					"[H][#8;X2][#6;A;X4]([H])([#6;A;X4]([H])([H])[#6]([#8;A;X1-,X2H1])=[O;X1])[#6;A;X4]([H])([H])[N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4]",
//					"[H][#6:7]-[#6:8](=[O;X1:6])-[#8;X2:9][#6;A;X4:10]([H])([#6;A;X4:14]([H])([H])[#6:13]([#8;A;X1-,X2H1:12])=[O;X1:11])[#6;A;X4:5]([H])([H])[N;X4+:4]([#6;A;H3X4:1])([#6;A;H3X4:2])[#6;A;H3X4:3]>>[#6:7]=[C:8]=[O;X1:6].[H][#8;X2:9][#6;A;X4:10]([H])([#6;A;X4:14]([H])([H])[#6:13]([#8;A;X1-,X2H1:12])=[O;X1:11])[#6;A;X4:5]([H])([H])[N;X4+:4]([#6;A;H3X4:1])([#6;A;H3X4:2])[#6;A;H3X4:3]"
////					"[H]-[#6;A;X3](=[#6;A;X3](-[H])[#6;A;X4]([H])([H])[N;X4+]([#6;A;H3X4])([#6;A;H3X4])[#6;A;H3X4])[#6]([#8;A;X1-,X2H1])=[O;X1]",
////					"[H][#6;A;X4:14]([H])([#6:13]([#8;A;X1-,X2H1:12])=[O;X1:11])[#6;A;X4:10]([H])([#8;X2:9]-[#6:8]([#6,#1;A:7])=[O;X1:6])[#6;A;X4:5]([H])([H])[N;X4+:4]([#6;A;H3X4:1])([#6;A;H3X4:2])[#6;A;H3X4:3]>>[H][#8;X2:9]-[#6:8]([#6,#1;A:7])=[O;X1:6].[H]-[#6;A;X3:14](=[#6;A;X3:10](-[H])[#6;A;X4:5]([H])([H])[N;X4+:4]([#6;A;H3X4:1])([#6;A;H3X4:2])[#6;A;H3X4:3])[#6:13]([#8;A;X1-,X2H1:12])=[O;X1:11]"
//			},
			
//			// (+ CH2â€“CH=CHCOOH) fragment
//			new String[]{
//					"[H][#6;A;X3+]([H])[#6;A;X3](-[H])=[#6;A;X3](-[H])[#6]([#8;A;X1-,X2H1])=[O;X1]",
//					"[H][#6;A;X4:7]([H])([#6:8]([#8;A;X1-,X2H1:9])=[O;X1:10])[#6;A;X4:6]([H])([#8;X2:11]-[#6:12]([#6,#1;A:13])=[O;X1:14])[#6;A;X4:5]([H])([H])[N;X4+:2]([#6;A;H3X4:1])([#6;A;H3X4:3])[#6;A;H3X4:4]>>[#6;A;H3X4][#7;X3]([#6;A;H3X4])[#6;A;H3X4].[H][#8;X2:11]-[#6:12]([#6,#1;A:13])=[O;X1:14].[H][#6;A;X3+:5]([H])[#6;A;X3:6](-[H])=[#6;A;X3:7](-[H])[#6:8]([#8;A;X1-,X2H1:9])=[O;X1:10]"
//			},

		});
	}
	
	
	
	
	public void Fragmenter(){
		this.host = "127.0.0.1";
		this.port = 6311;
	}
	
	public void Fragmenter(String host, int port){
		this.host = host;
		this.port = port;
	}
	
	public IAtomContainerSet fragmentMolecule(IAtomContainer molecule, StructuralClass.ClassName type) throws Exception{
//		IAtomContainerSet fragments =  DefaultChemObjectBuilder
//				.getInstance().newInstance(IAtomContainerSet.class);

		IAtomContainerSet postprocessed_fragments = DefaultChemObjectBuilder
				.getInstance().newInstance(IAtomContainerSet.class);
		
		if(type != StructuralClass.ClassName.NIL && type != StructuralClass.ClassName.SPHINGOMYELINS){
			SmilesGenerator sg =  new SmilesGenerator();
			IAtomContainer stMol = this.sExplorer.standardizeMolecule(molecule);
			
			for( String[] fragmentationObject : fragmentationPatterns.get(type)){

				SMIRKSReaction sReaction = this.smrkMan.parse(fragmentationObject[1]);
				System.out.println("SMIRKS: \n" + fragmentationObject[1]);

				IAtomContainerSet current_set = smrkMan
						.applyTransformationWithSingleCopyForEachPos(stMol, null, sReaction);
				
				if(current_set != null){
					System.out.println("Nr of metabolites: " + String.valueOf(current_set.getAtomContainerCount()));	
					System.out.println("Nr of unique metabolites: " + String.valueOf(this.sExplorer.uniquefy(current_set).getAtomContainerCount()));
					
					IAtomContainerSet current_set_unique = this.sExplorer.uniquefy(current_set);
					
					for (int i = 0; i < current_set_unique.getAtomContainerCount(); i++){
						
						/**
						 * partition the return products, as the products of each reaction are returned as a single fragment
						 */
						IAtomContainerSet partitions = this.sExplorer.partition(current_set_unique
								.getAtomContainer(i));
						for (int k = 0; k < partitions.getAtomContainerCount(); k++) {
							IAtomContainer at_k = partitions.getAtomContainer(k);
//							AtomContainerManipulator.convertImplicitToExplicitHydrogens(at_k);
							if(this.sExplorer.containsSmartsPattern(this.sExplorer.standardizeMolecule(at_k), fragmentationObject[0])){								
							postprocessed_fragments.addAtomContainer( AtomContainerManipulator.removeHydrogens(at_k));
								System.out.println(sg.create(partitions.getAtomContainer(k)) + " was added.");
							} else{
								System.out.println(sg.create(partitions.getAtomContainer(k)) + " was NOT added.");
							}
			
						}
					}
				
				}
			}
//			SmilesGenerator sg = new SmilesGenerator().unique();
//			SmilesParser sp = new SmilesParser(SilentChemObjectBuilder.getInstance()); 
		}
		return postprocessed_fragments;
//		return this.sExplorer.uniquefy(postprocessed_fragments);
	}
	
	
//	
//	public IAtomContainerSet fragmentMolecule(IAtomContainer molecule) throws Exception{
//		
//		//		add part to remove the explicit hydrogen atoms from the molecule.
//		
//		IAtomContainerSet fragments =  DefaultChemObjectBuilder
//				.getInstance().newInstance(IAtomContainerSet.class);
//
//		IAtomContainerSet postprocessed_fragments = DefaultChemObjectBuilder
//				.getInstance().newInstance(IAtomContainerSet.class);
//		
//		AtomContainerManipulator.convertImplicitToExplicitHydrogens(molecule);
//		
//		StructuralClass.ClassName type = this.sExplorer.findClassName(molecule);
//
//		SmilesGenerator sg = new SmilesGenerator().unique();
//		System.out.println("MOLECULE WITH EXPLICIT HYDROGENS: " + sg.create(molecule));
//		
//		if(type != StructuralClass.ClassName.NIL && type != StructuralClass.ClassName.SPHINGOMYELINS){
//			for( String fragmentationSMIRKS : fragmentationPatterns.get(type)){
//				SMIRKSReaction sReaction = this.smrkMan.parse(fragmentationSMIRKS);
//				System.out.println("SMIRKS: \n" + fragmentationSMIRKS);
//				IAtomContainerSet current_set = smrkMan
//						.applyTransformationWithSingleCopyForEachPos(molecule, null, sReaction);
//				
//				if(current_set != null){
//					System.out.println("Nr of metabolites: " + String.valueOf(current_set.getAtomContainerCount()));				
//					fragments.add(current_set);
//				}
////				System.out.println("current_set: " + current_set.getAtomContainerCount());
//			}
//			
//			/**
//			 * partition the return products, as the products of each reaction are returned as a single fragment
//			 */
//			
//			for (int i =0; i < fragments.getAtomContainerCount(); i++){
//				IAtomContainerSet partitions = this.sExplorer.partition(fragments
//						.getAtomContainer(i));
//				for (int k = 0; k < partitions.getAtomContainerCount(); k++) {
//					postprocessed_fragments.addAtomContainer(partitions
//							.getAtomContainer(k));
//				}
//			}	
//		}
////		System.out.println("postprocessed_fragments: " + postprocessed_fragments.getAtomContainerCount());
//		return postprocessed_fragments;
////		return this.sExplorer.uniquefy(postprocessed_fragments);
//	}
//
//	public IAtomContainerSet fragmentMolecule(IAtomContainer molecule, StructuralClass.ClassName type) throws Exception{
//		IAtomContainerSet fragments =  DefaultChemObjectBuilder
//				.getInstance().newInstance(IAtomContainerSet.class);
//
//		IAtomContainerSet postprocessed_fragments = DefaultChemObjectBuilder
//				.getInstance().newInstance(IAtomContainerSet.class);
//		
//		if(type != StructuralClass.ClassName.NIL && type != StructuralClass.ClassName.SPHINGOMYELINS){
//			for( String fragmentationSMIRKS : fragmentationPatterns.get(type)){
//				
//				IAtomContainer stMol = this.sExplorer.standardizeMolecule(molecule);
//
//				SMIRKSReaction sReaction = this.smrkMan.parse(fragmentationSMIRKS);
//				System.out.println("SMIRKS: \n" + fragmentationSMIRKS);
//				IAtomContainerSet current_set = smrkMan
//						.applyTransformationWithSingleCopyForEachPos(molecule, null, sReaction);
//				
//				if(current_set != null){
//					System.out.println("Nr of metabolites: " + String.valueOf(current_set.getAtomContainerCount()));				
//					fragments.add(current_set);
////					fragments.add(this.sExplorer.uniquefy(current_set));
////					System.out.println("current_set: " + current_set.getAtomContainerCount());
//				}
//				
//			}
//			
////			System.out.println("fragments: " + fragments.getAtomContainerCount());
//			SmilesGenerator sg =  new SmilesGenerator();
////			System.out.println(sg.create( fragments.getAtomContainer(0)) );
//			
//			/**
//			 * partition the return products, as the products of each reaction are returned as a single fragment
//			 */
////			SmilesGenerator sg = new SmilesGenerator().unique();
//			SmilesParser sp = new SmilesParser(SilentChemObjectBuilder.getInstance()); 
//			
//			for (int i =0; i < fragments.getAtomContainerCount(); i++){
//				
//				IAtomContainerSet partitions = this.sExplorer.partition(fragments
//						.getAtomContainer(i));
//				for (int k = 0; k < partitions.getAtomContainerCount(); k++) {
//					IAtomContainer at_k = partitions.getAtomContainer(k);
//					if(!( at_k.getAtomCount() == 1)){
//						//	&& at_k.getAtom(0).getAtomicNumber() == 1
//						postprocessed_fragments.addAtomContainer(partitions
//								.getAtomContainer(k));
//						System.out.println(sg.create(partitions.getAtomContainer(k)) + " was added.");
//					} else{
//						System.out.println(sg.create(partitions.getAtomContainer(k)) + " was NOT added.");
//					}
//	
//				}
//				
//				// had to use this following method to make sure the order of the sn chains is maintained, 
//				// which it was not using the partition function. Not the best way to do it as dots in the 
//				// SMILES string do not necessarily mark the separation bewteen fragments. However, for fatty acyl fragments,
//				// it should work.
//				
////				String smiles = sg.create(fragments.getAtomContainer(i));
////				System.out.println("SMILES: " + smiles);
////				String[] l_smiles = smiles.split(".");
////				
////				System.out.println(l_smiles.length);
////				System.out.println(smiles.charAt(22));
////
////				for(int k = 0; k < l_smiles.length; k++){
////					System.out.println(k + ": " + l_smiles[k]);
////					postprocessed_fragments.addAtomContainer(sp.parseSmiles(l_smiles[k]));
////				}
//				
//			}	
//		}
////		System.out.println("postprocessed_fragments: " + postprocessed_fragments.getAtomContainerCount());
//		return postprocessed_fragments;
////		return this.sExplorer.uniquefy(postprocessed_fragments);
//	}


//	public ArrayList<String> generateMSPeakList(IAtomContainer molecule) throws Exception{
//		String name = molecule.getProperty(CDKConstants.TITLE);
//		
//		if(name==null){
//			name = "";
//		}
//		ArrayList<String> peaks = generateMSPeakList(molecule, name);
//		return peaks;
//		
//	}
	
//	public LinkedHashMap<String, ArrayList<String>> generateMSPeakList(IAtomContainer molecule) throws Exception{
//		String name = molecule.getProperty(CDKConstants.TITLE);
//		
//		if(name==null){
//			name = "";
//		}
//		LinkedHashMap<String, ArrayList<String>> peaks = generateMSPeakList(molecule, name);
//		return peaks;
//		
//	}
	
	
	/**
	 * 
	 * @param molecule
	 * @param name
	 * @return a linked hashmap containing 
	 * @throws Exception
	 */
	
//	public LinkedHashMap<String, ArrayList<String>> generateMSPeakList(IAtomContainer molecule, String name) throws Exception{
//		
//		LinkedHashMap<String, ArrayList<String>> results = new LinkedHashMap<String, ArrayList<String>>();
//		ArrayList<String> peaks = new ArrayList<String>();
//		String s_peaks = "";
//		ArrayList<String> metadata = new ArrayList<String>();
//		ArrayList<String> molName = new ArrayList<String>();
//		molName.add(name);
//
//		
//		
//		StructuralClass.ClassName type = this.sExplorer.findClassName(molecule);
//		System.out.println("the type of this molecule is " + String.valueOf(type));
//		
//		IAtomContainer cleaned_mol = this.sExplorer.cleanMolecule(molecule, this.smrkMan);
//		IAtomContainerSet fragments = fragmentMolecule(cleaned_mol,type);
//		// ArrayList of SMILES and mass for each fragment
//		ArrayList<String> frag_smiles_mass = new ArrayList<String>();
//		SmilesGenerator sg = new SmilesGenerator().unique();
//		
//
//		
////		if(molecule.getProperty(CDKConstants.TITLE) == null)
//
//		double mass = acm.getNaturalExactMass(cleaned_mol);
//		double sn1_mass;
//		double sn2_mass;
//		double sn3_mass;
//		double sn4_mass;
//
//		
////		NumberFormat mNumberFormat = NumberFormat.getInstance();
////		mNumberFormat.setMinimumFractionDigits(5);
////		mNumberFormat.setMaximumFractionDigits(5);
//		
//		System.out.println(mass);
//		
//		switch (type) {
//			case PHOSPHATIDYLCHOLINES:
//				
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;	
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				
//				
//				peaks.add(String.format("%.5f %4d",(mass - 18.0), (400/999)));
//				if(sn1_mass == sn2_mass){
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn1 || [M+H]-sn2\"",(mass - sn2_mass + 1), 600));
//					peaks.add(String.format("%.5f %4d \"[M+H]-C3H9N (-59)\"",(mass - 59), 999));
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn1-H2O || [M+H]-sn2-H2O\"",(mass - sn2_mass - 18 + 1), 600));
//				}else{
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn2\"",(mass - sn2_mass + 1), 600));
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn1\"",(mass - sn1_mass + 1), 600));
//					peaks.add(String.format("%.5f %4d \"[M+H]-C3H9N (-59)\"",(mass - 59), 999));
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn2-H20\"",(mass - sn2_mass - 18 + 1), 600));
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn1-H20\"",(mass - sn1_mass - 18 + 1), 600));
//					
//				}
//				
//				peaks.add(String.format("%.5f %4d \"[M+H]-C5H14NO4P (-183)\"",(mass - 183), 400));
//				
//				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
//						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//				
//				break;
//
//			case _1_LYSOPHOSPHATIDYLCHOLINES:
//				
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//							
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				
//
//				peaks.add(String.format("%.5f %4d \"[M+H]-H2O (-18)\"",(mass - 18.0), 999));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn1\"",(mass - sn1_mass + 1), 10));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn1-H20\"",(mass - sn1_mass - 18 + 1), 10));
//				
//				 // 184.15087533864045 was generated by creating a molecule of phosphocholine "C[N+](C)(C)CCOP(O)(O)=O"
//				// with CDK and calulating the natural exact mass with AtomContainerManipulator
//				peaks.add(String.format("%.5f %4d \"C5H15NO4P m/z=184\"",(184.15087533864045), 300));
//				
//				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
//						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);				
//				
//				break;
//
//			case _2_LYSOPHOSPHATIDYLCHOLINES:
//				
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//
//				System.out.println(sn2_mass);
//
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//
//				peaks.add(String.format("%.5f %4d \"[M+H]-H2O (-18)\"",(mass - 18.0), 999));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn2\"",(mass - sn2_mass + 1), 10));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn2-H20\"",(mass - sn2_mass - 18 + 1), 10));
//				
//				 // 184.15087533864045 was generated by creating a molecule of phosphocholine "C[N+](C)(C)CCOP(O)(O)=O"
//				// with CDK and calulating the natural exact mass with AtomContainerManipulator
//				peaks.add(String.format("%.5f %4d \"C5H15NO4P m/z=184\"",(184.15087533864045), 300));
//				
//				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
//						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);					
//				break;
//				
//			case PLASMENYLPHOSPHATIDYLCHOLINES:
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;	
//
//				System.out.println(sn1_mass);
//				System.out.println(sn2_mass);
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn2\"",(mass - sn2_mass + 1), 200));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn2-H20\"",(mass - sn2_mass - 18 + 1), 10));
//				peaks.add(String.format("%.5f %4d \"[M+H]-C5H14NO4P (-183)\"",(mass - 183), 10));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn1 (alkenyl ether loss)\"",(mass - sn1_mass), 999));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn1-C3H9N (-59)\"",(mass - sn1_mass - 59), 100));
//				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
//						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//				break;
//				
//			case PHOSPHATIDYLETHANOLAMINES:
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;	
//
//				sn1_mass = acm.getNaturalExactMass(fragments.getAtomContainer(0));
//				sn2_mass = acm.getNaturalExactMass(fragments.getAtomContainer(1));
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));				
//				
//				
//				// LipidBlast reports conflicting m/z values for [M+H]-sn1, [M+H]-sn1-H2O, [M+H]-sn2, and [M+H]-sn2-H2O
//				
//				
//				if(sn1_mass == sn2_mass){
//					peaks.add(String.format("%.5f %4d \"[M+H]-H2O (-18)\"",(mass + 1.0 - 18.0), 1));
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn1 || [M+H]-sn2\"",(mass + 1.0 - sn1_mass), 1));
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn1-H20 || [M+H]-sn2-H20\"",(mass + 1.0 - sn1_mass - 18), 1));	
//					peaks.add(String.format("%.5f %4d \"[M+H]-C2H8NO4P (-141)\"",(mass + 1.0 - 141), 999));
//					peaks.add(String.format("%.5f %4d \"sn1-O || sn2-O\"",(sn2_mass), 1));				
//				}else{
//					peaks.add(String.format("%.5f %4d \"[M+H]-H2O (-18)\"",(mass + 1.0 - 18.0), 1));
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn1\"",(mass + 1.0 - sn1_mass), 1));
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn1-H20\"",(mass + 1.0 - sn1_mass - 18), 1));	
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn2\"",(mass + 1.0 - sn2_mass), 1));
//					peaks.add(String.format("%.5f %4d \"[M+H]-C2H8NO4P (-141)\"",(mass + 1.0 - 141), 999));
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn2-H20\"",(mass + 1.0 - sn2_mass - 18), 1));
//					peaks.add(String.format("%.5f %4d \"sn2-O\"",(sn2_mass), 1));
//					peaks.add(String.format("%.5f %4d \"sn1-O\"",(sn1_mass ), 1));					
//				}
//				
//				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
//						"Comment: " + String.format("Parent= %.5f", mass - 1.0)  + "; [M+H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);			
//				break;
//				
//			case _1_LYSOPHOSPHATIDYLETHANOLAMINES:
//			
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//
//				System.out.println(sn1_mass);
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				
//				peaks.add(String.format("%.5f %4d \"[M+H]-H2O (-18)\"",(mass + 1.0 - 18.0), 999));
//				peaks.add(String.format("%.5f %4d \"[M+H]-(C2NH5+H20) (-61)\"",(mass + 1.0 - 61), 200));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn1\"",(mass + 1.0 - sn1_mass + 1), 10));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn1-H20\"",(mass + 1.0 - sn1_mass - 18 + 1), 10));
//				peaks.add(String.format("%.5f %4d \"[M+H]-C3H8NO6P (-141)\"",(mass + 1.0 - 141), 999));
//				
//				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
//						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);	
//
//				break;				
//				
//			case _2_LYSOPHOSPHATIDYLETHANOLAMINES:
//				
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//
//				System.out.println(sn2_mass);
//
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				
//				peaks.add(String.format("%.5f %4d \"[M+H]-H2O (-18)\"",(mass + 1.0 - 18.0), 999));
//				peaks.add(String.format("%.5f %4d \"[M+H]-(C2NH5+H20) (-61)\"",(mass + 1.0 - 61), 200));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn1\"",(mass + 1.0 - sn2_mass + 1), 10));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn1-H20\"",(mass + 1.0 - sn2_mass - 18 + 1), 10));
//				peaks.add(String.format("%.5f %4d \"[M+H]-C3H8NO6P (-141)\"",(mass - 141), 999));
//				
//				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
//						"Comment: "  + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]-"+ "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);					
//				break;				
//				
//	
//			case PLASMENYLPHOSPHATIDYLETHANOLAMINES:
//				
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;	
//
//				System.out.println("sn1_mass: " + sn1_mass);
//				System.out.println("sn2_mass: " + sn2_mass);
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				
//				peaks.add(String.format("%.5f %4d \"[M+H]-H2O\"",(mass + 1 - 18), 200));
//				peaks.add(String.format("%.5f %4d \"sn1 ether + C2H8NO3P (+124)\"",(sn1_mass + 124), 999));
//				
//				peaks.add(String.format("%.5f %4d \"[M+H]-C2H8NO4P (-141)\"",(mass - 141), 30));
//				
//				peaks.add(String.format("%.5f %4d \"sn1 ether +C2H8NO3P-H3PO4\"",(sn1_mass + 124 - 98), 150));
//				peaks.add(String.format("%.5f %4d \"[M+H]-C2H8NO4P-sn2\"",(mass + 1 - 141 - sn2_mass), 200));
//
//				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
//						"Comment: "  + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]-"+ "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//				break;				
//			
//			
//			
//			case PHOSPHATIDYLSERINES:
//
//				// PROBLEM HERE: MASS IS 2 less than reported by lipidblast. m/z are ca. 3 less.
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;	
//
//				System.out.println(sn1_mass);
//				System.out.println(sn2_mass);
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				
//				if(sn1_mass == sn2_mass){
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn1 || [M+H]-sn2\"",(mass + 1.0 - sn1_mass), 200));
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn1-H20 || [M+H]-sn2-H20\"",(mass + 1.0 - sn1_mass - 18), 200));
//					peaks.add(String.format("%.5f %4d \"[M+H]-C3H5NO2 (-87)\"",(mass - 87), 400));	
//					peaks.add(String.format("%.5f %4d \"[M+H]-C3H8NO6P (-185)\"",(mass - 185), 999));					
//				}else{
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn1\"",(mass + 1.0 - sn1_mass), 200));
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn1-H20\"",(mass + 1.0 - sn1_mass - 18), 200));
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn2\"",(mass + 1.0 - sn2_mass), 200));
//					peaks.add(String.format("%.5f %4d \"[M+H]-C3H5NO2 (-87)\"",(mass - 87), 400));	
//					peaks.add(String.format("%.5f %4d \"[M+H]-sn2-H20\"",(mass + 1.0 - sn2_mass - 18), 600));
//					peaks.add(String.format("%.5f %4d \"[M+H]-C3H8NO6P (-185)\"",(mass - 185), 999));					
//				}
//
//				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
//						"Comment: "  + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]-"+ "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//				
//				break;
//				
//				
//			case SPHINGOMYELINS:
//
//				// MAKE SURE THE MOLECULE CLEANER WORKS. E.G. SM(d18:0/16:0)	
//				//[H][C@@](O)(CCCCCCCCCCCCCCC)[C@]([H])(COP(O)(=O)OCC[N+](C)(C)C)NC(=O)CCCCCCCCCCCCCCC
//				// THE FREE O FROM PHOSPHATE MUST BE OX1-. SEE CLEANMOLECULE
//				peaks.add(String.format("%.5f %4d \"[M+]-H2O (-18)\"",(mass - 18), 999));
//				peaks.add(String.format("%.5f %4d \"[M+]-C3H9N (-59)\"",(mass - 59), 10));
//				peaks.add(String.format("%.5f %4d \"[M+] (-18 -59)\"",(mass - 18 - 59), 50));
//				peaks.add(String.format("%.5f %4d \"[M+]-C5H14NO4P (-183)\"",(mass - 183), 20));
//				
//				s_peaks = String.format("MW: %.5f", mass) + "\n" + String.format("PRECURSORMZ: %.5f",mass ) + "\n" + 
//						"Comment: "  + String.format("Parent= %.5f", mass)  + "; [M]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//				
//				break;
//			
//			case PHOSPHATIDIC_ACIDS:
//				
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;	
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				
//				if(sn1_mass == sn2_mass){
//					peaks.add(String.format("%.5f %4d \"[M+Na2-H]-sn1 || [M+Na2-H]-sn2\"",(mass + 46 - 1 - sn1_mass),500));
//					peaks.add(String.format("%.5f %4d \"[M+Na2-H]-sn1-H || [M+Na2-H]-sn2-H\"",(mass + 46 - 1 - sn2_mass),999));					
//				}else{
//					peaks.add(String.format("%.5f %4d \"[M+Na2-H]-sn1\"",(mass + 46 - 1 - sn1_mass),500));
//					peaks.add(String.format("%.5f %4d \"[M+Na2-H]-sn1-H\"",(mass + 46 - 1 - sn1_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M+Na2-H]-sn2\"",(mass + 46 - 1 - sn2_mass),500));
//					peaks.add(String.format("%.5f %4d \"[M+Na2-H]-sn2-H\"",(mass + 46 - 1 - sn2_mass - 1),999));
//				}
//				
//				
//				s_peaks = String.format("MW: %.5f", mass + 46 - 1) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 46 - 1) + "\n" + 
//						"Comment: "  + String.format("Parent= %.5f",  mass + 46 - 1)  + "; [M+Na2-H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);				
//				break;
//				
//			case _1_LYSOPHOSPHATIDIC_ACIDS:
//				
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				
//				System.out.println(mass + "\t" + sn1_mass + "\t" + sn2_mass);
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//	
//				peaks.add(String.format("%.5f %4d \"[M+H]-H20 (-18)\"",(mass + 1 - 18),200));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn1\"",(mass + 1 - sn1_mass),50));
//				peaks.add(String.format("%.5f %4d \"frag. C3H7O5P (155)\"", sn2_mass, 999));
//				peaks.add(String.format("%.5f %4d \"[M+H]-H2O-C3H7O5P\"",(mass + 1 - 18 - 155),500));
//	
//				
//				
//				s_peaks = String.format("MW: %.5f", mass + 1) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1) + "\n" + 
//						"Comment: "  + String.format("Parent= %.5f",  mass + 1)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);				
//				break;
//				
//			case _2_LYSOPHOSPHATIDIC_ACIDS:
//				
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				
//				System.out.println(mass + "\t" + sn1_mass + "\t" + sn2_mass);
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//	
//				peaks.add(String.format("%.5f %4d \"[M+H]-H20 (-18)\"",(mass + 1 - 18),200));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn2\"",(mass + 1 - sn2_mass),50));
//				peaks.add(String.format("%.5f %4d \"frag. C3H7O5P (155)\"", sn1_mass, 999));
//				peaks.add(String.format("%.5f %4d \"[M+H]-H2O-C3H7O5P\"",(mass + 1 - 18 - 155),500));
//	
//				
//				
//				s_peaks = String.format("MW: %.5f", mass + 1) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1) + "\n" + 
//						"Comment: "  + String.format("Parent= %.5f",  mass + 1)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);				
//				break;									
//				
//			case PHOSPHATIDYLINOSITOLS:
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				
//				if(sn1_mass == sn2_mass){
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1 || [M-H]-sn2\"",(mass - sn1_mass),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-H2O || [M-H]-sn2-H2O\"",(mass - sn1_mass - 18),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-C6H12O6 || [M-H]-sn2-C6H12O6\"",(mass - sn1_mass - 180),400));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA\"",(sn1_mass + 16),400));
//				}else{
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1\"",(mass - sn1_mass),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-H2O\"",(mass - sn1_mass - 18),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-C6H12O6\"",(mass - sn1_mass - 180),400));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2\"",(mass - sn2_mass),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2-H2O\"",(mass - sn2_mass - 18),200));
//					
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass + 16),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2-C6H12O6\"",(mass - sn2_mass - 180),400));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass + 16),400));				
//				}
//
//				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//						"Comment: " + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);				
//				
//				break;
//				
//				
//			case PHOSPHATIDYLGLYCEROLS:
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;	
//
//				System.out.println(sn1_mass);
//				System.out.println(sn2_mass);
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				
//				if(sn1_mass == sn2_mass){
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1 || [M-H]-sn2\"",(mass - 1 - sn1_mass),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-H2O || [M-H]-sn2-H2O\"",(mass - 1 - sn1_mass - 18),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-C3H8O3 || [M-H]-sn2-C3H8O3\"",(mass - 1 - sn1_mass - 92.09394850367853),200));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA\"",(sn1_mass + 16),999));
//				}else{
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1\"",(mass - 1 - sn1_mass),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-H2O\"",(mass - 1 - sn1_mass - 18),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2\"",(mass - 1 - sn2_mass),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2-H2O\"",(mass - 1 - sn2_mass - 18),200));	
//					
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-C3H8O3\"",(mass - 1 - sn1_mass - 92.09394850367853),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2-C3H8O3\"",(mass - 1 - sn2_mass - 92.09394850367853),200));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass + 16),999));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass + 16),999));		
//				}
//				
//				
//				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//						"Comment: " + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//				
//				break;
//							
//			case CARDIOLIPINS:
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;	
//				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;	
//				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
//
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				frag_smiles_mass.add(sn3_mass + "\t" + sg.create(fragments.getAtomContainer(2)));
//				frag_smiles_mass.add(sn4_mass + "\t" + sg.create(fragments.getAtomContainer(3)));
//				
//				
//				System.out.println(String.valueOf(sn1_mass) + "\t" + String.valueOf(sn2_mass) + "\t" + String.valueOf(sn3_mass) + "\t" + String.valueOf(sn4_mass));
//				
//				
// 				if((sn1_mass == sn2_mass) && (sn1_mass == sn3_mass) && (sn1_mass == sn4_mass)){
//					// e.g. 14:0/14:0/14:0/14:0
//				
//				   // [M-2H](2-)
////					peaks.add(String.format("%.5f %4d \"[M-2H](2-) -sn1 (monolyso) || [M-2H](2-) -sn3 (monolyso)\"",(mass - 2.0 - sn1_mass),500));
////					peaks.add(String.format("%.5f %4d \"[M-2H](2-) -(sn1+sn2 dilyso) || [M-2H](2-) -(sn3+sn4 dilyso)\"",(mass - 2.0 - sn1_mass - sn2_mass),100));
////					peaks.add(String.format("%.5f %4d \"[sn1+C3H6PO4-H](-) (137.00) || [sn2+C3H6PO4-H](-) (137.00) || [sn3+C3H6PO4-H](-) (137.00) || [sn4+C3H6PO4-H](-) (137.00)\"",(sn1_mass + 137.0 - 1.0),400));
////					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA || sn3 FA || sn4 FA\"",(sn1_mass),999));
//			
//				peaks.add(String.format("%.5f %4d \"[M-H] -sn1\"",(mass - 2.0 - sn1_mass),50));
//				peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929) || sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929) ,300));
//				peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026) || sn3+sn4+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//				peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00) || sn3+sn4+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//				peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O || sn4+C3H6PO4+H2O\"",(sn1_mass + 137.00 + 18.0),200));
//				peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4 || sn4+C3H6PO4\"",(sn1_mass + 137.00),300));
//				peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA || sn3 FA || sn4 FA\"",(sn1_mass),100));
//
//				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//							"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//					
//					
//					
//				}else if((sn1_mass == sn2_mass) && (sn1_mass == sn3_mass) && (sn1_mass != sn4_mass)){
//					// e.g. 14:0/14:0/14:0/16:0
//			
//					peaks.add(String.format("%.5f %4d \"[M-H] - sn1\"",(mass - sn1_mass),50));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4+H2O\"",(sn4_mass + 137.00 + 18.0),999));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4\"",(sn4_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O\"",(sn2_mass + 137.00 + 18.0),999));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4\"",(sn2_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn4 FA\"",(sn4_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA || sn3 FA\"",(sn1_mass),100));
//
//					s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//								"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);
//						
//				} else if((sn1_mass == sn2_mass) && (sn1_mass == sn4_mass) && (sn3_mass != sn4_mass)){
//					// e.g. 14:0/14:0/16:0/14:0
//					
//					peaks.add(String.format("%.5f %4d \"[M-H] - sn1\"",(mass - sn1_mass),50));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O || sn4+C3H6PO4+H2O\"",(sn2_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4 (+137.00) || sn4+C3H6PO4 (+137.00)\"",(sn2_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn3 FA\"",(sn3_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA || sn4 FA\"",(sn1_mass),100));
//
//					s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//								"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);					
//				
//				} else if((sn1_mass != sn2_mass) && (sn1_mass == sn3_mass) && (sn1_mass == sn4_mass)){
//					// e.g. 14:0/16:0/14:0/14:0
//
//					peaks.add(String.format("%.5f %4d \"[M-H] - sn1\"",(mass - sn1_mass),50));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+C3H6PO4+H2O || sn3+C3H6PO4+H2O\"",(sn1_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn1+C3H6PO4 (+137.00) || sn3+C3H6PO4 (+137.00)\"",(sn1_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn3 FA || sn4 FA\"",(sn1_mass),100));
//
//					s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//								"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);					
//
//				} else if((sn1_mass != sn2_mass) && (sn2_mass == sn3_mass) && (sn2_mass == sn4_mass)){
//					// e.g. 16:0/14:0/14:0/14:0
//
//					peaks.add(String.format("%.5f %4d \"[M-H] - sn1\"",(mass - sn1_mass),50));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4+H2O\"",(sn4_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4\"",(sn4_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O\"",(sn2_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4\"",(sn2_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn4 FA || sn2 FA || sn3 FA\"",(sn4_mass),100));
//
//					s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//								"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);	
//
////					
//				}else if((sn1_mass == sn2_mass) && (sn4_mass == sn3_mass) && (sn1_mass != sn4_mass)){
//					// e.g. CL(16:1/14:0/18:3/18:3)
//
//					peaks.add(String.format("%.5f %4d \"[M-H] - sn1\"",(mass - sn1_mass),50));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4+H2O\"",(sn4_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4\"",(sn4_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O\"",(sn2_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4\"",(sn2_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn3 FA || sn4 FA\"",(sn3_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass),100));
//
//					s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//								"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);					
//
//				} else if((sn2_mass == sn4_mass) && (sn1_mass != sn2_mass) && (sn1_mass != sn3_mass)
//						 && (sn2_mass != sn3_mass)){
//					// e.g. CL(16:0/14:0/20:2/14:0)
//
//					peaks.add(String.format("%.5f %4d \"[M-H] - sn1\"",(mass - sn1_mass),50));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O || sn4+C3H6PO4+H2O\"",(sn2_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4 (+137.00) || sn4+C3H6PO4 (+137.00)\"",(sn2_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn3 FA\"",(sn3_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn2 FA || sn4 FA\"",(sn2_mass),100));
//
//					s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//								"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);	
//					
//				} else if((sn2_mass == sn3_mass) && (sn1_mass != sn2_mass) && (sn1_mass != sn4_mass)
//				 && (sn2_mass != sn4_mass)){
//						// e.g. CL(18:0/16:1/16:1/14:0)
//					
//					peaks.add(String.format("%.5f %4d \"[M-H] - sn1\"",(mass - sn1_mass),50));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4+H2O\"",(sn4_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4\"",(sn4_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O\"",(sn2_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4\"",(sn2_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn2 FA || sn3 FA\"",(sn4_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn4 FA\"",(sn1_mass),100));
//					
//					s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//								"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);					
//			
//				} else if((sn1_mass != sn2_mass) && (sn1_mass != sn3_mass) && (sn2_mass != sn2_mass) && (sn3_mass == sn4_mass) ){
// 					// e.g. CL(14:0/14:0/16:0/18:1)
//					
//					peaks.add(String.format("%.5f %4d \"[M-H] - sn1\"",(mass - sn1_mass),50));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4+H2O\"",(sn4_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4\"",(sn4_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O\"",(sn2_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4\"",(sn2_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn4 FA\"",(sn4_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn3 FA\"",(sn3_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn4 FA || sn2 FA\"",(sn1_mass),100));
//					
//					s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//								"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);						
//
// 				} else if((sn1_mass != sn2_mass) && (sn1_mass != sn3_mass) && (sn2_mass != sn2_mass) && (sn3_mass == sn4_mass) ){
// 					// e.g. CL(18:0/20:4/18:1/18:1)
//					
//					peaks.add(String.format("%.5f %4d \"[M-H] - sn1\"",(mass - sn1_mass),50));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4+H2O\"",(sn4_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4\"",(sn4_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O\"",(sn2_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4\"",(sn2_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn4 FA\"",(sn4_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn3 FA\"",(sn3_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn4 FA || sn2 FA\"",(sn1_mass),100));
//					
//					s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//								"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);					
// 					
// 					
// 					
// 				} else if((sn1_mass != sn2_mass) && (sn1_mass != sn3_mass) && (sn3_mass != sn2_mass) && (sn3_mass == sn4_mass)){
// 					// e.g. CL(16:1/14:0/18:2/18:2)
//					peaks.add(String.format("%.5f %4d \"[M-H] - sn1\"",(mass - sn1_mass),50));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4+H2O\"",(sn4_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4\"",(sn4_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O\"",(sn2_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4\"",(sn2_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn3 FA || sn4 FA\"",(sn3_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn1\"",(sn1_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass),100));
//					
//					s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//								"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);					
//
// 				} else if((sn1_mass == sn2_mass) && (sn1_mass != sn3_mass) && (sn1_mass != sn4_mass) && (sn3_mass != sn4_mass)){
// 					// e.g. CL(18:2/18:2/16:1/14:0)
//					peaks.add(String.format("%.5f %4d \"[M-H] - sn1\"",(mass - sn1_mass),50));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4+H2O\"",(sn4_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4\"",(sn4_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O\"",(sn2_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4\"",(sn2_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn3 FA || sn4 FA\"",(sn3_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn1\"",(sn1_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass),100));
//					
//					s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//								"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);					
//
// 				} else if((sn1_mass == sn2_mass) && (sn2_mass != sn3_mass) && (sn3_mass == sn4_mass)){
//					// e.g. 16:0/14:0/14:0/16:0
//
//					peaks.add(String.format("%.5f %4d \"[M-H] - sn1\"",(mass - sn1_mass),50));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4+H2O\"",(sn4_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4\"",(sn4_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O\"",(sn2_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4\"",(sn2_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA\"",(sn1_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn4 FA || sn3 FA\"",(sn4_mass),100));
//					
//					s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//								"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);		
//	
// 				} else if((sn1_mass != sn2_mass) && (sn1_mass != sn3_mass) && (sn1_mass != sn4_mass) && 
//						(sn2_mass != sn3_mass) && (sn2_mass != sn4_mass) && (sn3_mass != sn3_mass)){
//					// e.g. CL(16:1/14:0/18:1/18:3)
// 					System.out.println("\n\nCASE 4\n\n");
//					peaks.add(String.format("%.5f %4d \"[M-H] - sn1\"",(mass - sn1_mass),50));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
//					peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4+H2O\"",(sn4_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn4+C3H6PO4\"",(sn4_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O\"",(sn2_mass + 137.00 + 18.0),200));
//					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4\"",(sn2_mass + 137.00),300));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn3 FA\"",(sn3_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn4 FA\"",(sn4_mass),100));
//					
//					s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//								"Comment:" + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);
//				}
// 				
// 				
////				peaks.add(String.format("%.5f %4d \"[M-H]\"",(mass - 1.0),50));
////				peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H11P2O8 (+272.9929)\"",(sn3_mass + sn4_mass + 272.9929),300));
////				peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H11P2O8 (+272.9929)\"",(sn1_mass + sn2_mass + 272.9929),300));
////				peaks.add(String.format("%.5f %4d \"sn3+sn4+C6H10O5P (+193.026)\"",(sn3_mass + sn4_mass + 193.026),100));
////				peaks.add(String.format("%.5f %4d \"sn1+sn2+C6H10O5P (+193.026)\"",(sn1_mass + sn2_mass + 193.026),100));
////				peaks.add(String.format("%.5f %4d \"sn3+sn4+C3H6PO4 (+137.00)\"",(sn3_mass + sn4_mass + 137.00),999));
////				peaks.add(String.format("%.5f %4d \"sn1+sn2+C3H6PO4 (+137.00)\"",(sn1_mass + sn2_mass + 137.00),999));
////
////				if(sn2_mass == sn4_mass){
////					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4+H2O || sn4+C3H6PO4+H2O\"",(sn2_mass + 137.00 + 18),200));
////					peaks.add(String.format("%.5f %4d \"sn2+C3H6PO4 (+137.00) || sn4+C3H6PO4 (+137.00)\"",(sn2_mass + 137.00),300));
////					
////				} else {
////					
////				}
//
//				break;
//				
//			case CERAMIDE_1_PHOSPHATES:
//
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;	
//				
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				
//				// the first 5 peaks are off by 2. LipidBlast returns 2 less.
//				peaks.add(String.format("%.5f %4d \"[M+H]\"",(mass + 1.0),500));
//				peaks.add(String.format("%.5f %4d \"[M+H]+ (-H20)\"",(mass + 1.0 - 18.0),250));
//				peaks.add(String.format("%.5f %4d \"[M+H]+ (-HPO3) (-79.96633)\"",(mass + 1.0 - 79.96633),200));
//				peaks.add(String.format("%.5f %4d \"[M+H]+ (-H3PO4) (-97.9769)\"",(mass + 1.0 - 97.9769),200));
//				peaks.add(String.format("%.5f %4d \"[M+H]+ (-H3PO4-H20)\"",(mass + 1.0 - 97.9769 - 18),200));
//				peaks.add(String.format("%.5f %4d \"sn2 N\"",(sn2_mass),300));
//				
//				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
//						"Comment:"  + String.format("Parent= %.5f", mass + 1.0) + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);				
//				break;
//				
//			case SULFATIDES:
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//	
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//
//				peaks.add(String.format("%.5f %4d \"[M-H]-H2O (-18)\"",(mass - 1.0 - 18.0),100));
//				peaks.add(String.format("%.5f %4d \"[M-H]-sn2\"",(mass - 1.0 - sn2_mass),200));
//				peaks.add(String.format("%.5f %4d \"[M-H]-sn2-H2O\"",(mass - 1.0 - sn2_mass - 18),200));
//				peaks.add(String.format("%.5f %4d \"ion C6H9O8S- (241.00181)\"",241.00181,999));
//				peaks.add(String.format("%.5f %4d \"ion SO4H- (96.95956)\"",96.95956,999));
//
//				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//						"Comment:"  + String.format("Parent= %.5f", mass - 1.0) + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);					
//				break;
//				
//			case GANGLIOSIDES:
//	
//				double cer_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				System.out.println("cer_mass: " + cer_mass);
//				
//				frag_smiles_mass.add(cer_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				
//				peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0), 999));
//				peaks.add(String.format("%.5f %4d \"[M-H]-NeuAc-H\"",(mass - 1.0 - 293.27091181494916), 500));	
//				peaks.add(String.format("%.5f %4d \"[M-H]-Cer-C6H10O5\"",(cer_mass -1 + 164.15672906448447 -1 ), 200)); // The two (-1) represent H atoms rermoval
//				peaks.add(String.format("%.5f %4d \"ion ceramide\"",(cer_mass), 200));
//				peaks.add(String.format("%.5f %4d \"ion C11H16NO8- (290.08759)\"",290.08759, 400));
//				
//				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//						"Comment:"  + String.format("Parent= %.5f", mass - 1.0) + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);					
//				
//				break;
//				
//			case CHOLESTERYL_ESTERS:
//
//				peaks.add(String.format("%.5f %4d \"sterol frag. (369.352)\"",369.35213, 999));
//				peaks.add(String.format("%.5f %4d \"sterol frag. (175.148)\"",175.14868, 300));
//				peaks.add(String.format("%.5f %4d \"sterol frag. (161.133)\"",161.13303, 350));
//				peaks.add(String.format("%.5f %4d \"sterol frag. (147.117)\"",147.11738, 400));
//				peaks.add(String.format("%.5f %4d \"sterol frag. (135.117)\"",135.11738, 400));
//
//				s_peaks = String.format("MW: %.5f", mass + 18.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 18.0) + "\n" + 
//							"Comment:" + String.format("Parent= %.5f", mass + 18.0)  + "; [M+NH4]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);	
//				
//				
//				break;
//				
//			case CHOLESTERYL_ESTERS_LANOSTERYL_OR_ZYMOSTERYL:
//				
//				peaks.add(String.format("%.5f %4d \"sterol frag. (369.352)\"",369.35213, 999));
//				peaks.add(String.format("%.5f %4d \"sterol frag. C10H15  (135.117) || sterol frag. C11H15 (147.117) || sterol frag. C12H17 (161.133) || sterol frag. C13H19 (175.148) \"",0.00000, 300));
//
//				s_peaks = String.format("MW: %.5f", mass + 18.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 18.0) + "\n" + 
//							"Comment:" + String.format("Parent= %.5f", mass + 18.0)  + "; [M+NH4]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);	
//
//				break;		
//
//			case  _1_MONOACYLGLYCEROLS:
//				peaks.add(String.format("%.5f %4d \"[M+Li]+\"",(mass + 7), 600));
//				peaks.add(String.format("%.5f %4d \"C3H8O3Li (99.06)\"",99.06335, 800));
//				peaks.add(String.format("%.5f %4d \"C3H8O3Li-H20 (81.05)\"",81.05279, 999));
//				s_peaks = String.format("MW: %.5f", mass + 7.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 7.0 ) + "\n" + 
//						"Comment:"  + String.format("Parent= %.5f", mass + 7 ) + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//				
//				break;
//			
//			case DIACYLGLYCEROLS:
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				System.out.println("MASS REDUCED: ");
//				System.out.println(sn1_mass);
//				System.out.println(sn2_mass);
//
////				System.out.println(mNumberFormat.format(sn1_mass));
//				
//				// LipidBlast reports conflicting m/z values for [M+H]-sn1, [M+H]-sn1-H2O, [M+H]-sn2, and [M+H]-sn2-H2O
//				
//				if(sn1_mass == sn2_mass){
//					peaks.add(String.format("%.5f %4d \"[M+Li]\"",(mass + 7), 600));				
//					peaks.add(String.format("%.5f %4d \"[M+Li]-H2O (-18)\"",(mass + 7 - 18.0), 200));				
//					peaks.add(String.format("%.5f %4d \"[M+Li]-sn1+H20 || [M+Li]-sn2+H20\"",(mass + 7 - sn1_mass + 18), 400));
//					peaks.add(String.format("%.5f %4d \"[M+Li]-sn1 || [M+Li]-sn2\"",(mass + 7 - sn1_mass), 400));
//					peaks.add(String.format("%.5f %4d \"sn1+Li || sn2+Li\"",(sn1_mass + 7 ), 999));
//				}else{
//					peaks.add(String.format("%.5f %4d \"[M+Li]\"",(mass + 7), 600));				
//					peaks.add(String.format("%.5f %4d \"[M+Li]-H2O (-18)\"",(mass + 7 - 18.0), 200));				
//					peaks.add(String.format("%.5f %4d \"[M+Li]-sn1+H20\"",(mass + 7 - sn1_mass + 18), 400));
//					peaks.add(String.format("%.5f %4d \"[M+Li]-sn2+H20\"",(mass + 7 - sn2_mass + 18), 400));
//					peaks.add(String.format("%.5f %4d \"[M+Li]-sn1\"",(mass + 7 - sn1_mass), 400));
//					peaks.add(String.format("%.5f %4d \"[M+Li]-sn2\"",(mass + 7 - sn2_mass), 400));
//					peaks.add(String.format("%.5f %4d \"sn2+Li\"",(sn2_mass + 7 ), 999));
//					peaks.add(String.format("%.5f %4d \"sn1+Li\"",(sn1_mass + 7 ), 999));					
//				}
//				
//				s_peaks = String.format("MW: %.5f", mass + 7) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 7) + "\n" + 
//						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//				
//				break;
//			
//			case TRIACYLGLYCEROLS:
//				
//				// Whatch out. Here, using the partition function, sn2 and sn3 seem to be interchanged.
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
//
//				
//				System.out.println(sg.create(fragments.getAtomContainer(0)));
//				System.out.println(sg.create(fragments.getAtomContainer(1)));
//				System.out.println(sg.create(fragments.getAtomContainer(2)));
//				System.out.println(fragments.getAtomContainerCount());
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				frag_smiles_mass.add(sn3_mass + "\t" + sg.create(fragments.getAtomContainer(2)));
//				
//				peaks.add(String.format("%.5f %4d \"[M+Li]-sn1+Li\"",(mass + 7 - sn1_mass), 500));
//				peaks.add(String.format("%.5f %4d \"[M+Li]-sn2+Li\"",(mass + 7 - sn2_mass), 500));
//				peaks.add(String.format("%.5f %4d \"[M+Li]-sn3+Li\"",(mass + 7 - sn3_mass), 500));
//				
//				s_peaks = String.format("MW: %.5f", mass + 7) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 7) + "\n" + 
//						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);	
//				
//				break;
//				
//			case MONOGALACTOSYLDIACYLGLYCEROLS:
//				// MGDG
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				
//				if(sn1_mass == sn2_mass){
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA\"",(sn1_mass), 999));
//				}else{
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass), 999));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass), 999));					
//				}
//
//				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);				
//				
//				break;
//				
//			case DIGALACTOSYLDIACYLGLYCEROLS:
//				// DGDG
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;	
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				
//				if(sn1_mass == sn2_mass){
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA\"",(sn1_mass), 999));
//				}else{
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass), 999));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass), 999));			
//				}
//				
//				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);					
//				break;
//				
//				
//			case SULFOQUINOVOSYLDIACYLGLYCEROLS:
//				// SQDG
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				
//				if(sn1_mass == sn2_mass){
//					 //The last -1 is to remove the charge of the hydrogen as the fatty acid carries a negative charge.
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1 || [M-H]-sn2\"",(mass - 1.0 - sn1_mass - 1),300));	
//					peaks.add(String.format("%.5f %4d \"fragment C6H9O7S\"",(225.00690),999));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA\"",(sn1_mass),100));
//				}else{
//					 //The last -1 is to remove the charge of the hydrogen as the fatty acid carries a negative charge.
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1\"",(mass - 1.0 - sn1_mass - 1),300));
//					 //The last -1 is to remove the charge of the hydrogen as the fatty acid carries a negative charge.
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2\"",(mass - 1.0 - sn2_mass - 1),300));
//					peaks.add(String.format("%.5f %4d \"fragment C6H9O7S\"",(225.00690),999));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass),100));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass),100));						
//				}
//
//				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//				
//				break;
//				
//			case DIACYLATED_PHOSPHATIDYLINOSITOL_MONOMANNOSIDES:
//				// Ac2PIM1
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;	
//
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				
//				if(sn1_mass == sn2_mass){
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),300));
//					peaks.add(String.format("%.5f %4d \"[M-H]-C6H10O5 (-162.05282)\"",(mass - 1.0 - 162.14084755683289),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1 || [M-H]-sn2\"",(mass - 1.0 - sn1_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-C12H20O10 (-324.10564)\"",(mass - 1.0 - -324.10564),600));
//					peaks.add(String.format("%.5f %4d \"[M-H]-C12H20O10-sn1 || [M-H]-C12H20O10-sn2\"",(mass - 1.0 - -324.10564 - sn1_mass),400));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA\"",(sn2_mass),400));				
//				}else{
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),300));
//					peaks.add(String.format("%.5f %4d \"[M-H]-C6H10O5 (-162.05282)\"",(mass - 1.0 - 162.14084755683289),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1\"",(mass - 1.0 - sn1_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2\"",(mass - 1.0 - sn2_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-C12H20O10 (-324.10564)\"",(mass - 1.0 - -324.10564),600));
//					peaks.add(String.format("%.5f %4d \"[M-H]-C12H20O10-sn1\"",(mass - 1.0 - -324.10564 - sn1_mass),400));
//					peaks.add(String.format("%.5f %4d \"[M-H]-C12H20O10-sn2\"",(mass - 1.0 - -324.10564 - sn2_mass),400));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass),400));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass),400));					
//				}
//
//				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//				
//				break;
//				
//			case DIACYLATED_PHOSPHATIDYLINOSITOL_DIMANNOSIDES:
//				// Ac2PIM2
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;	
//
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				
//				if(sn1_mass == sn2_mass){
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),100));
//					peaks.add(String.format("%.5f %4d \"[M-H]-C6H10O5 (-162.05282)\"",(mass - 1.0 - 162.14084755683289),50));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1 | [M-H]-sn2\"",(mass - 1.0 - sn1_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-sn2\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1),200));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA\"",(sn2_mass),400));
//				}else{
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),100));
//					peaks.add(String.format("%.5f %4d \"[M-H]-C6H10O5 (-162.05282)\"",(mass - 1.0 - 162.14084755683289),50));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1\"",(mass - 1.0 - sn1_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2\"",(mass - 1.0 - sn2_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-sn2\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1),200));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass),400));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass),400));					
//				}
//				
//	
//	
//				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//				
//				break;
//				
//				
//			case TRIACYLATED_PHOSPHATIDYLINOSITOL_DIMANNOSIDES:
//				// Ac3PIM2
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;	
//				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;	
//				
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(2)));
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				
//				if((sn1_mass == sn2_mass) && (sn1_mass == sn3_mass)){
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-C6H10O5 (-162.05282)\"",(mass - 1.0 - 162.14084755683289),50));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1+H20 || [M-H]-sn2+H20 || [M-H]-sn3+H20\"",(mass - 1.0 - sn1_mass - 1 + 18),100));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1 || [M-H]-sn2 || [M-H]-sn3\"",(mass - 1.0 - sn1_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-sn2\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1),200));
//					peaks.add(String.format("%.5f %4d \"M-sn1-sn2-C3H5O (-56.02621)\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1 - 56.02621),400));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA || sn3 FA\"",(sn1_mass),400));
//					
//				}else if((sn1_mass != sn2_mass) && (sn1_mass != sn3_mass) && (sn2_mass != sn3_mass)){
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-C6H10O5 (-162.05282)\"",(mass - 1.0 - 162.14084755683289),50));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1+H20\"",(mass - 1.0 - sn1_mass - 1 + 18),100));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2+H20\"",(mass - 1.0 - sn2_mass - 1 + 18),100));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1\"",(mass - 1.0 - sn1_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3+H20\"",(mass - 1.0 - sn3_mass - 1 + 18),100));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2\"",(mass - 1.0 - sn2_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3\"",(mass - 1.0 - sn3_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-sn2\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1),200));
//					peaks.add(String.format("%.5f %4d \"M-sn1-sn2-C3H5O (-56.02621)\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1 - 56.02621),400));
//					peaks.add(String.format("%.5f %4d \"sn3 FA\"",(sn3_mass),400));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass),400));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass),400));	
//					
//				} else if(sn1_mass == sn2_mass){
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-C6H10O5 (-162.05282)\"",(mass - 1.0 - 162.14084755683289),50));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1+H20 || [M-H]-sn2+H20\"",(mass - 1.0 - sn1_mass - 1 + 18),100));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3+H20\"",(mass - 1.0 - sn3_mass - 1 + 18),100));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1 || [M-H]-sn2\"",(mass - 1.0 - sn1_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3\"",(mass - 1.0 - sn3_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-sn2\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1),200));
//					peaks.add(String.format("%.5f %4d \"M-sn1-sn2-C3H5O (-56.02621)\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1 - 56.02621),400));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn3_mass),400));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn3 FA\"",(sn2_mass),400));
//					
//				}else if(sn1_mass == sn3_mass){
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-C6H10O5 (-162.05282)\"",(mass - 1.0 - 162.14084755683289),50));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1+H20 || [M-H]-sn3+H20\"",(mass - 1.0 - sn1_mass - 1 + 18),100));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2+H20\"",(mass - 1.0 - sn2_mass - 1 + 18),100));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1 || [M-H]-sn3\"",(mass - 1.0 - sn1_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2\"",(mass - 1.0 - sn2_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-sn2\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1),200));
//					peaks.add(String.format("%.5f %4d \"M-sn1-sn2-C3H5O (-56.02621)\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1 - 56.02621),400));
//					peaks.add(String.format("%.5f %4d \"sn3 FA\"",(sn3_mass),400));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA\"",(sn2_mass),400));
//					
//				}
//
//				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//				
//				break;				
//				
//				
//			case TETRACYLATED_PHOSPHATIDYLINOSITOL_DIMANNOSIDES:
//				// Ac4PIM2
//				sn1_mass = acm.getNaturalExactMass(fragments.getAtomContainer(1));
//				sn2_mass = acm.getNaturalExactMass(fragments.getAtomContainer(2));
//				sn3_mass = acm.getNaturalExactMass(fragments.getAtomContainer(0));
//				sn4_mass = acm.getNaturalExactMass(fragments.getAtomContainer(3));
//				
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;	
//				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;	
//				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;	
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(2)));
//				frag_smiles_mass.add(sn3_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn4_mass + "\t" + sg.create(fragments.getAtomContainer(3)));
//				
//				if((sn1_mass == sn2_mass) && (sn1_mass == sn3_mass) && (sn1_mass == sn4_mass)){
//					
//				}else if((sn1_mass != sn2_mass) && (sn1_mass != sn3_mass)  && (sn1_mass != sn4_mass) && (sn2_mass != sn3_mass) && (sn3_mass != sn4_mass) && (sn2_mass != sn4_mass)){
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1\"",(mass - 1.0 - sn1_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2\"",(mass - 1.0 - sn2_mass - 1),500));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3\"",(mass - 1.0 - sn3_mass - 1),500));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn4\"",(mass - 1.0 - sn4_mass - 1),500));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-sn2\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1),100));
//					peaks.add(String.format("%.5f %4d \"M-sn1-sn2-C3H5O (-56.02621)\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1 - 56.02621),300));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3-sn4\"",(mass - 1.0 - sn3_mass - 1 - sn4_mass - 1),100));
//					peaks.add(String.format("%.5f %4d \"M-sn3-sn4-C3H5O (-56.02621)\"",(mass - 1.0 - sn3_mass - 1 - sn4_mass - 1 - 56.02621),300));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass),400));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass),400));					
//				
//				}else if ((sn1_mass == sn2_mass) && (sn1_mass == sn3_mass) && (sn1_mass != sn4_mass)){
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1 || [M-H]-sn2 || [M-H]-sn3\"",(mass - 1.0 - sn1_mass - 1),999));	
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn4\"",(mass - 1.0 - sn4_mass - 1),500));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-sn2\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1),100));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3-sn4\"",(mass - 1.0 - sn3_mass - 1 - sn4_mass - 1),100));
//					peaks.add(String.format("%.5f %4d \"M-sn1-sn2-C3H5O (-56.02621)\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1 - 56.02621),300));
//					peaks.add(String.format("%.5f %4d \"M-sn3-sn4-C3H5O (-56.02621)\"",(mass - 1.0 - sn3_mass - 1 - sn4_mass - 1 - 56.02621),300));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA\"",(sn1_mass),400));
//					
//					
//				}else if ((sn1_mass == sn2_mass) && (sn1_mass != sn3_mass) && (sn1_mass != sn4_mass) && (sn3_mass != sn4_mass)){
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1 || [M-H]-sn2\"",(mass - 1.0 - sn1_mass - 1),999));					
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn4\"",(mass - 1.0 - sn4_mass - 1),500));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3\"",(mass - 1.0 - sn3_mass - 1),500));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-sn2\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1),100));
//					peaks.add(String.format("%.5f %4d \"M-sn1-sn2-C3H5O (-56.02621)\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1 - 56.02621),300));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3-sn4\"",(mass - 1.0 - sn3_mass - 1 - sn4_mass - 1),100));
//					peaks.add(String.format("%.5f %4d \"M-sn3-sn4-C3H5O (-56.02621)\"",(mass - 1.0 - sn3_mass - 1 - sn4_mass - 1 - 56.02621),300));
//					peaks.add(String.format("%.5f %4d \"sn1 FA || sn2 FA\"",(sn1_mass),400));
//				
//				}else if((sn3_mass == sn2_mass) && (sn1_mass != sn3_mass) && (sn3_mass != sn4_mass) && (sn1_mass != sn4_mass)){
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1\"",(mass - 1.0 - sn1_mass - 1),500));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2 || [M-H]-sn3\"",(mass - 1.0 - sn2_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn4\"",(mass - 1.0 - sn4_mass - 1),500));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-sn2\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1),100));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3-sn4\"",(mass - 1.0 - sn3_mass - 1 - sn4_mass - 1),100));
//					peaks.add(String.format("%.5f %4d \"M-sn1-sn2-C3H5O (-56.02621)\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1 - 56.02621),300));
//					peaks.add(String.format("%.5f %4d \"M-sn3-sn4-C3H5O (-56.02621)\"",(mass - 1.0 - sn3_mass - 1 - sn4_mass - 1 - 56.02621),300));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass),400));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass),400));
//					
//				}else if((sn1_mass == sn4_mass) && (sn1_mass != sn2_mass) && (sn1_mass != sn3_mass) &&  (sn2_mass != sn3_mass)){
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1 || [M-H]-sn4\"",(mass - 1.0 - sn1_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2\"",(mass - 1.0 - sn2_mass - 1),500));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3\"",(mass - 1.0 - sn3_mass - 1),500));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-sn2\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1),100));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3-sn4\"",(mass - 1.0 - sn3_mass - 1 - sn4_mass - 1),100));
//					peaks.add(String.format("%.5f %4d \"M-sn1-sn2-C3H5O (-56.02621)\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1 - 56.02621),300));
//					peaks.add(String.format("%.5f %4d \"M-sn3-sn4-C3H5O (-56.02621)\"",(mass - 1.0 - sn3_mass - 1 - sn4_mass - 1 - 56.02621),300));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass),400));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass),400));	
//					
//				}else if((sn2_mass == sn4_mass) && (sn1_mass != sn3_mass) && (sn1_mass != sn4_mass) && (sn4_mass != sn3_mass)){
//					peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0),200));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1\"",(mass - 1.0 - sn1_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn2 || [M-H]-sn4\"",(mass - 1.0 - sn2_mass - 1),999));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3\"",(mass - 1.0 - sn3_mass - 1),500));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn1-sn2\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1),100));
//					peaks.add(String.format("%.5f %4d \"M-sn1-sn2-C3H5O (-56.02621)\"",(mass - 1.0 - sn1_mass - 1 - sn2_mass - 1 - 56.02621),300));
//					peaks.add(String.format("%.5f %4d \"[M-H]-sn3-sn4\"",(mass - 1.0 - sn3_mass - 1 - sn4_mass - 1),100));
//					peaks.add(String.format("%.5f %4d \"M-sn3-sn4-C3H5O (-56.02621)\"",(mass - 1.0 - sn3_mass - 1 - sn4_mass - 1 - 56.02621),300));
//					peaks.add(String.format("%.5f %4d \"sn2 FA\"",(sn2_mass),400));
//					peaks.add(String.format("%.5f %4d \"sn1 FA\"",(sn1_mass),400));	
//					
//				}
//
//				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);				
//				
//				break;
//				
////				
////			case DIPHOSPHORYLATED_HEXAACYL_LIPID_A:
////				
////				break;
//			
//			case NIL:
//				
//				break;
//				
//		}
//		
//		results.put("molName", molName);
//		results.put("peaks_list", peaks);
//		results.put("metadata", metadata);
//		results.put("fragments", frag_smiles_mass);
//		
//		return results;
//	}
//	
//
	
	/**
	 * 
	 * @param sourceFilename: Name of the SDF file whose molecules spectra will be generated for.
	 * @param bldr: CDK's IChemObjectBuilder object
	 * @param outputFilename: Name of the .msp file
	 * @throws Exception
	 */
	
//	
//	public void savePeakListFromSDF(String sourceFilename, IChemObjectBuilder bldr, String outputFilename) throws Exception{
//		FileWriter fw = new FileWriter(outputFilename);
//		BufferedWriter bw = new BufferedWriter(fw);
//
//		System.out.println("Bla bla --------------------------------------------");
////		System.out.println(outputFilename.split(outputFilename, '.').length);
//		System.out.println(outputFilename.split(".").length);
//		for(int s = 0; s< outputFilename.split(outputFilename, '.').length;s++){
//			System.out.println(s);
//			System.out.println(outputFilename.split(outputFilename, '.')[s]);
//		}
//		FileWriter fw2 = new FileWriter("_frag_smiles.txt");
//		BufferedWriter bw2 = new BufferedWriter(fw2);
//		
//		IteratingSDFReader sdfReader = new IteratingSDFReader(new FileReader(sourceFilename), bldr);
//		
////		bw.newLine();
////		bw.newLine();
//		while (sdfReader.hasNext()) {
//			IAtomContainer molecule = sdfReader.next();
//			LinkedHashMap<String,ArrayList<String>> peaksResults = generateMSPeakList(molecule);
//			ArrayList<String> peaks = peaksResults.get("peaks_list");
//			int mol_nr = 0;
//			if(!peaks.isEmpty()){
////				
//				mol_nr++;
//				String name = peaksResults.get("molName").get(0);
//				if(name == null || name.trim().length()==0){
//					name = "molecule_" + String.valueOf(mol_nr);
//				}
//				bw.write("NAME: " + peaksResults.get("molName").get(0));
//				bw.newLine();
//				bw.write(peaksResults.get("metadata").get(0));
//				bw.newLine();
//				for(int p = 0; p < peaks.size();p++){
//					bw.write(peaks.get(p));
//					bw.newLine();
//				}
//			
//				bw.newLine();
//				bw.newLine();
//				
//				// saving the fragment list
//				bw2.write("NAME: " + peaksResults.get("molName").get(0));
//				bw2.newLine();
//				
//				ArrayList<String> frags = peaksResults.get("fragments");
//				for(int k = 0; k < frags.size(); k++){
//					bw2.write(frags.get(k));
//					bw2.newLine();
//				}
//				bw2.newLine();
//				
//				
//			}
//			
//		}
//		bw.close();
//		bw2.close();
//		sdfReader.close();
//
//	}
//
//	
//	public ArrayList<LinkedHashMap<String,ArrayList<String>>> generatePeakListFromSDF(String sourceFilename, IChemObjectBuilder bldr) throws Exception{
//		
//		ArrayList<LinkedHashMap<String,ArrayList<String>>> allPeaks = new ArrayList<LinkedHashMap<String,ArrayList<String>>>();
//		
//		IteratingSDFReader sdfReader = new IteratingSDFReader(new FileReader(sourceFilename), bldr);
//
//		while (sdfReader.hasNext()) {
//			IAtomContainer molecule = sdfReader.next();
//			allPeaks.add(generateMSPeakList(molecule));
//		}
//
//		return allPeaks;
//	}
	
	public LinkedHashMap<String, ArrayList<String>> generateCfmidLikeMSPeakList(IAtomContainer molecule) throws Exception{
		String name = molecule.getProperty(CDKConstants.TITLE);
		
		if(name==null){
			name = "";
		}
		LinkedHashMap<String, ArrayList<String>> peaks = generateCfmidLikeMSPeakList(molecule, name);
		return peaks;
		
	}	

	public LinkedHashMap<String, ArrayList<String>> generateCfmidLikeMSPeakList(IAtomContainer molecule, String name) throws Exception{
		
		LinkedHashMap<String, ArrayList<String>> results = new LinkedHashMap<String, ArrayList<String>>();
		ArrayList<String> peaks = new ArrayList<String>();
		String s_peaks = "";
		ArrayList<String> metadata = new ArrayList<String>();
		ArrayList<String> molName = new ArrayList<String>();
		ArrayList<String> adductType = new ArrayList<String>();
		molName.add(name);
		
		
        
//    	System.out.println("isFlagApplyStereoTransformation(): " + this.smrkMan.isFlagApplyStereoTransformation());
//    	System.out.println("isFlagFilterEquivalentMappings() : " + this.smrkMan.isFlagFilterEquivalentMappings());
//    	System.out.println("isFlagCheckResultStereo() : " + this.smrkMan.isFlagCheckResultStereo());
//    	System.out.println("isFlagProcessResultStructures() : " + this.smrkMan.isFlagProcessResultStructures());	
//		smrkMan.setFlagApplyStereoTransformation(true); 
		this.smrkMan.setFlagFilterEquivalentMappings(true);
//		this.smrkMan.setFlagCheckResultStereo(true);
//		smrkMan.setFlagProcessResultStructures(true);
//    	System.out.println("isFlagApplyStereoTransformation(): " + this.smrkMan.isFlagApplyStereoTransformation());
//    	System.out.println("isFlagFilterEquivalentMappings() : " + this.smrkMan.isFlagFilterEquivalentMappings());
//    	System.out.println("isFlagCheckResultStereo() : " + this.smrkMan.isFlagCheckResultStereo());
//    	System.out.println("isFlagProcessResultStructures() : " + this.smrkMan.isFlagProcessResultStructures());
		
		

		IAtomContainer standardized_mol = this.sExplorer.standardizeMolecule(molecule);
		StructuralClass.ClassName type = this.sExplorer.findClassName(standardized_mol);
		System.out.println("the type of this molecule is " + String.valueOf(type));
		
//		IAtomContainer cleaned_mol = this.sExplorer.cleanMolecule(molecule, this.smrkMan);

		IAtomContainerSet fragments = fragmentMolecule(standardized_mol,type);
		// ArrayList of SMILES and mass for each fragment
		ArrayList<String> frag_smiles_mass = new ArrayList<String>();
		SmilesGenerator sg = new SmilesGenerator().unique();

		
		System.out.println(sg.create(standardized_mol));
		
		for(IAtomContainer ac : fragments.atomContainers()){
			System.out.println(sg.create(ac));
		}
		

		double mass = acm.getNaturalExactMass(standardized_mol);
		double sn1_mass;
		double sn2_mass;
		double sn3_mass;
		double sn4_mass;
		double sn5_mass;
		double sn6_mass;
		double sn7_mass;
		double sn8_mass;
		double sn9_mass;
		double sn10_mass;
		double sn11_mass;
		double sn12_mass;
		double sn13_mass;
		
		String c1_smiles, c2_smiles, c3_smiles, c4_smiles, c5_smiles, c6_smiles, c7_smiles, c8_smiles, c9_smiles, c10_smiles,
		c11_smiles, c12_smiles;
		
//		NumberFormat mNumberFormat = NumberFormat.getInstance();
//		mNumberFormat.setMinimumFractionDigits(5);
//		mNumberFormat.setMaximumFractionDigits(5);
		
		System.out.println(mass);
		
		switch (type) {
			case PHOSPHATIDYLCHOLINES:
				
				adductType.add("[M+H]+");
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				
				// [M+H]-H2O (-18)
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;

				// [M+H]-C3H9N (-59)
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
				
				// [M+H]-sn2
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				
				// [M+H]-sn2-H2O
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;
				
				// [M+H]-sn1
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
				
				// [M+H]-C5H14NO4P (-183)
				sn6_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000;
				
				// [M+H]-sn1-H2O
				sn7_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(5)) * 100000)/100000;

				frag_smiles_mass.add(String.format("%.5f", sn1_mass) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass) + " " + sg.create(fragments.getAtomContainer(4)));
				frag_smiles_mass.add(String.format("%.5f", sn6_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(5)));
				frag_smiles_mass.add(String.format("%.5f", sn7_mass) + " " + sg.create(fragments.getAtomContainer(6)));					
				
				if(sn3_mass == sn5_mass){
				
					peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass + 1.0), 1.0));
					peaks.add(String.format("%.5f %5f 2 4 (1 1)",sn3_mass, 600.0/999.0));
					peaks.add(String.format("%.5f %5f 3 6 (1 1)",sn4_mass, 600.0/999.0));
					peaks.add(String.format("%.5f %5f 5 (1)",sn6_mass, 400.0/999.0));
				
				}else{
				
					peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass), 1.0));
					peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass, 600.0/999.0));
					peaks.add(String.format("%.5f %5f 3 (1)",sn4_mass, 600.0/999.0));
					peaks.add(String.format("%.5f %5f 4 (1)",sn5_mass, 600.0/999.0));
					peaks.add(String.format("%.5f %5f 5 (1)",sn6_mass, 400.0/999.0));
					peaks.add(String.format("%.5f %5f 6 (1)",sn7_mass, 600.0/999.0));
				
				
				}

				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);
				
				break;

			
			case _1_LYSOPHOSPHATIDYLCHOLINES:
				
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				adductType.add("[M+H]+");
				// [M+H]-H2O (-18)
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				
				// [M+H]-sn1
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				
				// [M+H]-sn1-H2O
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
				
				// C5H15NO4P m/z=184
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;			

				frag_smiles_mass.add(String.format("%.5f", sn1_mass) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass) + " " + sg.create(fragments.getAtomContainer(3)));

				peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass), 1.0));
				peaks.add(String.format("%.5f %5f 1 (1)",sn2_mass, 10.0/999.0));
				peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass, 10.0/999.0));
				peaks.add(String.format("%.5f %5f 3 (1)",sn4_mass, 300.0/999.0));
				
				s_peaks = String.format("MW: %.5f", mass + 1.0  ) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);				
				
				break;

//			case _2_LYSOPHOSPHATIDYLCHOLINES:
//				
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//
//				System.out.println(sn2_mass);
//
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//
//				peaks.add(String.format("%.5f %4d \"[M+H]-H2O (-18)\"",(mass - 18.0), 999));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn2\"",(mass - sn2_mass + 1), 10));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn2-H20\"",(mass - sn2_mass - 18 + 1), 10));
//				
//				 // 184.15087533864045 was generated by creating a molecule of phosphocholine "C[N+](C)(C)CCOP(O)(O)=O"
//				// with CDK and calulating the natural exact mass with AtomContainerManipulator
//				peaks.add(String.format("%.5f %4d \"C5H15NO4P m/z=184\"",(184.15087533864045), 300));
//				
//				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
//						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);					
//				break;
//				
			case PLASMENYLPHOSPHATIDYLCHOLINES:
				
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l))* 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				
				adductType.add("[M+H]+");
				// [M+H]-C5H14NO4P (-183)
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				// [M+H]-sn2
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				// [M+H]-sn1 (alkenyl ether loss)
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
				// [M+H]-sn2-H2O
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
				// [M+H]-sn1-C3H9N (-59)
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;

				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass) + " " + sg.create(fragments.getAtomContainer(4)));
				
				peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass), 10.0/999.0));
				peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass), 200.0/999.0));
				peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass), 999.0/999.0));
				peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass), 10.0/999.0));	
				peaks.add(String.format("%.5f %5f 4 (1)",(sn5_mass), 100.0/999.0));


				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);	
				System.out.println(s_peaks);

				break;
				
			case PHOSPHATIDYLETHANOLAMINES:
				
				// e.g.:[M+H]+; GPEtn(10:0/11:0)
				// [M+H]-C2H8NO4P (-141); [M+H]-sn1; [M+H]-sn2; [M+H]-sn1-H2O; [M+H]-sn2-H2O; sn2-O; sn1-O
				
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l))* 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				adductType.add("[M+H]+");
				// [M+H]-H2O (-18)
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				// [M+H]-sn1
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
				// [M+H]-sn2
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(5)) * 100000)/100000;
				// [M+H]-sn1-H2O
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(7)) * 100000)/100000;
				// [M+H]-sn2-H2O
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(9)) * 100000)/100000;
				// [M+H]-C2H8NO4P (-141)
				sn6_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				// sn2-O
				sn7_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000;
				// sn1-O
				sn8_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;

				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(5)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass) + " " + sg.create(fragments.getAtomContainer(7)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass) + " " + sg.create(fragments.getAtomContainer(9)));	
				frag_smiles_mass.add(String.format("%.5f", sn6_mass) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn7_mass) + " " + sg.create(fragments.getAtomContainer(6)));
				frag_smiles_mass.add(String.format("%.5f", sn8_mass) + " " + sg.create(fragments.getAtomContainer(4)));
				
				// LipidBlast reports conflicting m/z values for [M+H]-sn1, [M+H]-sn1-H2O, [M+H]-sn2, and [M+H]-sn2-H2O
				
				if(sn8_mass == sn7_mass){
					peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass), 1.0/999.0));
					peaks.add(String.format("%.5f %5f 1 2 (1 1)",(sn2_mass + 1.0), 1.0));
					peaks.add(String.format("%.5f %5f 3 4 (1 1)",(sn4_mass), 1.0));
					peaks.add(String.format("%.5f %5f 5 (1)",(sn6_mass), 1.0/999.0));
					peaks.add(String.format("%.5f %5f 6 7 (1 1)",(sn7_mass), 1.0));			
				
				}else{	
					peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass), 1.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass + 1.0), 1.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass + 1.0, 1.0/999.0));
					peaks.add(String.format("%.5f %5f 3 (1)",sn4_mass, 1.0/999.0));
					peaks.add(String.format("%.5f %5f 4 (1)",sn5_mass, 1.0/999.0));
					peaks.add(String.format("%.5f %5f 5 (1)",sn6_mass, 1.0));
					peaks.add(String.format("%.5f %5f 6 (1)",sn7_mass, 1.0/999.0));
					peaks.add(String.format("%.5f %5f 7 (1)",sn8_mass, 1.0/999.0));					
				}
				
				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
						"Comment: " + String.format("Parent= %.5f", mass - 1.0)  + "; [M+H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);			
				break;
				
				
			// e.g.: LysoPE   PE(16:0/0:0)
			case _1_LYSOPHOSPHATIDYLETHANOLAMINES:
			
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l))* 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				adductType.add("[M+H]+");
				
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000; // [M+H]-H2O (-18)
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000; // [M+H]-(C2NH5+H20) (-61)
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000; // [M+H]-C3H8NO6P (-141)
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000; // [M+H]-sn1
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(8)) * 100000)/100000; // [M+H]-sn1-H2O
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(6)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(8)));
				
				peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass + 1.0), 1.0));
				peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass + 1.0), 200.0/999.0));
				peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass + 1.0), 1.0));
				peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass + 1.0), 10.0/999.0));	
				peaks.add(String.format("%.5f %5f 4 (1)",(sn5_mass + 1.0), 10.0/999.0));


				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);	
				System.out.println(s_peaks);
				break;				
			
			// e.g.: LysoPE   PE(P-16:0/0:0) or 1-1Z-alkenylphosphoethanolamine
			case  _1_LYSOPLASMENYL_ETHANOLAMINES:
			
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l))* 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				adductType.add("[M+H]+");
				
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000; // [M+H]-H2O (-18)
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000; // [M+H]-(C2NH5+H20) (-61)
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000; // [M+H]-C3H8NO6P (-141)
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000; // [M+H]-sn1
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(8)) * 100000)/100000; // [M+H]-sn1-H2O
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(6)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(8)));
				
				peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass + 1.0), 1.0));
				peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass + 1.0), 200.0/999.0));
				peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass + 1.0), 1.0));
				peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass + 1.0), 10.0/999.0));	
				peaks.add(String.format("%.5f %5f 4 (1)",(sn5_mass + 1.0), 10.0/999.0));


				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);	
				System.out.println(s_peaks);
				break;
				
				
			//	 e.g.: LysoPE   PE(O-16:0/0:0) or 1-1Z-alkylphosphoethanolamine				
			case _1_LYSOPLASMANYL_ETHANOLAMINES:
				
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l))* 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				adductType.add("[M+H]+");
				
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000; // [M+H]-H2O (-18)
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000; // [M+H]-(C2NH5+H20) (-61)
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000; // [M+H]-C3H8NO6P (-141)
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000; // [M+H]-sn1
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(8)) * 100000)/100000; // [M+H]-sn1-H2O
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(6)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(8)));
				
				peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass + 1.0), 1.0));
				peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass + 1.0), 200.0/999.0));
				peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass + 1.0), 1.0));
				peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass + 1.0), 10.0/999.0));	
				peaks.add(String.format("%.5f %5f 4 (1)",(sn5_mass + 1.0), 10.0/999.0));


				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);	
				System.out.println(s_peaks);				
			break;				
				
//			case _2_LYSOPHOSPHATIDYLETHANOLAMINES:
//				
//				System.out.println(fragments.getAtomContainerCount());
//				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
//					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l))* 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
//				}
//				adductType.add("[M+H]+");
//				
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
//				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;
//				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(5)) * 100000)/100000;
//				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(7)) * 100000)/100000;
//				
//				frag_smiles_mass.add(String.format("%.5f", sn1_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(2)));
//				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(4)));
//				frag_smiles_mass.add(String.format("%.5f", sn4_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(5)));
//				frag_smiles_mass.add(String.format("%.5f", sn5_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(7)));
//				
//				peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass + 1.0), 1.0));
//				peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass + 1.0), 200.0/999.0));
//				peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass + 1.0), 999.0/999.0));
//				peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass + 1.0), 10.0/999.0));	
//				peaks.add(String.format("%.5f %5f 4 (1)",(sn5_mass + 1.0), 10.0));
//
//
//				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
//						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);	
//				System.out.println(s_peaks);
//				break;			
				
			// e.g.: plasmenyl-PE 18:0; [M+H]+; PE(P-16:0/2:0)
			case PLASMENYLPHOSPHATIDYLETHANOLAMINES:
				
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l))* 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				adductType.add("[M+H]+");
				
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000; // [M+H]-H2O (-18)
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000; //sn1 ether + C2H8NO3P (+124)
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000; // [M+H]-C2H8NO4P (-141)
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000; // sn1 ether +C2H8NO3P-H3PO4
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000; // [M+H]-C2H8NO4P-sn2
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass) + " " + sg.create(fragments.getAtomContainer(4)));
				
				peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass), 100.0/999.0));
				peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass), 200.0/999.0));
				peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass), 30.0/999.0));
				peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass), 150.0/999.0));	
				peaks.add(String.format("%.5f %5f 4 (1)",(sn5_mass), 200.0/999.0));


				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
						"Comment: " + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);	
				System.out.println(s_peaks);
				
				break;				
			
			
			
			case PHOSPHATIDYLSERINES:
				// GPSer(2:0/2:0)
				
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				
				adductType.add("[M+H]+");
				
				//[M+H]-sn1
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				//[M+H]-sn1-H2O
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
				// [M+H]-C3H5NO2 (-87)
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(5)) * 100000)/100000;	
		
				//[M+H]-sn2
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000;
				//[M+H]-sn2-H2O
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(8)) * 100000)/100000;
				//[M+H]-C3H8NO6P (-185)
				sn6_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(11)) * 100000)/100000;

				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 2.0) + " " + sg.create(fragments.getAtomContainer(5)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass + 2.0) + " " + sg.create(fragments.getAtomContainer(6)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass) + " " + sg.create(fragments.getAtomContainer(8)));
				frag_smiles_mass.add(String.format("%.5f", sn6_mass) + " " + sg.create(fragments.getAtomContainer(11)));
				
				if(sn1_mass == sn4_mass){
					peaks.add(String.format("%.5f %5f 0 3 (1)",(sn1_mass + 2.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 1 4 (1)",sn2_mass, 200.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass + 2.0, 400.0/999.0));
					peaks.add(String.format("%.5f %5f 5 (1)",sn6_mass, 999.0/999.0));					
				}else{
					
					peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass + 1.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)",sn2_mass, 200.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass + 2.0, 400.0/999.0));
					peaks.add(String.format("%.5f %5f 3 (1)",sn4_mass + 2.0, 200.0/999.0));
					peaks.add(String.format("%.5f %5f 4 (1)",sn5_mass, 200.0/999.0));
					peaks.add(String.format("%.5f %5f 5 (1)",sn6_mass, 999.0/999.0));					
				}

				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
						"Comment: "  + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]+"+ "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);
				
				break;
				
				
//			case SPHINGOMYELINS:
//
//				// MAKE SURE THE MOLECULE CLEANER WORKS. E.G. SM(d18:0/16:0)	
//				//[H][C@@](O)(CCCCCCCCCCCCCCC)[C@]([H])(COP(O)(=O)OCC[N+](C)(C)C)NC(=O)CCCCCCCCCCCCCCC
//				// THE FREE O FROM PHOSPHATE MUST BE OX1-. SEE CLEANMOLECULE
//				peaks.add(String.format("%.5f %4d \"[M+]-H2O (-18)\"",(mass - 18), 999));
//				peaks.add(String.format("%.5f %4d \"[M+]-C3H9N (-59)\"",(mass - 59), 10));
//				peaks.add(String.format("%.5f %4d \"[M+] (-18 -59)\"",(mass - 18 - 59), 50));
//				peaks.add(String.format("%.5f %4d \"[M+]-C5H14NO4P (-183)\"",(mass - 183), 20));
//				
//				s_peaks = String.format("MW: %.5f", mass) + "\n" + String.format("PRECURSORMZ: %.5f",mass ) + "\n" + 
//						"Comment: "  + String.format("Parent= %.5f", mass)  + "; [M]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//				
//				break;
//			
			case PHOSPHATIDIC_ACIDS:

				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				
				adductType.add("[M+Na2-H]+");
				
				// PROBLEM HERE: MASS IS 2 less than reported by lipidblast. m/z are ca. 3 less.
				// [M+Na2-H]-sn1
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				// [M+Na2-H]-sn1-H
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
				// [M+Na2-H]-sn2
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;	
				// [M+Na2-H]-sn2-H
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000;
			
				frag_smiles_mass.add(String.format("%.5f", sn1_mass + 46 - 2.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 46 - 2.0) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass  + 46 - 2.0) + " " + sg.create(fragments.getAtomContainer(4)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass + 46 - 2.0) + " " + sg.create(fragments.getAtomContainer(6)));
				
				if(sn1_mass == sn3_mass){
					peaks.add(String.format("%.5f %5f 0 2 (1)",(sn1_mass + 46 - 2.0), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 1 3 (1)",sn2_mass + 46 - 2.0, 999.0/999.0));
			
				}else{
					
					peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass + 46 - 2.0), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)",sn2_mass + 46 - 2.0, 999.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass + 46 - 2.0, 500.0/999.0));
					peaks.add(String.format("%.5f %5f 3 (1)",sn4_mass + 46 - 2.0, 999.0/999.0));				
				}

				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
						"Comment: "  + String.format("Parent= %.5f", mass + 1.0)  + "; [M+H]-"+ "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);
			
				break;
				
			case _1_LYSOPHOSPHATIDIC_ACIDS:

				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}

				adductType.add("[M+H]+");
				
				//[M+H]-H2O (-18)
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				//[M+H]-sn1
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				// frag. C3H7O5P (155)
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;	
				//[M+H]-H2O-C3H7O5P
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(3)));

				peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass + 1.0), 200.0/999.0));
				peaks.add(String.format("%.5f %5f 1 (1)",sn2_mass + 1.0, 50.0/999.0));
				peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass + 1.0, 999.0/999.0));
				peaks.add(String.format("%.5f %5f 3 (1)",sn4_mass + 1.0, 500.0/999.0));
				
				s_peaks = String.format("MW: %.5f", mass + 1) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1) + "\n" + 
						"Comment: "  + String.format("Parent= %.5f",  mass + 1)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);				
				break;
				
			case _1_O_ALKENYL_GLYCEROPHOSPHATES:

				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}

				adductType.add("[M+H]+");
				
				//[M+H]-H2O (-18)
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				//[M+H]-sn1
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				// frag. C3H7O5P (155)
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;	
				//[M+H]-H2O-C3H7O5P
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(3)));

				peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass + 1.0), 200.0/999.0));
				peaks.add(String.format("%.5f %5f 1 (1)",sn2_mass + 1.0, 50.0/999.0));
				peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass + 1.0, 999.0/999.0));
				peaks.add(String.format("%.5f %5f 3 (1)",sn4_mass + 1.0, 500.0/999.0));
				
				s_peaks = String.format("MW: %.5f", mass + 1) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1) + "\n" + 
						"Comment: "  + String.format("Parent= %.5f",  mass + 1)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);				
				break;				
				
//			case _2_LYSOPHOSPHATIDIC_ACIDS:
//				
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				
//				System.out.println(mass + "\t" + sn1_mass + "\t" + sn2_mass);
//				
//				frag_smiles_mass.add(sn1_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				frag_smiles_mass.add(sn2_mass + "\t" + sg.create(fragments.getAtomContainer(1)));
//	
//				peaks.add(String.format("%.5f %4d \"[M+H]-H20 (-18)\"",(mass + 1 - 18),200));
//				peaks.add(String.format("%.5f %4d \"[M+H]-sn2\"",(mass + 1 - sn2_mass),50));
//				peaks.add(String.format("%.5f %4d \"frag. C3H7O5P (155)\"", sn1_mass, 999));
//				peaks.add(String.format("%.5f %4d \"[M+H]-H2O-C3H7O5P\"",(mass + 1 - 18 - 155),500));
//	
//				
//				
//				s_peaks = String.format("MW: %.5f", mass + 1) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1) + "\n" + 
//						"Comment: "  + String.format("Parent= %.5f",  mass + 1)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);				
//				break;									
//				
			case PHOSPHATIDYLINOSITOLS:
				
				// GPIns(2:0/2:0)
				// [M-H]-sn1; [M-H]-sn2; [M-H]-sn1-H2O; [M-H]-sn2-H2O; [M-H]-sn1-C6H12O6; [M-H]-sn2-C6H12O6; sn2 FA; sn1 FA
				
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				adductType.add("[M-H]-");
				
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000; // [M-H]-sn1
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000; // [M-H]-sn2
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000; // [M-H]-sn1-H2O
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000; // [M-H]-sn2-H2O
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000; // [M-H]-sn1-C6H12O6
				sn6_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(5)) * 100000)/100000; // [M-H]-sn2-C6H12O6
				sn7_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000; // sn1 FA
				sn8_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(7)) * 100000)/100000; // sn2 FA
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass) + " " + sg.create(fragments.getAtomContainer(4)));
				frag_smiles_mass.add(String.format("%.5f", sn6_mass) + " " + sg.create(fragments.getAtomContainer(5)));
				frag_smiles_mass.add(String.format("%.5f", sn7_mass) + " " + sg.create(fragments.getAtomContainer(6)));
				frag_smiles_mass.add(String.format("%.5f", sn8_mass) + " " + sg.create(fragments.getAtomContainer(7)));
				
				if(sn7_mass == sn8_mass){
					peaks.add(String.format("%.5f %5f 0 1 (1 1)",(sn1_mass), 999.0/999.0));
					peaks.add(String.format("%.5f %5f 2 3 (1 1)",sn5_mass, 200.0/999.0));
					peaks.add(String.format("%.5f %5f 4 5 (1 1)",sn3_mass, 400.0/999.0));
					peaks.add(String.format("%.5f %5f 6 7 (1 1)",sn7_mass, 999.0/999.0));					

				}else{
					peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass), 999.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)",sn2_mass, 999.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass, 200.0/999.0));
					peaks.add(String.format("%.5f %5f 3 (1)",sn4_mass, 200.0/999.0));
					peaks.add(String.format("%.5f %5f 4 (1)",sn5_mass, 400.0/999.0));
					peaks.add(String.format("%.5f %5f 5 (1)",sn6_mass, 400.0/999.0));
					peaks.add(String.format("%.5f %5f 6 (1)",sn7_mass, 999.0/999.0));
					peaks.add(String.format("%.5f %5f 7 (1)",sn8_mass, 999.0/999.0));
				}

				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
						"Comment: " + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);				
				
				break;
				
				
			case PHOSPHATIDYLGLYCEROLS:
				
				// Name: PG 12:0; [M-H]-; GPGro(2:0/10:0)
				
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				
				adductType.add("[M-H]-");
				
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;  // [M-H]-sn1
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;  // [M-H]-sn1-H2O
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;  // [M-H]-sn1-C3H8O3				
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;	// [M-H]-sn2		
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;  // [M-H]-sn2-H2O
				sn6_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(5)) * 100000)/100000; // [M-H]-sn2-C3H8O3				
				sn7_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(7)) * 100000)/100000; // sn2 FA
				sn8_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000;	// sn1 FA

				frag_smiles_mass.add(String.format("%.5f", sn1_mass) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass) + " " + sg.create(fragments.getAtomContainer(4)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn6_mass) + " " + sg.create(fragments.getAtomContainer(5)));
				frag_smiles_mass.add(String.format("%.5f", sn7_mass) + " " + sg.create(fragments.getAtomContainer(7)));
				frag_smiles_mass.add(String.format("%.5f", sn8_mass) + " " + sg.create(fragments.getAtomContainer(6)));
				
				if(sn7_mass == sn8_mass){
					peaks.add(String.format("%.5f %5f 0 3 (1 1)",(sn1_mass), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 1 4 (1 1)",(sn2_mass), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 2 5 (1 1)",(sn3_mass), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 6 7 (1 1)",(sn7_mass), 999.0/999.0));
				}else{
					
					peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)",sn2_mass, 200.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass, 200.0/999.0));
					peaks.add(String.format("%.5f %5f 3 (1)",sn4_mass, 200.0/999.0));
					peaks.add(String.format("%.5f %5f 4 (1)",sn5_mass, 200.0/999.0));
					peaks.add(String.format("%.5f %5f 5 (1)",sn6_mass, 200.0/999.0));
					peaks.add(String.format("%.5f %5f 6 (1)",sn7_mass, 999.0/999.0));
					peaks.add(String.format("%.5f %5f 7 (1)",sn8_mass, 999.0/999.0));
					
				}

				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
						"Comment: " + String.format("Parent= %.5f", mass - 1.0)  + "; [M-H]-" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);
				
				break;
						
				
//			case CARDIOLIPINS:
//				
//				System.out.println(fragments.getAtomContainerCount());
//				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
//					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
//				}
//				
//				adductType.add("[M-2H](2-)");
//				
//				// [M-2H](2-)
//				// In most cases, the [Mâˆ’2H]2âˆ’ ion is more abundant than the [Mâˆ’H]âˆ’ ion. In contrast to ESI-MS analysis, MALDI-MS analysis
//				// in the negative-ion mode shows predominant singly charged deprotonated CL species
//				// Comprehensive Mass Spectrometry of Lipids. Chap 7.8; p.188.
//				// 0 2 4 7 11 14 17 20 26 25 23 24
//				
//								
//				// [M-2H](2-) -sn1 (monolyso)
//				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				// [M-2H](2-) -sn3 (monolyso)
//				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;	
//				// [M-2H](2-) -(sn1+sn2 dilyso)
//				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;	
//				// [M-2H](2-) -(sn3+sn4 dilyso)
//				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(7)) * 100000)/100000;
//				// [sn3+C3H6PO4-H](-) (137.00)
//				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(11)) * 100000)/100000;
//				// [sn4+C3H6PO4-H](-) (137.00)
//				sn6_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(14)) * 100000)/100000;	
//				// [sn1+C3H6PO4-H](-) (137.00)
//				sn7_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(17)) * 100000)/100000;	
//				// [sn2+C3H6PO4-H](-) (137.00)
//				sn8_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(20)) * 100000)/100000;
//				// sn3 FA
//				sn9_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(25)) * 100000)/100000;
//				// sn4 FA
//				sn10_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(26)) * 100000)/100000;	
//				// sn1 FA
//				sn11_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(23)) * 100000)/100000;	
//				// sn2 FA
//				sn12_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(24)) * 100000)/100000;
//								
//				c1_smiles = sg.create(fragments.getAtomContainer(0));
//				c2_smiles = sg.create(fragments.getAtomContainer(2));
//				c3_smiles = sg.create(fragments.getAtomContainer(4));
//				c4_smiles = sg.create(fragments.getAtomContainer(7));
//				c5_smiles = sg.create(fragments.getAtomContainer(11));
//				c6_smiles = sg.create(fragments.getAtomContainer(14));
//				c7_smiles = sg.create(fragments.getAtomContainer(17));
//				c8_smiles = sg.create(fragments.getAtomContainer(20));
//				c9_smiles = sg.create(fragments.getAtomContainer(25));
//				c10_smiles = sg.create(fragments.getAtomContainer(26));
//				c11_smiles = sg.create(fragments.getAtomContainer(23));
//				c12_smiles = sg.create(fragments.getAtomContainer(24));
//
//				frag_smiles_mass.add(String.format("%.5f", (sn1_mass - 2.0)/2.0) + " " + c1_smiles);
//				frag_smiles_mass.add(String.format("%.5f", (sn2_mass - 2.0)/2.0) + " " + c2_smiles);
//				frag_smiles_mass.add(String.format("%.5f", (sn3_mass - 2.0)/2.0) + " " + c3_smiles);
//				frag_smiles_mass.add(String.format("%.5f", (sn4_mass - 2.0)/2.0) + " " + c4_smiles);
//				frag_smiles_mass.add(String.format("%.5f", sn5_mass) + " " + c5_smiles);
//				frag_smiles_mass.add(String.format("%.5f", sn6_mass) + " " + c6_smiles);
//				frag_smiles_mass.add(String.format("%.5f", sn7_mass) + " " + c7_smiles);
//				frag_smiles_mass.add(String.format("%.5f", sn8_mass) + " " + c8_smiles);
//				frag_smiles_mass.add(String.format("%.5f", sn9_mass) + " " + sn9_mass);
//				frag_smiles_mass.add(String.format("%.5f", sn10_mass) + " " + c10_smiles);
//				frag_smiles_mass.add(String.format("%.5f", sn11_mass) + " " + c11_smiles);
//				frag_smiles_mass.add(String.format("%.5f", sn12_mass) + " " + c12_smiles);
//					
//				System.out.println("\n<---- ----->\n");
//				System.out.println(sn11_mass + "\t" + c11_smiles);
//				System.out.println(sn12_mass + "\t" + c12_smiles);
//				System.out.println(sn9_mass + "\t" + sn9_mass);
//				System.out.println(sn10_mass + "\t" + c10_smiles);
//				
// 				if((sn9_mass == sn10_mass) && (sn9_mass == sn11_mass) && (sn9_mass ==sn12_mass)){
////					// e.g. 14:0/14:0/14:0/14:0
//					peaks.add(String.format("%.5f %5f 0 1 (1 1)",((sn1_mass - 2.0)/2.0), 500.0/999.0));
//					peaks.add(String.format("%.5f %5f 2 3 (1 1)",(sn3_mass)/2.0, 100.0/999.0));
//					peaks.add(String.format("%.5f %5f 4 5 6 7 (1 1 1 1)",(sn5_mass - 1.0), 400.0/999.0));
//					peaks.add(String.format("%.5f %5f 8 9 10 11 (1 1 1 1)",(sn9_mass), 999.0/999.0));
//	
//					
//				}
// 			
//				else if((sn11_mass == sn12_mass) && (sn11_mass == sn9_mass) && (c11_smiles != c10_smiles)){
//					// e.g. 14:0/14:0/14:0/16:0
//			
//					peaks.add(String.format("%.5f %5f 0 1 (1 1)",((sn1_mass - 2.0)/2.0), 500.0/999.0));
//					peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass)/2.0, 100.0/999.0));
//					peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass)/2.0, 100.0/999.0));
//
//					peaks.add(String.format("%.5f %5f 7 (1)",(sn6_mass - 1.0), 400.0/999.0));
//					peaks.add(String.format("%.5f %5f 4 5 6 (1 1 1 )",(sn5_mass - 1.0), 400.0/999.0));
//					peaks.add(String.format("%.5f %5f 11 (1)",(sn10_mass), 999.0/999.0));
//					peaks.add(String.format("%.5f %5f 8 9 10 (1 1 1)",(sn9_mass), 999.0/999.0));
//
//						
//				} 
// 			//  sn1 FA(sn11_mass); sn2 FA (sn12_mass); sn3 FA (sn9_mass); sn4 FA (sn10_mass)
//				else if((sn11_mass == sn12_mass) && (sn11_mass == sn10_mass) && (sn9_mass != sn10_mass)){
//					// e.g. 14:0/14:0/16:0/14:0
//
//					peaks.add(String.format("%.5f %5f 0 (1)",((sn1_mass - 2.0)/2.0), 500.0/999.0));
//					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass - 2.0)/2.0, 500.0/999.0));
//					peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass)/2.0, 100.0/999.0));
//					peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass)/2.0, 100.0/999.0));				
//					peaks.add(String.format("%.5f %5f 4 (1)",(sn5_mass - 1.0), 400.0/999.0));
//					peaks.add(String.format("%.5f %5f 5 6 7 (1 1 1)",(sn6_mass - 1.0), 400.0/999.0));
//					peaks.add(String.format("%.5f %5f 8 (1)",(sn9_mass), 999.0/999.0));
//					peaks.add(String.format("%.5f %5f 9 10 11 (1 1 1)",(sn10_mass), 999.0/999.0));
//
//				} 
// 				else if((sn11_mass != sn12_mass) && (sn11_mass == sn9_mass) && (sn11_mass == sn10_mass)){
//					// e.g. CL(22:6/22:5/22:6/22:6)
//				
//					peaks.add(String.format("%.5f %5f 0 1 (1 1)",((sn1_mass - 2.0)/2.0), 500.0/999.0));
//					peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass)/2.0, 100.0/999.0));
//					peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass)/2.0, 100.0/999.0));						
//					peaks.add(String.format("%.5f %5f 6 (1)",(sn7_mass - 1.0), 400.0/999.0));
//					peaks.add(String.format("%.5f %5f 4 5 7 (1 1 1)",(sn8_mass - 1.0), 400.0/999.0));
//					peaks.add(String.format("%.5f %5f 11 (1)",(sn12_mass), 999.0/999.0));		
//					peaks.add(String.format("%.5f %5f 8 9 10 (1 1 1)",(sn9_mass), 999.0/999.0));
//					
//				} 
// 				else if((sn11_mass != sn12_mass) && (sn12_mass == sn9_mass) && (sn12_mass == sn10_mass)){
//					// e.g. 16:0/14:0/14:0/14:0
//
// 					peaks.add(String.format("%.5f %5f 0 (1)",((sn1_mass - 2.0)/2.0), 500.0/999.0)); // [M-2H](2-) -sn1 (monolyso)
// 					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass - 2.0)/2.0, 500.0/999.0)); // [M-2H](2-) -sn3 (monolyso)	
// 					peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn1+sn2 dilyso)
// 					peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn3+sn4 dilyso)
// 					peaks.add(String.format("%.5f %5f 6 (1)",(sn7_mass - 1.0), 400.0/999.0)); // [sn1+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 4 5 6 (1 1 1)",(sn5_mass - 1.0), 400.0/999.0)); // [sn3+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 10 (1)",(sn11_mass), 999.0/999.0)); // sn1 FA
// 					peaks.add(String.format("%.5f %5f 8 9 11 (1)",(sn9_mass), 999.0/999.0)); // sn3 FA
//
//				}
// 				
// 				else if((sn11_mass != sn12_mass) && (sn10_mass == sn9_mass) && (sn11_mass != sn10_mass)){
//					// e.g. CL(16:1/14:0/18:3/18:3)
//				
// 					peaks.add(String.format("%.5f %5f 0 (1)",((sn1_mass - 2.0)/2.0), 500.0/999.0)); // [M-2H](2-) -sn1 (monolyso)
// 					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass - 2.0)/2.0, 500.0/999.0)); // [M-2H](2-) -sn3 (monolyso)
// 					peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn1+sn2 dilyso)
// 					peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn3+sn4 dilyso)
// 					peaks.add(String.format("%.5f %5f 4 5 (1 1)",(sn5_mass - 1.0), 400.0/999.0)); // [sn3+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 6 (1)",(sn7_mass - 1.0), 400.0/999.0)); // [sn1+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 7 (1)",(sn8_mass - 1.0), 400.0/999.0)); // [sn2+C3H6PO4-H](-) (137.00)61
// 					peaks.add(String.format("%.5f %5f 8 9 (1 1)",(sn9_mass), 999.0/999.0)); // sn3 FA
// 					peaks.add(String.format("%.5f %5f 10 (1)",(sn11_mass), 999.0/999.0)); // sn1 FA
// 					peaks.add(String.format("%.5f %5f 11 (1)",(sn12_mass), 999.0/999.0)); // sn2 FA
//	
//				} 
// 				else if((sn12_mass == sn10_mass) && (sn11_mass != sn12_mass) && (sn11_mass != sn9_mass)
//						 && (sn12_mass != sn9_mass)){
//					// e.g. CL(16:0/14:0/20:2/14:0)
//
// 					peaks.add(String.format("%.5f %5f 0 (1)",((sn1_mass - 2.0)/2.0), 500.0/999.0)); // [M-2H](2-) -sn1 (monolyso)
// 					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass - 2.0)/2.0, 500.0/999.0)); // [M-2H](2-) -sn3 (monolyso)
// 					peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn1+sn2 dilyso)
// 					peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn3+sn4 dilyso)
// 					peaks.add(String.format("%.5f %5f 4 (1)",(sn5_mass - 1.0), 400.0/999.0)); // [sn3+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 6 (1)",(sn7_mass - 1.0), 400.0/999.0)); // [sn1+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 5 7 (1 1)",(sn8_mass - 1.0), 400.0/999.0)); // [sn2+C3H6PO4-H](-) (137.00) || [sn4+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 8 (1)",(sn9_mass), 999.0/999.0)); // sn3 FA
// 					peaks.add(String.format("%.5f %5f 10 (1)",(sn11_mass), 999.0/999.0)); // sn1 FA
// 					peaks.add(String.format("%.5f %5f 9 11 (1 1)",(sn12_mass), 999.0/999.0)); // sn2 FA || sn4 FA
//	
//					
//				} 
// 				else if((sn12_mass == sn9_mass) && (sn11_mass != sn12_mass) && (sn11_mass != sn10_mass)
//				 && (sn12_mass != sn10_mass)){
//						// e.g. CL(18:0/16:1/16:1/14:0)
// 					
// 					peaks.add(String.format("%.5f %5f 0 (1)",((sn1_mass - 2.0)/2.0), 500.0/999.0)); // [M-2H](2-) -sn1 (monolyso)
// 					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass - 2.0)/2.0, 500.0/999.0)); // [M-2H](2-) -sn3 (monolyso)
// 					peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn1+sn2 dilyso)
// 					peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn3+sn4 dilyso)
// 					peaks.add(String.format("%.5f %5f 6 (1)",(sn7_mass - 1.0), 400.0/999.0)); // [sn1+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 4 7 (1)",(sn8_mass - 1.0), 400.0/999.0)); // [sn2+C3H6PO4-H](-) (137.00) || [sn3+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 5 (1)",(sn6_mass - 1.0), 400.0/999.0)); // [sn4+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 10 (1)",(sn11_mass), 999.0/999.0)); // sn1 FA
// 					peaks.add(String.format("%.5f %5f 8 11 (1)",(sn12_mass), 999.0/999.0)); // sn2 FA || sn3 FA
// 					peaks.add(String.format("%.5f %5f 9 (1)",(sn10_mass), 999.0/999.0)); // sn4 FA
//
//				} 
// 				else if((sn11_mass == sn12_mass) && (sn11_mass != sn9_mass) && (sn11_mass != sn10_mass) && (sn9_mass != sn10_mass) ){
// 					// e.g. CL(14:0/14:0/16:0/18:1)
// 					
// 					peaks.add(String.format("%.5f %5f 0 (1)",((sn1_mass - 2.0)/2.0), 500.0/999.0)); // [M-2H](2-) -sn1 (monolyso)
// 					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass - 2.0)/2.0, 500.0/999.0)); // [M-2H](2-) -sn3 (monolyso)
// 					peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn1+sn2 dilyso)
// 					peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn3+sn4 dilyso)
// 					peaks.add(String.format("%.5f %5f 4 (1)",(sn5_mass - 1.0), 400.0/999.0)); // [sn3+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 5 (1)",(sn6_mass - 1.0), 400.0/999.0)); // [sn4+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 6 7 (1 1)",(sn7_mass - 1.0), 400.0/999.0)); // [sn1+C3H6PO4-H](-) (137.00) || [sn2+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 8 (1)",(sn9_mass), 999.0/999.0)); // sn3 FA
// 					peaks.add(String.format("%.5f %5f 9 (1)",(sn10_mass), 999.0/999.0)); // sn4 FA 					
// 					peaks.add(String.format("%.5f %5f 10 11 (1 1)",(sn11_mass), 999.0/999.0)); // sn1 FA || sn2 FA
//
// 				} 
// 				else if((sn11_mass != sn12_mass) && (sn11_mass != sn9_mass) && (sn12_mass != sn9_mass) && (sn3_mass == sn4_mass) ){
// 					// e.g. CL(18:0/20:4/18:1/18:1)
// 					
// 					peaks.add(String.format("%.5f %5f 0 (1)",((sn1_mass - 2.0)/2.0), 500.0/999.0)); // [M-2H](2-) -sn1 (monolyso)
// 					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass - 2.0)/2.0, 500.0/999.0)); // [M-2H](2-) -sn3 (monolyso)
// 					peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn1+sn2 dilyso)
// 					peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn3+sn4 dilyso)
// 					peaks.add(String.format("%.5f %5f 4 5 (1 5)",(sn5_mass - 1.0), 400.0/999.0)); // [sn3+C3H6PO4-H](-) (137.00) || [sn4+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 6 (1)",(sn7_mass - 1.0), 400.0/999.0)); // [sn1+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 7 (1)",(sn8_mass - 1.0), 400.0/999.0)); // [sn2+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 8 9 (1 1)",(sn9_mass), 999.0/999.0)); // sn3 FA || sn4 FA
// 					peaks.add(String.format("%.5f %5f 10 (1)",(sn11_mass), 999.0/999.0)); // sn1 FA
// 					peaks.add(String.format("%.5f %5f 11 (1)",(sn12_mass), 999.0/999.0)); // sn2 FA				
//				
//	
// 				} 
// 				else if((sn11_mass != sn12_mass) && (sn11_mass != sn9_mass) && (sn9_mass != sn12_mass) && (sn9_mass == sn10_mass)){
// 					// e.g. CL(16:1/14:0/18:2/18:2)
// 					
// 					peaks.add(String.format("%.5f %5f 0 (1)",((sn1_mass - 2.0)/2.0), 500.0/999.0)); // [M-2H](2-) -sn1 (monolyso)
// 					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass - 2.0)/2.0, 500.0/999.0)); // [M-2H](2-) -sn3 (monolyso)
// 					peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn1+sn2 dilyso)
// 					peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn3+sn4 dilyso)			
// 					peaks.add(String.format("%.5f %5f 4 5 (1 1)",(sn5_mass - 1.0), 400.0/999.0)); // [sn3+C3H6PO4-H](-) (137.00) || [sn4+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 6 (1)",(sn7_mass - 1.0), 400.0/999.0)); // [sn1+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 7 (1)",(sn8_mass - 1.0), 400.0/999.0)); // [sn2+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 8 9 (1 1)",(sn9_mass), 999.0/999.0)); // sn3 FA || sn4 FA
// 					peaks.add(String.format("%.5f %5f 10 (1)",(sn11_mass), 999.0/999.0)); // sn1 FA
// 					peaks.add(String.format("%.5f %5f 11 (1)",(sn12_mass), 999.0/999.0)); // sn2 FA					
//
// 				} 
// 				else if((sn11_mass == sn12_mass) && (sn11_mass != sn9_mass) && (sn11_mass != sn10_mass) && (sn9_mass != sn10_mass)){
// 					// e.g. CL(18:2/18:2/16:1/14:0)
// 					
// 					peaks.add(String.format("%.5f %5f 0 (1)",((sn1_mass - 2.0)/2.0), 500.0/999.0)); // [M-2H](2-) -sn1 (monolyso)
// 					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass - 2.0)/2.0, 500.0/999.0)); // [M-2H](2-) -sn3 (monolyso)
// 					peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn1+sn2 dilyso)
// 					peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn3+sn4 dilyso)
// 					peaks.add(String.format("%.5f %5f 4 (1)",(sn5_mass - 1.0), 400.0/999.0)); // [sn3+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 5 (1)",(sn6_mass - 1.0), 400.0/999.0)); // [sn4+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 6 7 (1 1)",(sn7_mass - 1.0), 400.0/999.0)); // [sn1+C3H6PO4-H](-) (137.00) || [sn2+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 8 (1)",(sn9_mass), 999.0/999.0)); // sn3 FA
// 					peaks.add(String.format("%.5f %5f 9 (1)",(sn10_mass), 999.0/999.0)); // sn4 FA
// 					peaks.add(String.format("%.5f %5f 10 11 (1 1)",(sn11_mass), 999.0/999.0)); // sn1 FA || sn2 FA
// 					
//
// 				} 
// 				else if((sn1_mass == sn2_mass) && (sn2_mass != sn3_mass) && (sn3_mass == sn4_mass)){
//					// e.g. 16:0/14:0/14:0/16:0
//
// 					peaks.add(String.format("%.5f %5f 0 (1)",((sn1_mass - 2.0)/2.0), 500.0/999.0)); // [M-2H](2-) -sn1 (monolyso)
// 					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass - 2.0)/2.0, 500.0/999.0)); // [M-2H](2-) -sn3 (monolyso)
// 					peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn1+sn2 dilyso)
// 					peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn3+sn4 dilyso)
// 					peaks.add(String.format("%.5f %5f 4 7 (1 1)",(sn5_mass - 1.0), 400.0/999.0)); // [sn3+C3H6PO4-H](-) (137.00) || [sn2+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 5 6 (1 1)",(sn6_mass - 1.0), 400.0/999.0)); // [sn4+C3H6PO4-H](-) (137.00) || [sn1+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 8 11 (1 1)",(sn9_mass), 999.0/999.0)); // sn3 FA || sn2 FA
// 					peaks.add(String.format("%.5f %5f 9 10 (1 1)",(sn10_mass), 999.0/999.0)); // sn4 FA || sn1 FA
//	
// 				} 
// 				else if((sn11_mass != sn12_mass) && (sn11_mass != sn9_mass) && (sn11_mass != sn10_mass) && 
//						(sn12_mass != sn9_mass) && (sn12_mass != sn10_mass) && (sn9_mass != sn10_mass)){
//					// e.g. CL(16:1/14:0/18:1/18:3)
//
// 					peaks.add(String.format("%.5f %5f 0 (1)",((sn1_mass - 2.0)/2.0), 500.0/999.0)); // [M-2H](2-) -sn1 (monolyso)
// 					peaks.add(String.format("%.5f %5f 1 (1)",(sn2_mass - 2.0)/2.0, 500.0/999.0)); // [M-2H](2-) -sn3 (monolyso)
// 					peaks.add(String.format("%.5f %5f 2 (1)",(sn3_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn1+sn2 dilyso)
// 					peaks.add(String.format("%.5f %5f 3 (1)",(sn4_mass)/2.0, 100.0/999.0)); // [M-2H](2-) -(sn3+sn4 dilyso)
// 					peaks.add(String.format("%.5f %5f 4 (1)",(sn5_mass - 1.0), 400.0/999.0)); // [sn3+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 5 (1)",(sn6_mass - 1.0), 400.0/999.0)); // [sn4+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 6 (1)",(sn7_mass - 1.0), 400.0/999.0)); // [sn1+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 7 (1)",(sn8_mass - 1.0), 400.0/999.0)); // [sn2+C3H6PO4-H](-) (137.00)
// 					peaks.add(String.format("%.5f %5f 8 (1)",(sn9_mass), 999.0/999.0)); // sn3 FA
// 					peaks.add(String.format("%.5f %5f 9 (1)",(sn10_mass), 999.0/999.0)); // sn4 FA
// 					peaks.add(String.format("%.5f %5f 10 (1)",(sn11_mass), 999.0/999.0)); // sn1 FA
// 					peaks.add(String.format("%.5f %5f 11 (1)",(sn12_mass), 999.0/999.0)); // sn2 FA
//				}
//
//				s_peaks = String.format("MW: %.5f", (mass - 2.0)/2.0) + "\n" + String.format("PRECURSORMZ: %.5f",(mass - 2.0)/2.0) + "\n" + 
//						"Comment:" + String.format("Parent= %.5f", (mass - 2.0)/2.0)  + "; [M-2H](2-)" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);
//			
//				break;
				
			case CERAMIDE_1_PHOSPHATES:
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}

				adductType.add("[M+H]+");
				
				//[M+H]+
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				//[M+H]-H2O (-18)
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				// M+H]+ (-HPO3) (-79.96633)
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;	
				// [M+H]+ (-H3PO4) (-97.9769)
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
				// [M+H]+ (-H3PO4-H20)
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;
				// sn2 N
				sn6_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(5)) * 100000)/100000;
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(4)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass + 1.0) + " " + sg.create(fragments.getAtomContainer(5)));
				
				
				peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass + 1.0), 200.0/999.0));
				peaks.add(String.format("%.5f %5f 1 (1)",sn2_mass + 1.0, 50.0/999.0));
				peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass + 1.0, 999.0/999.0));
				peaks.add(String.format("%.5f %5f 3 (1)",sn4_mass + 1.0, 500.0/999.0));
				peaks.add(String.format("%.5f %5f 2 (1)",sn5_mass + 1.0, 999.0/999.0));
				peaks.add(String.format("%.5f %5f 3 (1)",sn6_mass + 1.0, 500.0/999.0));
				
				s_peaks = String.format("MW: %.5f", mass + 1) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1) + "\n" + 
						"Comment: "  + String.format("Parent= %.5f",  mass + 1)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);				
				break;
				
			case SULFATIDES:

				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}

				adductType.add("[M-H]-");
				
				//[M-H]-H2O (-18)
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				//[M-H]-sn2
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				// [M-H]-sn2-H20
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;	
				// ion C6H9O8S- (241.00181)
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
				// ion SO4H- (96.95956)
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;
				
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass) + " " + sg.create(fragments.getAtomContainer(4)));

				peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass), 100.0/999.0));
				peaks.add(String.format("%.5f %5f 1 (1)",sn2_mass, 200.0/999.0));
				peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass, 200.0/999.0));
				peaks.add(String.format("%.5f %5f 3 (1)",sn4_mass, 999.0/999.0));
				peaks.add(String.format("%.5f %5f 4 (1)",sn5_mass, 999.0/999.0));
				
				s_peaks = String.format("MW: %.5f", mass - 1) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1) + "\n" + 
						"Comment: "  + String.format("Parent= %.5f",  mass - 1)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);				
				break;
				
				
//			case GANGLIOSIDES:
//	
//				double cer_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				System.out.println("cer_mass: " + cer_mass);
//				
//				frag_smiles_mass.add(cer_mass + "\t" + sg.create(fragments.getAtomContainer(0)));
//				
//				peaks.add(String.format("%.5f %4d \"[M-H]-\"",(mass - 1.0), 999));
//				peaks.add(String.format("%.5f %4d \"[M-H]-NeuAc-H\"",(mass - 1.0 - 293.27091181494916), 500));	
//				peaks.add(String.format("%.5f %4d \"[M-H]-Cer-C6H10O5\"",(cer_mass -1 + 164.15672906448447 -1 ), 200)); // The two (-1) represent H atoms rermoval
//				peaks.add(String.format("%.5f %4d \"ion ceramide\"",(cer_mass), 200));
//				peaks.add(String.format("%.5f %4d \"ion C11H16NO8- (290.08759)\"",290.08759, 400));
//				
//				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
//						"Comment:"  + String.format("Parent= %.5f", mass - 1.0) + "\n" + String.format("Num Peaks: %2d",peaks.size());
//				metadata.add(s_peaks);					
//				
//				break;
//				
//			case CHOLESTERYL_ESTERS:
//
//				peaks.add(String.format("%.5f %4d \"sterol frag. (369.352)\"",369.35213, 999));
//				peaks.add(String.format("%.5f %4d \"sterol frag. (175.148)\"",175.14868, 300));
//				peaks.add(String.format("%.5f %4d \"sterol frag. (161.133)\"",161.13303, 350));
//				peaks.add(String.format("%.5f %4d \"sterol frag. (147.117)\"",147.11738, 400));
//				peaks.add(String.format("%.5f %4d \"sterol frag. (135.117)\"",135.11738, 400));
//
//				s_peaks = String.format("MW: %.5f", mass + 18.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 18.0) + "\n" + 
//							"Comment:" + String.format("Parent= %.5f", mass + 18.0)  + "; [M+NH4]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);	
//				
//				
//				break;
//				
//			case CHOLESTERYL_ESTERS_LANOSTERYL_OR_ZYMOSTERYL:
//				
//				peaks.add(String.format("%.5f %4d \"sterol frag. (369.352)\"",369.35213, 999));
//				peaks.add(String.format("%.5f %4d \"sterol frag. C10H15  (135.117) || sterol frag. C11H15 (147.117) || sterol frag. C12H17 (161.133) || sterol frag. C13H19 (175.148) \"",0.00000, 300));
//
//				s_peaks = String.format("MW: %.5f", mass + 18.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 18.0) + "\n" + 
//							"Comment:" + String.format("Parent= %.5f", mass + 18.0)  + "; [M+NH4]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
//					metadata.add(s_peaks);	
//
//				break;		

			case  _1_MONOACYLGLYCEROLS:				
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}

				adductType.add("[M+Li]+");
				
				// [M+Li]+
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				// C3H8O3Li (99.06)
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				// C3H8O3Li-H20 (81.05)
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;	

				frag_smiles_mass.add(String.format("%.5f", sn1_mass + 7.0) + " " + (sg.create(fragments.getAtomContainer(0)) + ".[Li]" ));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 7.0) + " " + (sg.create(fragments.getAtomContainer(1)) + ".[Li]" ));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 7.0) + " " + (sg.create(fragments.getAtomContainer(2)) + ".[Li]"));

				peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass + 7.0), 600.0/999.0));
				peaks.add(String.format("%.5f %5f 1 (1)",sn2_mass + 7.0, 800.0/999.0));
				peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass + 7.0, 999.0/999.0));
				
				s_peaks = String.format("MW: %.5f", mass + 7.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 7.0) + "\n" + 
						"Comment: "  + String.format("Parent= %.5f",  mass + 7.0)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);	

				break;			

			case  _2_MONOACYLGLYCEROLS:
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}

				adductType.add("[M+Li]+");
				
				// [M+Li]+
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				// C3H8O3Li (99.06)
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				// C3H8O3Li-H20 (81.05)
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;	

				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass + 7.0) + " " + (sg.create(fragments.getAtomContainer(0)) + ".[Li]" ));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 7.0) + " " + (sg.create(fragments.getAtomContainer(1)) + ".[Li]" ));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 7.0) + " " + (sg.create(fragments.getAtomContainer(2)) + ".[Li]"));

				peaks.add(String.format("%.5f %5f 0 (1)",(sn1_mass + 7.0), 600.0/999.0));
				peaks.add(String.format("%.5f %5f 1 (1)",sn2_mass + 7.0, 800.0/999.0));
				peaks.add(String.format("%.5f %5f 2 (1)",sn3_mass + 7.0, 999.0/999.0));

				
				s_peaks = String.format("MW: %.5f", mass + 7.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 7.0) + "\n" + 
						"Comment: "  + String.format("Parent= %.5f",  mass + 7.0)  + "; [M+H]+" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);	

				break;
				
			case DIACYLGLYCEROLS:
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println(Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l))* 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				adductType.add("[M+Li]+");

//				[M+Li]+ 600
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
//				[M+Li]-H20 (-18) 200
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
//				[M+Li]-sn1 400
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
//				[M+Li]-sn1+H20 400
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
//				[M+Li]-sn2 400
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;
//				[M+Li]-sn2+H20 400
				sn6_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(5)) * 100000)/100000;
//				sn1+Li 999
				sn7_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000;
//				sn2+Li 999
				sn8_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(7)) * 100000)/100000;
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass + 7.0) + " " + sg.create(fragments.getAtomContainer(0)) + ".[Li]");
				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 7.0) + " " + sg.create(fragments.getAtomContainer(1)) + ".[Li]");
				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 7.0) + " " + sg.create(fragments.getAtomContainer(2)) + ".[Li]");
				frag_smiles_mass.add(String.format("%.5f", sn4_mass + 7.0) + " " + sg.create(fragments.getAtomContainer(3)) + ".[Li]");
				frag_smiles_mass.add(String.format("%.5f", sn5_mass + 7.0) + " " + sg.create(fragments.getAtomContainer(4)) + ".[Li]");
				frag_smiles_mass.add(String.format("%.5f", sn6_mass + 7.0) + " " + sg.create(fragments.getAtomContainer(5)) + ".[Li]");
				frag_smiles_mass.add(String.format("%.5f", sn7_mass + 7.0) + " " + sg.create(fragments.getAtomContainer(6)) + ".[Li]");
				frag_smiles_mass.add(String.format("%.5f", sn8_mass + 7.0) + " " + sg.create(fragments.getAtomContainer(7)) + ".[Li]");
				
				if(sn7_mass == sn8_mass){
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass + 7.0), 600.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass + 7.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 2 3 (1 1)", (sn3_mass + 7.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 4 5 (1 1)", (sn5_mass + 7.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 6 7 (1 1)", (sn7_mass + 7.0), 999.0/999.0));
					
				}else{
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass + 7.0), 600.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass + 7.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)", (sn3_mass + 7.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 3 (1)", (sn4_mass + 7.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 4 (1)", (sn5_mass + 7.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 5 (1)", (sn6_mass + 7.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 6 (1)", (sn7_mass + 7.0), 999.0/999.0));
					peaks.add(String.format("%.5f %5f 7 (1)", (sn8_mass + 7.0), 999.0/999.0));
				}
				
			break;
			
			case TRIACYLGLYCEROLS:
				
				System.out.println(fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println((Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) + 7.0)  * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				
				adductType.add("[M+Li]+");
				
				// Watch out. Here, using the partition function, sn2 and sn3 seem to be interchanged.
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass + 7.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass + 7.0) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass + 7.0) + " " + sg.create(fragments.getAtomContainer(2)));
				
				if(sn1_mass != sn2_mass && sn1_mass != sn3_mass && sn2_mass != sn3_mass){
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass + 7.0), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass + 7.0), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)", (sn3_mass + 7.0), 500.0/999.0));					
				}else if(sn1_mass == sn2_mass && sn1_mass != sn3_mass){
					peaks.add(String.format("%.5f %5f 0 1 (1 1)", (sn1_mass + 7.0), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)", (sn3_mass + 7.0), 500.0/999.0));
				}else if(sn1_mass != sn2_mass && sn2_mass == sn3_mass){
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass + 7.0), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 1 2 (1 1)", (sn2_mass + 7.0), 500.0/999.0));
					
				} else if(sn1_mass == sn2_mass && sn1_mass == sn3_mass){
					peaks.add(String.format("%.5f %5f 0 1 2 (1 1 1)", (sn1_mass + 7.0), 500.0/999.0));
				}

				s_peaks = String.format("MW: %.5f", mass + 7) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 7) + "\n" + 
						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);	
				
				break;
				
			case MONOGALACTOSYLDIACYLGLYCEROLS:
				// MGDG
				
				System.out.println("Nr. of fragments: " + fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println((Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) - 1.0)  * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				
				adductType.add("[M-H]-");
				
				// Watch out. Here, using the partition function, sn2 and sn3 seem to be interchanged.
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				
				if(sn1_mass == sn2_mass){
					peaks.add(String.format("%.5f %5f 0 1 (1 1)", (sn1_mass - 1.0), 1.0));

				}else{
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass  - 1.0), 1.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass - 1.0), 1.0));					
				}

				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);				
				
				break;
				
			case DIGALACTOSYLDIACYLGLYCEROLS:
				// DGDG
				
				System.out.println("Nr. of fragments: " + fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println((Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) - 1.0)  * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				
				adductType.add("[M-H]-");
				
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				
				if(sn1_mass == sn2_mass){
					peaks.add(String.format("%.5f %5f 0 1 (1 1)", (sn1_mass - 1.0), 1.0));

				}else{
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass  - 1.0), 1.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass - 1.0), 1.0));					
				}

				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);						
				break;
				
				
			case SULFOQUINOVOSYLDIACYLGLYCEROLS:
				// SQDG
				System.out.println("Nr. of fragments: " + fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println((Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)) - 1.0)  * 100000)/100000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				
				adductType.add("[M-H]-");
				
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				
				if(sn1_mass == sn2_mass){
					peaks.add(String.format("%.5f %5f 0 1 (1 1)", (sn1_mass - 1.0), 1.0));

				}else{
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass  - 1.0), 1.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass - 1.0), 1.0));					
				}

				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);	
				break;
				
			case DIACYLATED_PHOSPHATIDYLINOSITOL_MONOMANNOSIDES:
				//  Ac2PIM1
				System.out.println("Nr. of fragments: " + fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println( String.format("%.5f", (Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l))  * 10000000)/10000000)) + "\t" + sg.create(fragments.getAtomContainer(l)) );
				}
				
				adductType.add("[M-H]-");
				
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;
				sn6_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(5)) * 100000)/100000;
				sn7_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000;
				sn8_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(7)) * 100000)/100000;
				sn9_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(8)) * 100000)/100000;

				frag_smiles_mass.add(String.format("%.5f", sn1_mass) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass) + " " + sg.create(fragments.getAtomContainer(4)));
				frag_smiles_mass.add(String.format("%.5f", sn6_mass) + " " + sg.create(fragments.getAtomContainer(5)));
				frag_smiles_mass.add(String.format("%.5f", sn7_mass) + " " + sg.create(fragments.getAtomContainer(6)));
				frag_smiles_mass.add(String.format("%.5f", sn8_mass) + " " + sg.create(fragments.getAtomContainer(7)));
				frag_smiles_mass.add(String.format("%.5f", sn9_mass) + " " + sg.create(fragments.getAtomContainer(8)));

				if(sn8_mass == sn9_mass){
					
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 2 3 (1)", (sn3_mass), 999.0/999.0));
					peaks.add(String.format("%.5f %5f 4 (1)", (sn5_mass), 600.0/999.0));
					peaks.add(String.format("%.5f %5f 5 6 (1)", (sn6_mass), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 7 8 (1)", (sn8_mass), 400.0/999.0));

				}else{
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)", (sn3_mass), 999.0/999.0));
					peaks.add(String.format("%.5f %5f 3 (1)", (sn4_mass), 300.0/999.0));
					peaks.add(String.format("%.5f %5f 4 (1)", (sn5_mass), 600.0/999.0));
					peaks.add(String.format("%.5f %5f 5 (1)", (sn6_mass), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 6 (1)", (sn7_mass), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 7 (1)", (sn8_mass), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 8 (1)", (sn9_mass), 400.0/999.0));	
				}

				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);	

				break;
//				
			case DIACYLATED_PHOSPHATIDYLINOSITOL_DIMANNOSIDES:
				// Ac2PIM2
				System.out.println("Nr. of fragments: " + fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println((Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l)))  * 10000000)/10000000 + "\t" + sg.create(fragments.getAtomContainer(l)));
				}
				
				adductType.add("[M-H]-");
	
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;
				sn6_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(5)) * 100000)/100000;
				sn7_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000;

				frag_smiles_mass.add(String.format("%.5f", sn1_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(4)));
				frag_smiles_mass.add(String.format("%.5f", sn6_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(5)));
				frag_smiles_mass.add(String.format("%.5f", sn7_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(6)));

				if(sn6_mass == sn7_mass){				
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 2 3 (1 1)", (sn3_mass), 999.0/999.0));
					peaks.add(String.format("%.5f %5f 4 (1)", (sn5_mass), 600.0/999.0));
					peaks.add(String.format("%.5f %5f 5 6 (1 1)", (sn6_mass), 400.0/999.0));
				}else{
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)", (sn3_mass), 999.0/999.0));
					peaks.add(String.format("%.5f %5f 3 (1)", (sn4_mass), 300.0/999.0));
					peaks.add(String.format("%.5f %5f 4 (1)", (sn5_mass), 600.0/999.0));
					peaks.add(String.format("%.5f %5f 5 (1)", (sn6_mass), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 6 (1)", (sn7_mass), 400.0/999.0));	
				}

				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);	
		
				break;
				
				
			case TRIACYLATED_PHOSPHATIDYLINOSITOL_DIMANNOSIDES:
				// Ac3PIM2
				System.out.println("Nr. of fragments: " + fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println( String.format("%.5f", (Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l))  * 10000000)/10000000)) + "\t" + sg.create(fragments.getAtomContainer(l)) );
				}
				

				adductType.add("[M-H]-");
	
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;
				sn6_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(5)) * 100000)/100000;
				sn7_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000;
				sn8_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(7)) * 100000)/100000;
				sn9_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(8)) * 100000)/100000;
				sn10_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(9)) * 100000)/100000;
				sn11_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(10)) * 100000)/100000;
				sn12_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(11)) * 100000)/100000;
				sn13_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(12)) * 100000)/100000;
				
//				System.out.println("sn1: " + sn11_mass);
//				System.out.println("sn2: " + sn12_mass);
//				System.out.println("sn3: " + sn13_mass);
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(4)));
				frag_smiles_mass.add(String.format("%.5f", sn6_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(5)));
				frag_smiles_mass.add(String.format("%.5f", sn7_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(6)));
				frag_smiles_mass.add(String.format("%.5f", sn8_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(7)));
				frag_smiles_mass.add(String.format("%.5f", sn9_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(8)));
				frag_smiles_mass.add(String.format("%.5f", sn10_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(9)));
				frag_smiles_mass.add(String.format("%.5f", sn11_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(10)));
				frag_smiles_mass.add(String.format("%.5f", sn12_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(11)));
				frag_smiles_mass.add(String.format("%.5f", sn13_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(12)));

				
				
				if((sn11_mass == sn12_mass) && (sn11_mass == sn13_mass)){	
					// Ac3PIM2(15:0/15:0/15:0)
					System.out.println("CASE 1");
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass - 1.0), 50.0/999.0));
					peaks.add(String.format("%.5f %5f 2 3 5 (1 1 1)", (sn3_mass - 1.0), 100.0/999.0));
					peaks.add(String.format("%.5f %5f 4 6 7 (1 1 1)", (sn6_mass - 1.0), 999.0/999.0));
					peaks.add(String.format("%.5f %5f 8 (1)", (sn9_mass - 1.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 9 (1)", (sn10_mass - 1.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 10 11 12 (1 1 1)", (sn11_mass - 1.0), 400.0/999.0));
				}
				
				else if ((sn11_mass != sn12_mass) && (sn11_mass == sn13_mass)){
					// Ac3PIM2(15:0/14:0/15:0)
					System.out.println("CASE 2");
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass - 1.0), 50.0/999.0));
					peaks.add(String.format("%.5f %5f 2 3 (1 1)", (sn3_mass - 1.0), 100.0/999.0));
					peaks.add(String.format("%.5f %5f 5 (1)", (sn6_mass - 1.0), 100.0/999.0));
					peaks.add(String.format("%.5f %5f 4 6 (1 1)", (sn5_mass - 1.0), 999.0/999.0));
					peaks.add(String.format("%.5f %5f 7 (1)", (sn8_mass - 1.0), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 8 (1)", (sn9_mass - 1.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 9 (1)", (sn10_mass - 1.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 10 (1)", (sn11_mass - 1.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 11 12 (1 1)", (sn12_mass - 1.0), 400.0/999.0));
					
				}
				else if((sn11_mass == sn12_mass) && (sn13_mass != sn12_mass)){
					// Ac3PIM2(15:0/14:0/14:0)
					System.out.println("CASE 3");
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass - 1.0), 50.0/999.0));
					peaks.add(String.format("%.5f %5f 3 5 (1 1)", (sn4_mass - 1.0), 100.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)", (sn3_mass - 1.0), 100.0/999.0));
					peaks.add(String.format("%.5f %5f 6 7 (1 1)", (sn7_mass - 1.0), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 4 (1)", (sn5_mass - 1.0), 999.0/999.0));
					peaks.add(String.format("%.5f %5f 8 (1)", (sn9_mass - 1.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 9 (1)", (sn10_mass - 1.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 12 (1)", (sn13_mass - 1.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 10 11 (1 1)", (sn11_mass - 1.0), 400.0/999.0));
	
				}
				else if((sn11_mass != sn12_mass) && (sn13_mass == sn12_mass)){
					// Ac3PIM2(14:0/14:0/16:0)
					System.out.println("CASE 4");
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass - 1.0), 50.0/999.0));
					peaks.add(String.format("%.5f %5f 2 3 (1 1)", (sn3_mass - 1.0), 100.0/999.0));
					peaks.add(String.format("%.5f %5f 4 6 (1 1)", (sn5_mass - 1.0), 999.0/999.0));
					peaks.add(String.format("%.5f %5f 5 (1)", (sn6_mass - 1.0), 100.0/999.0));
					peaks.add(String.format("%.5f %5f 7 (1)", (sn8_mass - 1.0), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 8 (1)", (sn9_mass - 1.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 9 (1)", (sn10_mass - 1.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 10 (1)", (sn11_mass - 1.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 11 12 (1 1)", (sn12_mass - 1.0), 400.0/999.0));

				}
				else if((sn11_mass != sn12_mass) && (sn11_mass != sn13_mass) && (sn12_mass != sn13_mass)){
					// Ac3PIM2(14:0/15:0/16:0)
					System.out.println("CASE 5");
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass - 1.0), 50.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)", (sn3_mass - 1.0), 100.0/999.0));
					peaks.add(String.format("%.5f %5f 3 (1)", (sn4_mass - 1.0), 100.0/999.0));
					peaks.add(String.format("%.5f %5f 4 (1)", (sn5_mass - 1.0), 999.0/999.0));
					peaks.add(String.format("%.5f %5f 5 (1)", (sn6_mass - 1.0), 100.0/999.0));
					peaks.add(String.format("%.5f %5f 6 (1)", (sn7_mass - 1.0), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 7 (1)", (sn8_mass - 1.0), 500.0/999.0));
					peaks.add(String.format("%.5f %5f 8 (1)", (sn9_mass - 1.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 9 (1)", (sn10_mass - 1.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 10 (1)", (sn11_mass - 1.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 11 (1)", (sn12_mass - 1.0), 400.0/999.0));
					peaks.add(String.format("%.5f %5f 12 (1)", (sn13_mass - 1.0), 400.0/999.0));
				
				}


				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);				
//				
				break;				
//				
//				
			case TETRACYLATED_PHOSPHATIDYLINOSITOL_DIMANNOSIDES:
				// Ac4PIM2
				
				System.out.println("Nr. of fragments: " + fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println( String.format("%.5f", (Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l))  * 10000000)/10000000)) + "\t" + sg.create(fragments.getAtomContainer(l)) );
				}

				adductType.add("[M-H]-");
	
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;
				sn6_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(5)) * 100000)/100000;
				sn7_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000;
				sn8_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(7)) * 100000)/100000;
				sn9_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(8)) * 100000)/100000;
				sn10_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(9)) * 100000)/100000;
				sn11_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(10)) * 100000)/100000;
				
//				System.out.println("sn1: " + sn11_mass);
//				System.out.println("sn2: " + sn12_mass);
//				System.out.println("sn3: " + sn13_mass);
				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(2)));
				frag_smiles_mass.add(String.format("%.5f", sn4_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(3)));
				frag_smiles_mass.add(String.format("%.5f", sn5_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(4)));
				frag_smiles_mass.add(String.format("%.5f", sn6_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(5)));
				frag_smiles_mass.add(String.format("%.5f", sn7_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(6)));
				frag_smiles_mass.add(String.format("%.5f", sn8_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(7)));
				frag_smiles_mass.add(String.format("%.5f", sn9_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(8)));
				frag_smiles_mass.add(String.format("%.5f", sn10_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(9)));
				frag_smiles_mass.add(String.format("%.5f", sn11_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(10)));

				if ((sn2_mass == sn3_mass) && (sn2_mass == sn4_mass) && (sn2_mass == sn5_mass)){
					// Ac4PIM2(16:0/16:0/16:0/16:0)
					System.out.println("CASE 1");
					// [M-H]-
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					// [M-H]-sn1 || [M-H]-sn2 || [M-H]-sn3 || [M-H]-sn4
					peaks.add(String.format("%.5f %5f 1 2 3 4 (1 1 1 1)", (sn2_mass - 1.0), 999.0/999.0));
					// [M-H]-sn1-sn2 || [M-H]-sn3-sn4
					peaks.add(String.format("%.5f %5f 5 7 (1 1)", (sn6_mass - 1.0), 100.0/999.0));
					// [M-H]-sn1-sn2-C3H5O || [M-H]-sn3-sn4-C3H5O
					peaks.add(String.format("%.5f %5f 6 8 (1 1)", (sn7_mass - 1.0), 300.0/999.0));
					// sn1 FA || sn2 FA
					peaks.add(String.format("%.5f %5f 9 10 (1 1)", (sn11_mass - 1.0), 400.0/999.0));
					
				}
				else if ((sn3_mass == sn4_mass) && (sn4_mass == sn5_mass) && (sn2_mass != sn3_mass)){
					// Ac4PIM2(14:0/15:0/15:0/15:0)
					System.out.println("CASE 2");
					// [M-H]-
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					// [M-H]-sn1
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass - 1.0), 999.0/999.0));
					// [M-H]-sn2 || [M-H]-sn3 || [M-H]-sn4
					peaks.add(String.format("%.5f %5f 2 3 4 (1 1 1)", (sn3_mass - 1.0), 500.0/999.0));
					// [M-H]-sn1-sn2
					peaks.add(String.format("%.5f %5f 5 (1)", (sn6_mass - 1.0), 100.0/999.0));
					// [M-H]-sn3-sn4
					peaks.add(String.format("%.5f %5f 7 (1)", (sn8_mass - 1.0), 100.0/999.0));					
					// [M-H]-sn1-sn2-C3H5O
					peaks.add(String.format("%.5f %5f 6 (1)", (sn7_mass - 1.0), 300.0/999.0));
					// [M-H]-sn3-sn4-C3H5O
					peaks.add(String.format("%.5f %5f 8 (1)", (sn9_mass - 1.0), 300.0/999.0));
					// sn2 FA
					peaks.add(String.format("%.5f %5f 9 (1)", (sn10_mass - 1.0), 400.0/999.0));
					// sn1 FA
					peaks.add(String.format("%.5f %5f 10 (1)", (sn11_mass - 1.0), 400.0/999.0));
					
				}
				else if ((sn2_mass == sn3_mass) && (sn2_mass == sn4_mass) && (sn2_mass != sn5_mass)){
					// Ac4PIM2(16:0/16:0/16:0/14:0)
					System.out.println("CASE 3");
					// [M-H]-
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					// [M-H]-sn4
					peaks.add(String.format("%.5f %5f 4 (1)", (sn5_mass - 1.0), 999.0/999.0));
					// [M-H]-sn1 || [M-H]-sn2 || [M-H]-sn3
					peaks.add(String.format("%.5f %5f 1 2 3 (1 1 1)", (sn2_mass - 1.0), 500.0/999.0));
					// [M-H]-sn3-sn4
					peaks.add(String.format("%.5f %5f 7 (1)", (sn8_mass - 1.0), 100.0/999.0));	
					// [M-H]-sn1-sn2
					peaks.add(String.format("%.5f %5f 5 (1)", (sn6_mass - 1.0), 100.0/999.0));
					// [M-H]-sn3-sn4-C3H5O
					peaks.add(String.format("%.5f %5f 8 (1)", (sn9_mass - 1.0), 300.0/999.0));
					// [M-H]-sn1-sn2-C3H5O
					peaks.add(String.format("%.5f %5f 6 (1)", (sn7_mass - 1.0), 300.0/999.0));
					// sn1 FA || sn2 FA
					peaks.add(String.format("%.5f %5f 9 10 (1 1)", (sn11_mass - 1.0), 400.0/999.0));
					
				}
				else if((sn2_mass == sn4_mass) && (sn3_mass == sn5_mass) && (sn2_mass != sn3_mass)){	
					// Ac4PIM2(14:0/15:0/14:0/15:0)
					System.out.println("CASE 4");
					// [M-H]-
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					// [M-H]-sn1
					peaks.add(String.format("%.5f %5f 1 3 (1 1)", (sn2_mass - 1.0), 999.0/999.0));
					// [M-H]-sn2
					peaks.add(String.format("%.5f %5f 2 4 (1 1)", (sn3_mass - 1.0), 500.0/999.0));
					// [M-H]-sn1-sn2
					peaks.add(String.format("%.5f %5f 5 7 (1 1)", (sn6_mass - 1.0), 100.0/999.0));
					// [M-H]-sn1-sn2-C3H5O
					peaks.add(String.format("%.5f %5f 6 8 (1 1)", (sn7_mass - 1.0), 300.0/999.0));
					// sn2 FA
					peaks.add(String.format("%.5f %5f 9 (1)", (sn10_mass - 1.0), 400.0/999.0));
					// sn1 FA
					peaks.add(String.format("%.5f %5f 10 (1)", (sn11_mass - 1.0), 400.0/999.0));
				}
				
				else if ((sn3_mass == sn4_mass) && (sn4_mass == sn5_mass) && (sn2_mass != sn3_mass)){
					// Ac4PIM2(14:0/16:0/16:0/14:0)
					System.out.println("CASE 5");
					// [M-H]-
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					// [M-H]-sn1 || [M-H]-sn4
					peaks.add(String.format("%.5f %5f 1 4 (1 1)", (sn2_mass - 1.0), 999.0/999.0));
					// [M-H]-sn2 || [M-H]-sn3
					peaks.add(String.format("%.5f %5f 2 3 (1 1)", (sn3_mass - 1.0), 500.0/999.0));
					// [M-H]-sn1-sn2 || [M-H]-sn3-sn4
					peaks.add(String.format("%.5f %5f 5 7 (1 1)", (sn6_mass - 1.0), 100.0/999.0));					
					// [M-H]-sn1-sn2-C3H5O || [M-H]-sn3-sn4-C3H5O
					peaks.add(String.format("%.5f %5f 6 8 (1)", (sn7_mass - 1.0), 300.0/999.0));
					// sn2 FA
					peaks.add(String.format("%.5f %5f 9 (1)", (sn10_mass - 1.0), 400.0/999.0));
					// sn1 FA
					peaks.add(String.format("%.5f %5f 10 (1)", (sn11_mass - 1.0), 400.0/999.0));
					
				}				

				else if((sn3_mass == sn4_mass) && (sn2_mass != sn3_mass) && (sn4_mass != sn5_mass) && (sn2_mass != sn5_mass)){
					// Ac4PIM2(14:0/15:0/15:0/16:0)
					System.out.println("CASE 6");
					// [M-H]-
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					// [M-H]-sn1
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass - 1.0), 999.0/999.0));
					// [M-H]-sn2 || [M-H]-sn3
					peaks.add(String.format("%.5f %5f 2 3 (1 1)", (sn3_mass - 1.0), 500.0/999.0));
					// [M-H]-sn4
					peaks.add(String.format("%.5f %5f 4 (1)", (sn5_mass - 1.0), 500.0/999.0));
					// [M-H]-sn1-sn2
					peaks.add(String.format("%.5f %5f 5 (1)", (sn6_mass - 1.0), 100.0/999.0));
					// [M-H]-sn3-sn4
					peaks.add(String.format("%.5f %5f 7 (1)", (sn8_mass - 1.0), 100.0/999.0));					
					// [M-H]-sn1-sn2-C3H5O
					peaks.add(String.format("%.5f %5f 6 (1)", (sn7_mass - 1.0), 300.0/999.0));
					// [M-H]-sn3-sn4-C3H5O
					peaks.add(String.format("%.5f %5f 8 (1)", (sn9_mass - 1.0), 300.0/999.0));
					// sn2 FA
					peaks.add(String.format("%.5f %5f 9 (1)", (sn10_mass - 1.0), 400.0/999.0));
					// sn1 FA
					peaks.add(String.format("%.5f %5f 10 (1)", (sn11_mass - 1.0), 400.0/999.0));
	
				}
				else if((sn2_mass != sn3_mass) && (sn2_mass != sn4_mass) && (sn3_mass != sn4_mass) && (sn4_mass == sn5_mass)){
					// Ac4PIM2(14:0/15:0/16:0/16:0)
					System.out.println("CASE 7");
					// [M-H]-
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					// [M-H]-sn1
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass - 1.0), 999.0/999.0));
					// [M-H]-sn2
					peaks.add(String.format("%.5f %5f 2 (1)", (sn3_mass - 1.0), 500.0/999.0));
					// [M-H]-sn3 || [M-H]-sn4
					peaks.add(String.format("%.5f %5f 3 4 (1 1)", (sn4_mass - 1.0), 500.0/999.0));
					// [M-H]-sn1-sn2
					peaks.add(String.format("%.5f %5f 5 (1)", (sn6_mass - 1.0), 100.0/999.0));
					// [M-H]-sn3-sn4
					peaks.add(String.format("%.5f %5f 7 (1)", (sn8_mass - 1.0), 100.0/999.0));					
					// [M-H]-sn1-sn2-C3H5O
					peaks.add(String.format("%.5f %5f 6 (1)", (sn7_mass - 1.0), 300.0/999.0));
					// [M-H]-sn3-sn4-C3H5O
					peaks.add(String.format("%.5f %5f 8 (1)", (sn9_mass - 1.0), 300.0/999.0));
					// sn2 FA
					peaks.add(String.format("%.5f %5f 9 (1)", (sn10_mass - 1.0), 400.0/999.0));
					// sn1 FA
					peaks.add(String.format("%.5f %5f 10 (1)", (sn11_mass - 1.0), 400.0/999.0));
	
				}
				else if((sn2_mass == sn3_mass) && (sn2_mass != sn4_mass) && (sn2_mass != sn5_mass) && (sn4_mass != sn5_mass)){
					// Ac4PIM2(16:0/16:0/17:0/14:0)
					System.out.println("CASE 8");
					// [M-H]-
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					// [M-H]-sn4
					peaks.add(String.format("%.5f %5f 4 (1)", (sn5_mass - 1.0), 500.0/999.0));
					// [M-H]-sn1 || [M-H]-sn2
					peaks.add(String.format("%.5f %5f 1 2 (1 1)", (sn2_mass - 1.0), 999.0/999.0));
					// [M-H]-sn3
					peaks.add(String.format("%.5f %5f 3 (1)", (sn4_mass - 1.0), 500.0/999.0));
					// [M-H]-sn3-sn4
					peaks.add(String.format("%.5f %5f 7 (1)", (sn8_mass - 1.0), 100.0/999.0));	
					// [M-H]-sn1-sn2
					peaks.add(String.format("%.5f %5f 5 (1)", (sn6_mass - 1.0), 100.0/999.0));
					// [M-H]-sn3-sn4-C3H5O
					peaks.add(String.format("%.5f %5f 8 (1)", (sn9_mass - 1.0), 300.0/999.0));
					// [M-H]-sn1-sn2-C3H5O
					peaks.add(String.format("%.5f %5f 6 (1)", (sn7_mass - 1.0), 300.0/999.0));
					// sn1 FA || sn2 FA
					peaks.add(String.format("%.5f %5f 10 (1)", (sn11_mass - 1.0), 400.0/999.0));
	
				}
				else if((sn2_mass != sn3_mass) && (sn2_mass == sn4_mass) && (sn2_mass == sn5_mass)){
					// Ac4PIM2(14:0/16:0/14:0/14:0)
					System.out.println("CASE 9");
					// [M-H]-
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					// [M-H]-sn1 || [M-H]-sn3 || [M-H]-sn4
					peaks.add(String.format("%.5f %5f 1 3 4 (1 1 1)", (sn2_mass - 1.0), 999.0/999.0));	
					// [M-H]-sn2
					peaks.add(String.format("%.5f %5f 2 (1)", (sn3_mass - 1.0), 500.0/999.0));
					// [M-H]-sn3-sn4
					peaks.add(String.format("%.5f %5f 7 (1)", (sn8_mass - 1.0), 100.0/999.0));
					// [M-H]-sn1-sn2
					peaks.add(String.format("%.5f %5f 5 (1)", (sn6_mass - 1.0), 100.0/999.0));	
					// [M-H]-sn3-sn4-C3H5O
					peaks.add(String.format("%.5f %5f 8 (1)", (sn9_mass - 1.0), 300.0/999.0));
					// [M-H]-sn1-sn2-C3H5O
					peaks.add(String.format("%.5f %5f 6 (1)", (sn7_mass - 1.0), 300.0/999.0));
					// sn2 FA
					peaks.add(String.format("%.5f %5f 9 (1)", (sn10_mass - 1.0), 400.0/999.0));
					// sn1 FA
					peaks.add(String.format("%.5f %5f 10 (1)", (sn11_mass - 1.0), 400.0/999.0));
					
				}

				else if((sn2_mass != sn3_mass) && (sn2_mass != sn4_mass) && (sn2_mass != sn5_mass) && (sn3_mass != sn4_mass) && (sn3_mass != sn5_mass) && (sn4_mass != sn5_mass) ){
					// Ac4PIM2(14:0/15:0/17:0/18:2)
					System.out.println("CASE 10");
					// [M-H]-
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass - 1.0), 200.0/999.0));
					// [M-H]-sn1
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass - 1.0), 999.0/999.0));
					// [M-H]-sn2
					peaks.add(String.format("%.5f %5f 2 (1)", (sn3_mass - 1.0), 500.0/999.0));
					// [M-H]-sn3
					peaks.add(String.format("%.5f %5f 3 (1)", (sn4_mass - 1.0), 500.0/999.0));
					// [M-H]-sn4
					peaks.add(String.format("%.5f %5f 4 (1)", (sn5_mass - 1.0), 500.0/999.0));
					// [M-H]-sn1-sn2
					peaks.add(String.format("%.5f %5f 5 (1)", (sn6_mass - 1.0), 100.0/999.0));				
					// [M-H]-sn1-sn2-C3H5O
					peaks.add(String.format("%.5f %5f 6 (1)", (sn7_mass - 1.0), 300.0/999.0));
					// [M-H]-sn3-sn4
					peaks.add(String.format("%.5f %5f 7 (1)", (sn8_mass - 1.0), 100.0/999.0));	
					// [M-H]-sn3-sn4-C3H5O
					peaks.add(String.format("%.5f %5f 8 (1)", (sn9_mass - 1.0), 300.0/999.0));
					// sn2 FA
					peaks.add(String.format("%.5f %5f 9 (1)", (sn10_mass - 1.0), 400.0/999.0));
					// sn1 FA
					peaks.add(String.format("%.5f %5f 10 (1)", (sn11_mass - 1.0), 400.0/999.0));
				
				}


				s_peaks = String.format("MW: %.5f", mass - 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass - 1.0) + "\n" + 
						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);				
				break;
//				
////				
////			case DIPHOSPHORYLATED_HEXAACYL_LIPID_A:
////				
////				break;
//		
			case ACYL_CARNITINES:
				
				System.out.println("Nr. of fragments: " + fragments.getAtomContainerCount());
				for(int l = 0; l < fragments.getAtomContainerCount(); l++){
					System.out.println( String.format("%.5f", (Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(l))  * 10000000)/10000000)) + "\t" + sg.create(fragments.getAtomContainer(l)) );
				}

				
				// C3H9N fragment
				sn1_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(0)) * 100000)/100000;
				// (+ CH2â€“CH=CHCOOH) fragment
				sn2_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(1)) * 100000)/100000;
				// Carnitine
				sn3_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(2)) * 100000)/100000;
//				sn4_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(3)) * 100000)/100000;
//				sn5_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(4)) * 100000)/100000;
//				sn6_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(5)) * 100000)/100000;
//				sn7_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(6)) * 100000)/100000;
//				sn8_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(7)) * 100000)/100000;
//				sn9_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(8)) * 100000)/100000;
//				sn10_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(9)) * 100000)/100000;
//				sn11_mass = Math.floor(acm.getNaturalExactMass(fragments.getAtomContainer(10)) * 100000)/100000;

				
				frag_smiles_mass.add(String.format("%.5f", sn1_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(0)));
				frag_smiles_mass.add(String.format("%.5f", sn2_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(1)));
				frag_smiles_mass.add(String.format("%.5f", sn3_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(2)));
//				frag_smiles_mass.add(String.format("%.5f", sn4_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(3)));
//				frag_smiles_mass.add(String.format("%.5f", sn5_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(4)));
//				frag_smiles_mass.add(String.format("%.5f", sn6_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(5)));
//				frag_smiles_mass.add(String.format("%.5f", sn7_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(6)));
//				frag_smiles_mass.add(String.format("%.5f", sn8_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(7)));
//				frag_smiles_mass.add(String.format("%.5f", sn9_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(8)));
//				frag_smiles_mass.add(String.format("%.5f", sn10_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(9)));
//				frag_smiles_mass.add(String.format("%.5f", sn11_mass - 1.0) + " " + sg.create(fragments.getAtomContainer(10)));
				
				SmartsPattern smp = SmartsPattern.create("[#8;A;X2,X1-][#6;X3](-[#6,#1])=[O;X1]", bldr);
				int nrOfCarboxylGroups = StructureExplorer.fragmentCount(smp, molecule);
				System.out.println("nrOfCarboxylGroups: " + nrOfCarboxylGroups);
				
				if(nrOfCarboxylGroups == 2){
					
					peaks.add(String.format("%.5f %5f 0 (1)", (sn1_mass + 1.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 1 (1)", (sn2_mass + 1.0), 200.0/999.0));
					peaks.add(String.format("%.5f %5f 2 (1)", (sn3_mass + 1.0), 200.0/999.0));
				}

				
				s_peaks = String.format("MW: %.5f", mass + 1.0) + "\n" + String.format("PRECURSORMZ: %.5f",mass + 1.0) + "\n" + 
						"Comment:" + "\n" + String.format("Num Peaks: %2d",peaks.size());
				metadata.add(s_peaks);
				break;
				
//			case NIL:
//				
//				break;
				
		}
		
		results.put("molName", molName);
		results.put("peaks_list", peaks);
		results.put("metadata", metadata);
		results.put("fragments", frag_smiles_mass);
		results.put("adductType", adductType);
		
		return results;
	}
	
	
	
	public void saveSingleCfmidLikeMSPeakListFromSDF(String sourceFilename, IChemObjectBuilder bldr) throws Exception{
		
		Path path = Paths.get(sourceFilename);
		
		String directory = path.getParent().toAbsolutePath().toString();
		
		FileWriter fwerr = new FileWriter(directory + "/missing.log");
		BufferedWriter bwerr = new BufferedWriter(fwerr);		
		
		System.out.println("PATH: " + directory);
		IteratingSDFReader sdfReader = new IteratingSDFReader(new FileReader(sourceFilename), bldr);
		int mol_nr = 0;
		while (sdfReader.hasNext()) {
			IAtomContainer molecule = sdfReader.next();
			LinkedHashMap<String,ArrayList<String>> peaksResults = generateCfmidLikeMSPeakList(molecule);
			ArrayList<String> peaks = peaksResults.get("peaks_list");
			ArrayList<String> frags = peaksResults.get("fragments");
			
	
			mol_nr++;
			String name = peaksResults.get("molName").get(0);
			if(name == null || name.trim().length()==0){
				name = "molecule_" + String.valueOf(mol_nr);
				
			}
			
			if(peaks.size() != 0){

				FileWriter fw = new FileWriter(directory + "/" + name.replace("/", "_") + ".log");
				BufferedWriter bw = new BufferedWriter(fw);
				
				bw.write("energy0");
				bw.newLine();
				for(int p = 0; p < peaks.size();p++){
					bw.write(peaks.get(p));
					bw.newLine();
				}
			
				bw.newLine();
				
				// saving the fragment list
				for(int k = 0; k < frags.size(); k++){
					bw.write(k +" " + frags.get(k));
					bw.newLine();
				}
				bw.newLine();
				bw.write(peaksResults.get("adductType").get(0));
				bw.newLine();
				
				bw.close();	
			} else{
				bwerr.write(name);
				bwerr.newLine();
			}
			
		}
		sdfReader.close();
		fwerr.close();
		
		System.out.println("\nTotal nr. of molecules: " + String.valueOf(mol_nr));
	}

	
	
	
	/**
	 * Take a molecule and save it's MS spectrum into the main data directory.
	 * @param peaksResults: LinkedHashMap object that contains the peak 
	 * list, metadata, and the name associated to the molecule.
	 * 
	 * @throws REngineException
	 * @throws REXPMismatchException
	 */
	
	public void generateGraphFromPeakListAndSaveToDir(LinkedHashMap<String,ArrayList<String>> peaksResults) throws REngineException, REXPMismatchException{
		generateGraphFromPeakListAndSaveToDir(peaksResults, System.getProperty("user.dir")+"/data", true);
	}

	public void generateGraphFromPeakListAndSaveToDir(LinkedHashMap<String,ArrayList<String>> peaksResults, String targetDirectory) throws REngineException, REXPMismatchException{
		generateGraphFromPeakListAndSaveToDir(peaksResults, targetDirectory, true);
	}
	
	public void generateGraphFromPeakListAndSaveToDir(LinkedHashMap<String,ArrayList<String>> peaksResults, boolean addBarLabels) throws REngineException, REXPMismatchException{
		generateGraphFromPeakListAndSaveToDir(peaksResults, System.getProperty("user.dir")+"/data", addBarLabels);
	}
	
	/**
	 * Take a molecule and save it's MS spectrum into a given directory.
	 * @param peaksResults: LinkedHashMap object that contains the peak 
	 * list, metadata, and the name associated to the molecule.
	 * @param targetDirectory: The path to the target directory. By default, it is the 'data' directory.
	 * @throws REngineException
	 * @throws REXPMismatchException
	 */
	
	public void generateGraphFromPeakListAndSaveToDir(LinkedHashMap<String,ArrayList<String>> peaksResults, String targetDirectory, boolean addBarLabels) throws REngineException, REXPMismatchException{
		
		ArrayList<String> peaks = peaksResults.get("peaks_list");
		ArrayList<String> mz 		= new ArrayList<String>();
		ArrayList<String> intensity = new ArrayList<String>();
		ArrayList<String> labels 	= new ArrayList<String>();
		String title = peaksResults.get("molName").get(0);

		// Create new R connection
		// Also make sure to start a connection within a R session: Rserve(args="--no-save").
		// Other options for the arguments are '--save', and '--vanilla'
		
		RConnection connection = new RConnection();

		
		// Create arraylists for intensities, m/z ratios, and labels, which will 
		// be converted into R vectors later on.
		for(int i=0; i<peaks.size()-1; i++){
			ArrayList<String> values = new ArrayList<String>(Arrays.asList(peaks.get(i).split(" ")));
			values.remove("");
			
			mz.add(values.get(0));
			intensity.add(values.get(1));
			labels.add(peaks.get(i).split("\"")[1]);	
		}
		
//		System.out.println("METADATA");
//		System.out.println(peaksResults.get("metadata").get(0));
		
		
		//create String objects from these arraylists, which will be used as R commands
		// to be evaluated.
		
		String mzVectorStr="";
		String intVectorStr="";
		String lbVectorStr="'";
		

		for(int m = 0; m<mz.size(); m++){
			if(m == mz.size() - 1){
				mzVectorStr = mzVectorStr.concat(mz.get(m));
			}
				
			else
				mzVectorStr = mzVectorStr.concat(mz.get(m) + ",");	
		}
		
		for(int n = 0; n < intensity.size(); n++){
			if(n == intensity.size() - 1){
				intVectorStr = intVectorStr.concat(intensity.get(n));			
			}

			else
				intVectorStr = intVectorStr.concat(intensity.get(n) + ",");
		}
		
		lbVectorStr.concat("'");
		for(int p = 0; p < intensity.size(); p++){
			if(p == intensity.size() - 1)
				lbVectorStr = lbVectorStr.concat(labels.get(p) + "'");
			else
				lbVectorStr = lbVectorStr.concat(labels.get(p) + "','");
		}
		
		System.out.println("mz<-c(" + mzVectorStr + ")");
		System.out.println("intensity<-c(" + intVectorStr + ")");
		System.out.println("labels<-c(" + lbVectorStr + ")");
		
		//Generate plot and save to .png file using R.
		
		connection.eval("mz<-c(" + mzVectorStr + ")");
		connection.eval("intensity<-c(" + intVectorStr + ")");
		connection.eval("labels<-c(" + lbVectorStr + ")");
		connection.eval("cpdData <-data.frame(m_z = mz, intensity = intensity, labels = labels)");
		connection.eval("cpdData$normalized<-round((cpdData$intensity/max(cpdData$intensity)) * 100)");
		
		if(title.length()==0){
			title = "molecule";
		}
		
		connection.eval("png('" + targetDirectory + "/" + title.replace("/", "_").replace(":", "_") + ".png" + "')");
		connection.eval("colors<-ifelse(cpdData$normalized==max(cpdData$normalized),'blue','red')");
		connection.eval("par(cex=0.9,cex.sub=0.8, cex.main = 1)");
		
		System.out.println("LABELS: " + connection.eval("cpdData$labels").asString());
		System.out.println( connection.eval("length(cpdData$labels)").asString());
		
		connection.eval("plot(cpdData$m_z,cpdData$normalized, type='h', xlim=c(0,max(cpdData$m_z)+200), ylim=c(0,150), xlab = 'm/z', ylab = 'Relative intensity (%)',  yaxs = 'i', yaxt = 'n', col = colors, width = 40 * rep(1,length(cpdData$m_z)),  main='" + title +"')");

		if(addBarLabels){
			connection.eval("text(cpdData$m_z, cpdData$normalized, labels=as.character(cpdData$labels), adj=c(-0.1,0.8), srt=90)");
		}
		
		connection.eval("axis(2, at = c(0, 20, 40, 60, 80, 100), labels = c(0, 20, 40, 60, 80, 100))");     
        connection.eval("dev.off()");
        
        connection.close();
	}
	

	public void generateSpectraFromPeakListAndSaveToDir(ArrayList<LinkedHashMap<String,ArrayList<String>>> allPeaks) throws REngineException, REXPMismatchException {
		generateSpectraFromPeakListAndSaveToDir(allPeaks,System.getProperty("user.dir")+"/data", true);
	}
	
	public void generateSpectraFromPeakListAndSaveToDir(ArrayList<LinkedHashMap<String,ArrayList<String>>> allPeaks, String targetDirectory) throws REngineException, REXPMismatchException {
		generateSpectraFromPeakListAndSaveToDir(allPeaks, targetDirectory, true);
	}
	
	public void generateSpectraFromPeakListAndSaveToDir(ArrayList<LinkedHashMap<String,ArrayList<String>>> allPeaks, boolean addBarLabels) throws REngineException, REXPMismatchException {
		generateSpectraFromPeakListAndSaveToDir(allPeaks, System.getProperty("user.dir")+"/data", addBarLabels);
	}	
	
	public void generateSpectraFromPeakListAndSaveToDir(ArrayList<LinkedHashMap<String,ArrayList<String>>> allPeaks, String targetDirectory, boolean addBarLabels) throws REngineException, REXPMismatchException {
		
		for(int i = 0; i < allPeaks.size(); i++){
			generateGraphFromPeakListAndSaveToDir(allPeaks.get(i), targetDirectory, addBarLabels);
		}
	}
	
}

